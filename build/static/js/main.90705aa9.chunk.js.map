{"version":3,"sources":["components/Controls/Controls.module.scss","components/Panel/Panel.module.scss","components/Hint/Hint.module.scss","components/App/App.module.scss","components/Completions/Completions.module.scss","components/Entities/Entities.module.scss","components/SideColumn/SideColumn.module.scss","components/Waveform/Waveform.module.scss","components/TextHighlight/TextHighlight.module.scss","interfaces/object/TextRegion/TextRegion.module.scss","core/Registry.js","core/Requests.js","utils/unique.js","core/Helpers.js","core/Tree.js","utils/utilities.js","utils/colors.js","utils/date.js","utils/index.js","utils/debounce.js","utils/styles.js","components/Completions/Completions.js","components/Hint/Hint.js","components/Controls/Controls.js","components/Panel/Panel.js","components/Settings/Settings.js","components/Debug.js","components/Node.js","components/Relations.js","components/Entities/Entities.js","components/Entity/Entity.js","components/SideColumn/SideColumn.js","core/Types.js","interfaces/visual/View.js","core/Template.js","interfaces/mixins/ProcessAttrs.js","interfaces/visual/Table.js","interfaces/visual/Header.js","interfaces/visual/HyperText.js","components/Dialog/Dialog.js","interfaces/visual/Dialog.js","interfaces/object/Audio.js","components/Waveform/Waveform.js","interfaces/mixins/Regions.js","interfaces/mixins/Normalization.js","interfaces/control/Label.js","interfaces/mixins/SelectedModel.js","interfaces/control/Labels.js","interfaces/control/Rating.js","interfaces/object/AudioRegion.js","interfaces/object/AudioPlus.js","interfaces/control/Rectangle.js","interfaces/control/RectangleLabels.js","interfaces/object/RectRegion.js","interfaces/object/PolygonPoint.js","interfaces/control/Polygon.js","interfaces/control/PolygonLabels.js","interfaces/object/PolygonRegion.js","interfaces/object/Image.js","components/TextHighlight/Range.js","components/TextNode/TextNode.js","components/TextHighlight/Node.js","components/TextHighlight/UrlNode.js","components/TextHighlight/EmojiNode.js","components/TextHighlight/TextHighlight.js","interfaces/object/TextRegion.js","interfaces/object/Text.js","interfaces/control/Choice.js","components/Choice/Choice.js","interfaces/control/Choices.js","interfaces/object/TextAreaRegion.js","interfaces/control/TextArea.js","interfaces/control/List.js","interfaces/control/Ranker.js","components/App/App.js","serviceWorker.js","stores/TaskStore.js","core/TimeTraveller.js","core/Hotkey.js","stores/RelationStore.js","stores/RegionStore.js","stores/CompletionStore.js","stores/AppStore.js","env/prod.js","env/config-development.js","env/dev.js","index.js","components/Entity/Entity.module.scss","components/Dialog/Dialog.module.scss"],"names":["module","exports","skip","task","container","block","main","pushable","hide-dd-icon","drag-handle","noselect","common-container","functional-buttons","editor-side-column","editor","menu","content","buttons","item","card","progress","wave","state","Registry","_Registry","Object","classCallCheck","this","tags","models","views","views_models","tag","model","view","push","name","values","modelName","Error","keys","join","wrapperRequest","url","method","headers","body","window","fetch","credentials","then","response","res","status","json","Requests","fetcher","Accept","poster","Content-Type","remover","patch","guidGenerator","nanoid","cloneNode","node","snapshot","getSnapshot","getType","create","objectSpread","id","restoreNewsnapshot","fromModel","renderItem","el","View","getViewByModel","react_default","a","createElement","key","Tree","cloneReactTree","items","attrs","clone","children","React","Children","forEach","child","props","moreProps","cloneElement","renderChildren","length","map","treeToModel","html","buildData","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","attr","value","err","return","attrsToProps","nodeName","htmlSelfClosingTags","split","newData","i","edsplit","editSelfClosingTags","replace","document","parse5","parseFragment","root","childNodes","addNode","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","chld","findInterface","tree","fn","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","findParentOfType","obj","classes","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","c","p","getParentOfType","filterChildrenOfType","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","cssConverter","style","firstIndexOfColon","result","attributes","indexOf","substring","x","toUpperCase","isString","String","isStringEmpty","isStringJSON","JSON","parse","e","getUrl","text","stringToTest","slice","match","exec","toTimeString","ms","Date","toUTCString","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexToRGBA","hex","opacity","r","g","b","parseInt","concat","colorToRGBA","alpha","toLowerCase","convertToRGBA","charAt","stringToColor","str","hash","charCodeAt","color","toString","substr","msToHMS","seconds","hours","Math","floor","prettyDate","time","test","date","diff","getTime","day_diff","isNaN","ceil","utils","Checkers","Colors","UDate","debounce","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","setTimeout","apply","styleToProp","styles","filter","trim","reduce","styleObj","defineProperty","Completion","observer","_ref","store","List","Item","backgroundColor","selected","padding","onClick","ev","completionStore","selectCompletion","Content","Header","as","pk","Description","createdAgo","Utils","createdDate","createdBy","className","es_button","type","preventDefault","deleteCompletion","honeypot","removeHoneypot","ghost","setHoneypot","Completions","title","bodyStyle","divided","relaxed","savedCompletions","Component","Hint","localClass","data-copy","copy","inject","clear","display","justifyContent","alignItems","hasInterface","skipTask","settings","enableHotkeys","enableTooltips","Hint_Hint","icon","sendTask","submit","history","canUndo","undo","canRedo","redo","reset","setPrelabeling","resetPrelabeling","showingDescription","closeDescription","openDescription","toggleSettings","modal","visible","showingSettings","footer","onCancel","es_checkbox","defaultChecked","onChange","toggleHotkeys","toggleTooltips","DebugComponent","_this2","self","completion","Button","basic","setState","stringify","toJSON","serializeCompletion","deserializeCompletion","addInitialCompletion","project","resetState","addTask","addGeneratedCompletion","markLoading","traverseTree","updateValue","Form","TextArea","target","Node","click","getRoot","regionStore","unselectAll","selectRegion","textDecorationLine","textDecorationStyle","href","start","toFixed","end","_value","w","width","scaleX","y","height","scaleY","NodeMinimal","_ref2","react","Relation","rl","isValidReference","node1","node2","marginBottom","onMouseOver","toggleHighlight","onMouseOut","Node_NodeMinimal","deleteRelation","marginLeft","relations","relationStore","Relations_Relation","Entities","regions","paddingLeft","deleteAllRegions","region","toggleHightlight","RenderStates","_render","s","element","labels","getSelectedNames","bgColor","getSelectedColor","getSelectedString","states","highlightedNode","normalization","cursor","deleteNormalization","Entity_RenderStates","button","startRelationMode","setNormalizationMode","unselectRegion","deleteRegion","normalizationMode","marginTop","onSubmit","setNormalization","normInput","Input","setNormInput","placeholder","Entity","Relations","oneOf","arr","types","union","dispatcher","sn","find","val","getModelByTag","Types","unionArray","maybeNull","array","allModelsTypes","modelsArr","results","isType","nt","getParentOfTypeString","parent","getParent","Array","isArray","_loop","v","_ret","TagAttrs","optional","string","backgroundcolor","margin","Model","identifier","ViewModel","compose","HtxView","marginRight","addTag","variableNotation","variable","_index","is","runTemplate","options","re","reExp","code","add","line","js","index","Function","console","error","message","ProcessAttrsMixin","actions","dataObj","size","TableModel","HtxTable","Table","celled","collapsing","Body","k","Row","Cell","Subheader","number","underline","boolean","HeaderModel","HtxHeader","typography","Title","level","fromStateJSON","choices","names","get","from_name","HyperTextActions","HyperTextModel","HtxHyperTextView","dangerouslySetInnerHTML","__html","DialogView","hint","selectedStyle","bg","block_selected","background","maxWidth","Replica","DialogActions","DialogModel","HtxDialogView","empty","ind","Dialog_DialogView","flexFlow","maxHeight","overflowY","paddingRight","divider","dashed","AudioModel","HtxAudioView","controls","src","HtxAudio","formatTimeCallback","pxPerSec","Number","minutes","secondsStr","round","timeInterval","primaryLabelInterval","secondaryLabelInterval","Waveform","_this","possibleConstructorReturn","getPrototypeOf","call","playing","pos","colors","waveColor","progressColor","$el","ReactDOM","findDOMNode","$waveform","querySelector","RegionsPlugin","dragSelection","slop","wavesurfer","WaveSurfer","backend","plugins","TimelinePlugin","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","CursorPlugin","wrapper","showTime","load","on","reg","_region","onMouseLeave","addRegion","onUpdateEnd","play","slider","oninput","zoom","onCreate","handlePlay","onLoad","RegionsMixin","highlighted","setHighlightedNode","relationMode","stopRelationMode","onClickRegion","addRelation","deleteNodeRelation","setHighlight","NormalizationMixin","alias","hotkey","showalias","aliasstyle","selectedcolor","toggleSelected","sel","shouldBeUnselected","markSelected","onHotKey","LabelModel","HtxLabelView","SelectedModelMixin","selectedLabels","isSelected","findLabel","joinstr","toname","choice","enumeration","headerprefix","selectionstyle","pid","toStateJSON","to_name","l","label","LabelsModel","HtxLabels","maxrating","rating","handleRate","increaseValue","RatingModel","HtxRating","Rating","defaultRating","maxRating","onRate","clearable","fontSize","AudioPlusModel","regionbg","selectedregionbg","buildTree","source","_ws_region","update","border","beforeDestroy","remove","list","AudioRegionModel","haszoom","rangeValue","toNames","activeStates","findRegion","_ws","setRangeValue","ws_region","find_r","clonedStates","ws","wsCreated","Waveform_Waveform","playPause","min","max","HtxAudioPlus","fillcolor","strokewidth","strokecolor","canrotate","hasStates","RectangleModel","rectanglelabels","Composition","RectangleLabelsModel","HtxRectangleLabels","rotation","wp","hp","sw","sh","coordstype","ImageModel","setSelected","coordsInside","rx","ry","rw","rh","setPosition","setScale","addState","setFill","fill","updateImageSize","from","stageWidth","stageHeight","RectRegionModel","HtxRectangle","wwidth","wheight","onChangedPosition","naturalWidth","naturalHeight","h","ReactKonva","assign","onTransformEnd","t","getAttr","onDragEnd","dragBoundFunc","stage","_stageRef","draggable","PolygonPoint","init_x","init_y","afterCreate","movePoint","_movePoint","handleMouseOverStartPoint","closed","points","setX","setY","scale","small","medium","large","setMouseOverStartPoint","handleMouseOutStartPoint","PolygonPointView","stroke","startPointAttr","hitStrokeWidth","dragOpts","mouseOverStartPoint","onDragStart","onDragMove","radius","strokeWidth","dragOnTop","pointsize","pointstyle","PolygonModel","polygonlabels","PolygonLabelsModel","HtxPolygonLabels","fromName","isCW","linePoints","flatten","flat","toFlatten","findPolyOutline","left","acc","loc","right","top","bottom","inside","vs","j","xi","yi","xj","yj","readOnlyError","addPoint","closePoly","_addPoint","insertPoint","insertIdx","splice","canClose","p1","p2","_self$parent","perc_w","perc_h","perc_points","PolygonRegionModel","HtxPolygon","redraw","setDragMode","setActivePolygon","cancelBubble","resize","maxwidth","integer","selectedShape","safeReference","activePolygon","shapes","controlButton","controlButtonType","poly","updateIE","_ev$target","_setStageRef","ref","_deleteSelectedShape","destroy","shape","_addShape","onImageClick","_addRect","_addPoly","rectstrokecolor","wx","evt","offsetX","wy","offsetY","__addRect","rect","parseFloat","dragMode","shapeModel","TransformerComponent","checkNode","transformer","getStage","selectedShapeName","detach","getLayer","batchDraw","selectedNode","findOne","attachTo","resizeEnabled","rotateEnabled","anchorSize","HtxImageView","handleDblClick","handleOnClick","handleStageMouseDown","_this$props","divStyle","onDblClick","onMouseDown","Image_TransformerComponent","HtxImage","Range","TextNode","data-position","position","overlap","keyNode","HtxTextNode","range","highlightStyle","charIndex","getRangeKey","getKey","getStyle","overlapItem","includes","reduceRight","TextNode_TextNode","UrlNode","wordWrap","EmojiNode","TextHighlight","dismissMouseUp","ranges","onMouseOverHighlightedWord","nl","char","arrOverlap","toConsumableArray","TextHighlight_EmojiNode","TextHighlight_UrlNode","enabled","getSelection","selectionContents","getRangeAt","cloneRange","cloneContents","virtualDiv","appendChild","elementsWithSup","getElementsByTagName","innerText","selection","createRange","startContainer","parentNode","dataset","endContainer","startContainerPosition","endContainerPosition","rangeObj","onTextHighlighted","event","mouseEvent","bind","letterGroup","textCharIndex","rangeRenderer","isEmoji","getUrlNode","getEmojiNode","getLetterNode","lastRange","newText","getRange","emojiRegex","getNode","rangeCharIndex","getRanges","onMouseUp","onMouseEnter","onDoubleClick","TextModel","highlightStates","TextRegionModel","RegionState","localState","selectedString","outline","data-hint","HtxTextRegion","labelColor","markStyle","borderRadius","regionStates","TextRegion_RegionState","hover","selelectwithoutlabel","hidden","adjustselection","selectionenabled","_addRegion","params","m","HtxTextView","components_TextHighlight_TextHighlight","adjustSelection","renderRegion","HtxText","isCheckbox","ChoicesModel","ChoiceModel","HtxChoice","cStyle","Checkbox","checked","Radio","showinline","HtxChoices","Group","inline","grouped","TextAreaModel","TextAreaRegionModel","HtxTextAreaRegion","Message","allowSubmit","maxsubmissions","submissionsNum","showSubmit","num","setValue","addText","beforeSend","deleteText","HtxTextArea","ListItemModel","idx","setBG","setIdx","axis","lockaxis","elementvalue","elementtag","sortedhighlightcolor","setUpdate","vals","moveItems","oldIndex","newIndex","arrayMove","ranked","sort","weights","item_weight","ListModel","DragHandle","sortableHandle","isMobileDevice","orientation","navigator","userAgent","SortableText","SortableElement","classNames","image","alt","audio","userSelect","SortableList","SortableContainer","_ref3","HtxListView","_ref4","onSortEnd","HtxList","RankerItemModel","sortable","RankerModel","Ranker_DragHandle","Ranker_SortableText","HtxRankerView","Ranker_SortableList","HtxRanker","App","_Component","inherits","createClass","es_result","spin","isLoading","renderLoader","noTask","renderNothingToLabel","labeledSuccess","renderSuccess","currentCompletion","renderNoCompletion","Settings","index_module","Panel","Segment","description","minWidth","Controls","components_Completions_Completions","SideColumn","Boolean","location","hostname","TaskStore","identifierNumber","app","Utilities","TimeTraveller","frozen","undoIdx","targetPath","createdIdx","isFrozen","frozenIdx","targetStore","snapshotDisposer","skipNextUndoState","freeze","addUndoState","ss","resolvePath","getEnv","onSnapshot","applySnapshot","set","_hotkeys_map","Hotkey","addKey","keymaster","unbindAll","_i","_Object$keys","unbind","makeComb","combs","comb","hasOwnProperty","setScope","scope","reference","findRelations","nodesRelated","from_id","to_id","deserializeRelation","unhighlightAll","toISOString","RelationStore","RegionStore","HtxObjectModel","reinitHistory","_updateServerState","_relationObj","cb","visitNode","toModel","completions","was_generated","_deleteCompletion","flow","regenerator_default","mark","wrap","_context","prev","sent","t0","stop","destroyCompletion","addCompletion","completionModel","config","expert","firstName","lastName","addSavedCompletion","created_ago","created_username","UserStore","SettingsModel","enablePanelHotkeys","togglePanelHotkeys","Task","taskID","interfaces","CompletionStore","projectID","debug","alert","post","setDescription","loadTask","_loadTask","_context2","Response","abrupt","was_cancelled","comp","_context3","_context4","loading","initializeStore","generatedCompletions","prod","getData","taskData","editorAppConfig","expertData","debugEditor","editorInterfaces","preRender","explore","getState","rootElement","getElementById","innerHTML","configEnv","default","meta","accuracy","created_at","updated_at","is_labeled","exposed","gptc","ner","texta","model_version","score","bbox","image_url","completed_by","cda","dialog","dialoga","T","search","templateData","dev","Env","Prod","Dev","AppStore","log","Htx","render","components_App_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90705aa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skip\":\"Controls_skip__1MH5a\",\"task\":\"Controls_task__uHrO8\",\"container\":\"Controls_container__2MMJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Panel_container__3j8Ml\",\"block\":\"Panel_block__1rZZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Hint_main__11cYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"App_pushable__9VpzN\",\"hide-dd-icon\":\"App_hide-dd-icon__1eju5\",\"drag-handle\":\"App_drag-handle__1u_JX\",\"noselect\":\"App_noselect__3TJvL\",\"common-container\":\"App_common-container__20tb0\",\"functional-buttons\":\"App_functional-buttons__yQZwb\",\"editor-side-column\":\"App_editor-side-column__1sRAL\",\"editor\":\"App_editor__1R7U9\",\"menu\":\"App_menu__1lHSz\",\"content\":\"App_content__YPghD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Completions_buttons__1m7au\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Entities_item__2L2AT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SideColumn_card__1_IjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Waveform_progress__1WPXH\",\"wave\":\"Waveform_wave__118D3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"TextHighlight_block__3sp7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"state\":\"TextRegion_state__1SB62\"};","/**\n * Class for register View\n */\nclass _Registry {\n  constructor() {\n    this.tags = [];\n    this.models = {};\n    this.views = {};\n    this.views_models = {};\n  }\n\n  addTag(tag, model, view) {\n    this.tags.push(tag);\n    this.models[tag] = model;\n    this.views[tag] = view;\n    this.views_models[model.name] = view;\n  }\n\n  modelsArr() {\n    return Object.values(this.models);\n  }\n\n  getViewByModel(modelName) {\n    const view = this.views_models[modelName];\n\n    if (!view) throw new Error(\"No view for model: \" + modelName);\n\n    return view;\n  }\n\n  getViewByTag(tag) {\n    return this.views[tag];\n  }\n\n  getModelByTag(tag) {\n    const model = this.models[tag];\n\n    if (!model) {\n      const models = Object.keys(this.models);\n      throw new Error(\"No model registered for tag: \" + tag + \"\\nAvailable models:\\n\\t\" + models.join(\"\\n\\t\"));\n    }\n\n    return model;\n  }\n}\n\nconst Registry = new _Registry();\n\nexport default Registry;\n","const handleResponse = res => {\n  if (res.status !== 200 || res.status !== 201) {\n    return res;\n  } else {\n    return res.json();\n  }\n};\n\nconst wrapperRequest = (url, method, headers, body) => {\n  return window\n    .fetch(url, {\n      method: method,\n      headers: headers,\n      credentials: \"include\",\n      body: body,\n    })\n    .then(response => handleResponse(response));\n};\n\nconst fetcher = url => {\n  return wrapperRequest(url, \"GET\", { Accept: \"application/json\" });\n};\n\nconst poster = (url, body) => {\n  return wrapperRequest(url, \"POST\", { Accept: \"application/json\", \"Content-Type\": \"application/json\" }, body);\n};\n\nconst patch = (url, body) => {\n  return wrapperRequest(\n    url,\n    \"PATCH\",\n    {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  );\n};\n\nconst remover = (url, body) => {\n  return wrapperRequest(\n    url,\n    \"DELETE\",\n    {\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  );\n};\n\nexport default { fetcher, poster, remover, patch };\n","import nanoid from \"nanoid\";\n\n/**\n * Unique hash generator\n */\nexport function guidGenerator() {\n  const uniqueID = nanoid(10);\n  return uniqueID;\n}\n","import { getType, getSnapshot } from \"mobx-state-tree\";\nimport { guidGenerator } from \"../utils/unique\";\n\n/**\n * TODO: refactor\n */\nexport { guidGenerator };\n\n/**\n * Helper function to detect HTX Component\n * @param {any} component\n * @param {string} name\n * @returns {boolean}\n */\nexport function isHtx(component, name) {\n  return typeof component.type === \"function\" && component.type.name === \"Htx\" + name;\n}\n\n/**\n * Clone node with new ID\n * @param {*} node\n */\nexport function cloneNode(node) {\n  const snapshot = getSnapshot(node);\n  const snapshotRandomId = getType(node).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n  return snapshotRandomId;\n}\n\n/**\n *\n * @param {*} fromModel\n */\nexport function restoreNewsnapshot(fromModel) {\n  const snapshot = getSnapshot(fromModel);\n\n  /**\n   * Need to modify ID\n   */\n  const modifySnapshot = getType(fromModel).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n\n  /**\n   * Update state\n   */\n  return modifySnapshot;\n}\n","import React from \"react\";\nimport { getType, getParentOfType } from \"mobx-state-tree\";\nimport parse5 from \"parse5\";\n\nimport Registry from \"./Registry\";\nimport { guidGenerator } from \"./Helpers\";\n\n/**\n * Clone React Tree\n * @param {*} items\n * @param {*} attrs\n */\nfunction cloneReactTree(items, attrs) {\n  let clone = null;\n  clone = function(children) {\n    const res = [];\n\n    React.Children.forEach(children, function(child) {\n      let el;\n\n      if (child.props) {\n        let moreProps = {};\n\n        if (typeof attrs === \"function\") {\n          moreProps = attrs(child);\n        } else if (typeof attrs === \"object\") {\n          moreProps = attrs;\n        }\n\n        el = React.cloneElement(child, moreProps, clone(child.props.children));\n      } else {\n        el = child;\n      }\n\n      res.push(el);\n    });\n\n    return res;\n  };\n\n  return clone(items);\n}\n\n/**\n * Function to convert CSS string to object\n * @param {string} style\n * @returns {object}\n */\nfunction cssConverter(style) {\n  let result = {},\n    attributes = style.split(\";\"),\n    firstIndexOfColon,\n    i,\n    key,\n    value;\n\n  for (i = 0; i < attributes.length; i++) {\n    firstIndexOfColon = attributes[i].indexOf(\":\");\n    key = attributes[i].substring(0, firstIndexOfColon);\n    value = attributes[i].substring(firstIndexOfColon + 1);\n\n    key = key.replace(/ /g, \"\");\n    if (key.length < 1) {\n      continue;\n    }\n\n    if (value[0] === \" \") {\n      value = value.substring(1);\n    }\n\n    if (value[value.length - 1] === \" \") {\n      value = value.substring(0, value.length - 1);\n    }\n\n    var ukey = key.replace(/(-.)/g, x => x[1].toUpperCase());\n\n    result[ukey] = value;\n  }\n\n  return result;\n}\n\n/**\n *\n * @param {*} attrs\n */\nfunction attrsToProps(attrs) {\n  const props = {};\n\n  if (!attrs) return props;\n\n  for (let attr of attrs) {\n    props[attr.name] = attr.value;\n  }\n\n  // if (props[\"style\"]) {\n  //     props[\"style\"] = cssConverter(props[\"style\"]);\n  // }\n\n  return props;\n}\n\n/**\n *\n * @param {*} html\n */\nfunction treeToModel(html) {\n  /**\n   * Remove all line breaks from a string\n   * @param {string}\n   * @returns {string}\n   */\n  function removeAllBreaks(data) {\n    return data.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  }\n\n  /**\n   * Edit all self closing tags from XML View\n   * TODO: Fix bug: if the value of <Choice /> or another tag contains \"/>\" function return error\n   * @param {string} data\n   * @returns {string}\n   */\n  function editSelfClosingTags(data) {\n    let split = data.split(\"/>\");\n    let newData = \"\";\n\n    for (let i = 0; i < split.length - 1; i++) {\n      let edsplit = split[i].split(\"<\");\n      newData += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\n    }\n\n    return newData + split[split.length - 1];\n  }\n\n  /**\n   * Generate new node\n   * @param {object} node\n   */\n  function addNode(node) {\n    if (!node) return null;\n\n    const res = [];\n\n    for (let chld of node.childNodes) {\n      if (chld.nodeName !== \"#text\") {\n        const data = buildData(chld);\n        const children = addNode(chld);\n\n        if (children) {\n          if (typeof children === \"string\") data[\"value\"] = children;\n          else data.children = children;\n        }\n\n        res.push(data);\n      }\n    }\n\n    return res.length === 0 ? null : res;\n  }\n\n  /**\n   * Generate obj with main data\n   */\n  function buildData(node) {\n    const data = attrsToProps(node.attrs);\n\n    data[\"id\"] = guidGenerator();\n    data[\"type\"] = node.nodeName;\n\n    if (data[\"type\"] === \"img\") data[\"type\"] = \"image\";\n\n    return data;\n  }\n\n  const htmlWithotBreaks = removeAllBreaks(html);\n  const htmlSelfClosingTags = editSelfClosingTags(htmlWithotBreaks);\n  const document = parse5.parseFragment(htmlSelfClosingTags);\n  const root = buildData(document.childNodes[0]);\n  root.children = addNode(document.childNodes[0]);\n  return root;\n}\n\n/**\n * Render items of tree\n * @param {*} el\n */\nfunction renderItem(el) {\n  const View = Registry.getViewByModel(getType(el).name);\n\n  if (!View) {\n    throw new Error(\"No view for model:\" + getType(el).name);\n  }\n\n  return <View key={guidGenerator()} item={el} />;\n}\n\n/**\n *\n * @param {*} item\n */\nfunction renderChildren(item) {\n  if (item && item.children && item.children.length) {\n    return item.children.map(el => {\n      return renderItem(el);\n    });\n  } else {\n    return null;\n  }\n}\n\n/**\n *\n * @param {*} name\n * @param {*} tree\n */\nfunction findInterface(name, tree) {\n  let fn;\n  fn = function(node) {\n    if (getType(node).name === name) return node;\n\n    if (node.children) {\n      for (let chld of node.children) {\n        const res = fn(chld);\n        if (res) return res;\n      }\n    }\n  };\n\n  return fn(tree);\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction findParentOfType(obj, classes) {\n  for (let c of classes) {\n    try {\n      const p = getParentOfType(obj, c);\n      if (p) return p;\n    } catch (err) {}\n  }\n\n  return null;\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction filterChildrenOfType(obj, classes) {\n  const res = [];\n\n  let fn;\n  fn = function(node) {\n    for (let c of classes) {\n      if (getType(node).name === c) res.push(node);\n    }\n\n    if (node.children) {\n      for (let chld of node.children) {\n        fn(chld);\n      }\n    }\n  };\n\n  fn(obj);\n\n  return res;\n}\n\nexport default {\n  cloneReactTree,\n  renderItem,\n  renderChildren,\n  treeToModel,\n  findInterface,\n  findParentOfType,\n  filterChildrenOfType,\n  cssConverter,\n};\n","/**\n * Internal helper to check if parameter is a string\n * @param {*} value\n * @returns {boolean}\n */\nexport const isString = value => {\n  return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Internal helper to check if string is empty\n * @param {*} value\n * @returns {boolean}\n */\nexport const isStringEmpty = value => {\n  if (!isString(value)) {\n    return false;\n  }\n\n  return value.length === 0;\n};\n\n/**\n * Internal helper to check if string is JSON\n * @param {string} value\n * @returns {boolean}\n */\nexport const isStringJSON = value => {\n  if (isString(value)) {\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Check if text is url\n * @param {*} i\n * @param {*} text\n */\nexport function getUrl(i, text) {\n  const stringToTest = text.slice(i);\n  const myRegexp = /^(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/g;\n  const match = myRegexp.exec(stringToTest);\n\n  return match && match.length ? match[1] : \"\";\n}\n\n/**\n * Convert MS to Time String\n * Example: 2000 -> 00:00:02\n * @param {number} ms\n * @returns {string}\n */\nexport function toTimeString(ms) {\n  if (typeof ms === \"number\") {\n    return new Date(ms).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n  }\n}\n","let colorNames = {\n  aliceblue: \"#f0f8ff\",\n  antiquewhite: \"#faebd7\",\n  aqua: \"#00ffff\",\n  aquamarine: \"#7fffd4\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  bisque: \"#ffe4c4\",\n  black: \"#000000\",\n  blanchedalmond: \"#ffebcd\",\n  blue: \"#0000ff\",\n  blueviolet: \"#8a2be2\",\n  brown: \"#a52a2a\",\n  burlywood: \"#deb887\",\n  cadetblue: \"#5f9ea0\",\n  chartreuse: \"#7fff00\",\n  chocolate: \"#d2691e\",\n  coral: \"#ff7f50\",\n  cornflowerblue: \"#6495ed\",\n  cornsilk: \"#fff8dc\",\n  crimson: \"#dc143c\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgoldenrod: \"#b8860b\",\n  darkgray: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkseagreen: \"#8fbc8f\",\n  darkslateblue: \"#483d8b\",\n  darkslategray: \"#2f4f4f\",\n  darkturquoise: \"#00ced1\",\n  darkviolet: \"#9400d3\",\n  deeppink: \"#ff1493\",\n  deepskyblue: \"#00bfff\",\n  dimgray: \"#696969\",\n  dodgerblue: \"#1e90ff\",\n  firebrick: \"#b22222\",\n  floralwhite: \"#fffaf0\",\n  forestgreen: \"#228b22\",\n  fuchsia: \"#ff00ff\",\n  gainsboro: \"#dcdcdc\",\n  ghostwhite: \"#f8f8ff\",\n  gold: \"#ffd700\",\n  goldenrod: \"#daa520\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#adff2f\",\n  honeydew: \"#f0fff0\",\n  hotpink: \"#ff69b4\",\n  indianred: \"#cd5c5c\",\n  indigo: \"#4b0082\",\n  ivory: \"#fffff0\",\n  khaki: \"#f0e68c\",\n  lavender: \"#e6e6fa\",\n  lavenderblush: \"#fff0f5\",\n  lawngreen: \"#7cfc00\",\n  lemonchiffon: \"#fffacd\",\n  lightblue: \"#add8e6\",\n  lightcoral: \"#f08080\",\n  lightcyan: \"#e0ffff\",\n  lightgoldenrodyellow: \"#fafad2\",\n  lightgrey: \"#d3d3d3\",\n  lightgreen: \"#90ee90\",\n  lightpink: \"#ffb6c1\",\n  lightsalmon: \"#ffa07a\",\n  lightseagreen: \"#20b2aa\",\n  lightskyblue: \"#87cefa\",\n  lightslategray: \"#778899\",\n  lightsteelblue: \"#b0c4de\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  limegreen: \"#32cd32\",\n  linen: \"#faf0e6\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66cdaa\",\n  mediumblue: \"#0000cd\",\n  mediumorchid: \"#ba55d3\",\n  mediumpurple: \"#9370d8\",\n  mediumseagreen: \"#3cb371\",\n  mediumslateblue: \"#7b68ee\",\n  mediumspringgreen: \"#00fa9a\",\n  mediumturquoise: \"#48d1cc\",\n  mediumvioletred: \"#c71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#f5fffa\",\n  mistyrose: \"#ffe4e1\",\n  moccasin: \"#ffe4b5\",\n  navajowhite: \"#ffdead\",\n  navy: \"#000080\",\n  oldlace: \"#fdf5e6\",\n  olive: \"#808000\",\n  olivedrab: \"#6b8e23\",\n  orange: \"#ffa500\",\n  orangered: \"#ff4500\",\n  orchid: \"#da70d6\",\n  palegoldenrod: \"#eee8aa\",\n  palegreen: \"#98fb98\",\n  paleturquoise: \"#afeeee\",\n  palevioletred: \"#d87093\",\n  papayawhip: \"#ffefd5\",\n  peachpuff: \"#ffdab9\",\n  peru: \"#cd853f\",\n  pink: \"#ffc0cb\",\n  plum: \"#dda0dd\",\n  powderblue: \"#b0e0e6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#ff0000\",\n  rosybrown: \"#bc8f8f\",\n  royalblue: \"#4169e1\",\n  saddlebrown: \"#8b4513\",\n  salmon: \"#fa8072\",\n  sandybrown: \"#f4a460\",\n  seagreen: \"#2e8b57\",\n  seashell: \"#fff5ee\",\n  sienna: \"#a0522d\",\n  silver: \"#c0c0c0\",\n  skyblue: \"#87ceeb\",\n  slateblue: \"#6a5acd\",\n  slategray: \"#708090\",\n  snow: \"#fffafa\",\n  springgreen: \"#00ff7f\",\n  steelblue: \"#4682b4\",\n  tan: \"#d2b48c\",\n  teal: \"#008080\",\n  thistle: \"#d8bfd8\",\n  tomato: \"#ff6347\",\n  turquoise: \"#40e0d0\",\n  violet: \"#ee82ee\",\n  wheat: \"#f5deb3\",\n  white: \"#ffffff\",\n  whitesmoke: \"#f5f5f5\",\n  yellow: \"#ffff00\",\n  yellowgreen: \"#9acd32\",\n};\n\n/**\n * Convert HEX to RGBA\n * @param {string} hex 3 digits + # or 6 digits + #\n * @param {number?} opacity From 0 to 1\n */\nexport function hexToRGBA(hex, opacity) {\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  let a = 0.3;\n\n  if (opacity && typeof parseInt(opacity) === \"number\") {\n    a = opacity;\n  }\n\n  /**\n   * If HEX = 3\n   */\n  if (hex && hex.length === 4) {\n    r = \"0x\" + hex[1] + hex[1];\n    g = \"0x\" + hex[2] + hex[2];\n    b = \"0x\" + hex[3] + hex[3];\n\n    /**\n     * If HEX = 6\n     */\n  } else if (hex && hex.length === 7) {\n    r = \"0x\" + hex[1] + hex[2];\n    g = \"0x\" + hex[3] + hex[4];\n    b = \"0x\" + hex[5] + hex[6];\n  }\n\n  const result = `rgba(${+r}, ${+g}, ${+b}, ${a})`;\n\n  return result;\n}\n\n/**\n * Color to RGBA\n * @param {*} value\n */\nexport function colorToRGBA(value, alpha) {\n  if (typeof colorNames[value.toLowerCase()] !== undefined) {\n    const hexColor = colorNames[value.toLowerCase()];\n    return hexToRGBA(hexColor, alpha);\n  }\n\n  return value;\n}\n\n/**\n * Convert color to RGB(A)\n * @param {*} value\n * @param {number} alpha\n */\nexport function convertToRGBA(value, alpha) {\n  if (value.charAt(0) === \"#\") {\n    return hexToRGBA(value, alpha);\n  } else {\n    return colorToRGBA(value, alpha);\n  }\n}\n\n/**\n * Convert string to HEX color\n * @param {string} str\n */\nexport function stringToColor(str) {\n  let hash = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xff;\n    color += (\"00\" + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n","function checkISO(value) {\n  let regExpISO = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/;\n\n  return regExpISO.test(value);\n}\n\n/**\n * Helper function to convert ms -> HHMMSS\n * @param {number} ms\n * @returns {string}\n */\nexport function msToHMS(ms) {\n  // 1- Convert to seconds:\n  var seconds = ms / 1000;\n  // 2- Extract hours:\n  var hours = parseInt(seconds / 3600); // 3,600 seconds in 1 hour\n  seconds = seconds % 3600; // seconds remaining after extracting hours\n  // 3- Extract minutes:\n  var minutes = parseInt(seconds / 60); // 60 seconds in 1 minute\n  // 4- Keep only seconds not extracted to minutes:\n  seconds = Math.floor(seconds); // % 60;\n\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n\n/**\n * Helper function to pretty date\n */\nexport function prettyDate(time) {\n  if (typeof time !== \"string\" && !checkISO(time)) return;\n\n  let date = new Date((time || \"\").replace(/-/g, \"/\").replace(/[TZ]/g, \" \")),\n    diff = (new Date().getTime() - date.getTime()) / 1000,\n    day_diff = Math.floor(diff / 86400);\n\n  if (isNaN(day_diff) || day_diff < 0) return;\n\n  return (\n    (day_diff === 0 &&\n      ((diff < 60 && \"just now\") ||\n        (diff < 120 && \"1 minute ago\") ||\n        (diff < 3600 && Math.floor(diff / 60) + \" minutes ago\") ||\n        (diff < 7200 && \"1 hour ago\") ||\n        (diff < 86400 && Math.floor(diff / 3600) + \" hours ago\"))) ||\n    (day_diff === 1 && \"Yesterday\") ||\n    (day_diff < 7 && day_diff + \" days ago\") ||\n    (day_diff < 31 && Math.ceil(day_diff / 7) + \" weeks ago\") ||\n    day_diff + \" days ago\"\n  );\n}\n","import * as Checkers from \"./utilities\";\nimport * as Colors from \"./colors\";\nimport * as UDate from \"./date\";\nimport { guidGenerator } from \"./unique\";\nimport { debounce } from \"./debounce\";\nimport { styleToProp } from \"./styles\";\n\nexport default { Checkers, Colors, UDate, guidGenerator, debounce, styleToProp };\n","/**\n * Returns a function, that, as long as it continues to be invoked,\n * will not be triggered. The function will be called after it\n * stops being called for N milliseconds. If `immediate` is passed,\n * trigger the function on the leading edge, instead of the trailing.\n *\n * @param {function} func\n * @param {number} wait\n * @param {boolean} immediate\n */\nexport function debounce(func, wait, immediate) {\n  let timeout;\n\n  return function() {\n    const context = this,\n      args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n","/**\n * Parses a string of inline styles into a JavaScript object with casing for React\n *\n * TODO this is broken for such case: styleToProp('background-image: url(\\'https://example.com/image.png\\')')\n *\n * @see TemplateEngine via MIT Licensed https://github.com/NervJS/taro/blob/master/packages/taro-components-rn/src/utils/index.ts\n *\n * @param {string} styles\n * @returns {Object}\n */\nexport function styleToProp(styles) {\n  if (!styles) return null;\n  return styles\n    .split(\";\")\n    .filter(style => style.split(\":\")[0] && style.split(\":\")[1])\n    .map(style => [\n      style\n        .split(\":\")[0]\n        .trim()\n        .replace(/-./g, c => c.substr(1).toUpperCase()),\n      style.split(\":\")[1].trim(),\n    ])\n    .reduce(\n      (styleObj, style) => ({\n        ...styleObj,\n        [style[0]]: style[1],\n      }),\n      {},\n    );\n}\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { List } from \"semantic-ui-react\";\nimport { Card, Button } from \"antd\";\n\nimport Utils from \"../../utils\";\nimport styles from \"./Completions.module.scss\";\n\nconst Completion = observer(({ item, store }) => {\n  let removeHoney = () => (\n    <Button\n      type=\"primary\"\n      onClick={ev => {\n        ev.preventDefault();\n        item.removeHoneypot();\n      }}\n    >\n      Honeypot\n    </Button>\n  );\n\n  let setHoney = () => (\n    <Button\n      type=\"primary\"\n      ghost={true}\n      onClick={ev => {\n        ev.preventDefault();\n        item.setHoneypot();\n      }}\n    >\n      Honeypot\n    </Button>\n  );\n\n  return (\n    <List.Item\n      style={{ backgroundColor: item.selected ? \"#f8f8f9\" : \"white\", padding: \"1em\" }}\n      onClick={ev => {\n        !item.selected && store.completionStore.selectCompletion(item.id);\n      }}\n    >\n      <List.Content>\n        <List.Header as=\"a\">ID {item.pk || item.id}</List.Header>\n        <p></p>\n        <List.Description as=\"a\">\n          Created\n          <i>{item.createdAgo ? ` ${item.createdAgo} ago` : ` ${Utils.UDate.prettyDate(item.createdDate)}`}</i>\n          {item.createdBy ? ` by ${item.createdBy}` : null}\n        </List.Description>\n\n        {item.selected && (\n          <div className={styles.buttons}>\n            <Button\n              type=\"danger\"\n              onClick={ev => {\n                ev.preventDefault();\n                item.store.deleteCompletion(item);\n              }}\n            >\n              Delete\n            </Button>\n\n            {item.honeypot ? removeHoney() : setHoney()}\n          </div>\n        )}\n      </List.Content>\n    </List.Item>\n  );\n});\n\nclass Completions extends Component {\n  render() {\n    const { store } = this.props;\n\n    return (\n      <Card title=\"Completions\" bodyStyle={{ padding: 0 }}>\n        <List divided relaxed>\n          {store.completionStore.savedCompletions.map(c => (\n            <Completion key={c.id} item={c} store={store} />\n          ))}\n        </List>\n      </Card>\n    );\n  }\n}\n\nexport default observer(Completions);\n","import React, { Component } from \"react\";\n\nimport styles from \"./Hint.module.scss\";\n\n/**\n * Hint Component\n * @param {object} style\n * @param {ant} children\n */\nexport default class Hint extends Component {\n  render() {\n    let style;\n    let localClass = `${styles.main}`;\n\n    if (this.props.style) style = this.props.style;\n\n    if (this.props.className) {\n      localClass = `${styles.main} ${this.props.className}`;\n    }\n\n    return (\n      <sup data-copy={this.props.copy} className={localClass} style={style}>\n        {this.props.children}\n      </sup>\n    );\n  }\n}\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button } from \"antd\";\n\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Controls.module.scss\";\n\nexport default inject(\"store\")(\n  observer(({ store }) => {\n    return (\n      <div style={{ clear: \"both\" }}>\n        <div className=\"ui hidden divider\" />\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n          <div className={styles.container}>\n            {store.hasInterface(\"submit:skip\") && (\n              <Button type=\"ghost\" onClick={store.skipTask} className={styles.skip}>\n                Skip\n                {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint> [ Ctrl+Space ]</Hint>}\n              </Button>\n            )}\n            <Button type=\"primary\" icon=\"check\" onClick={store.sendTask} className={styles.submit}>\n              Submit\n              {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint> [ Ctrl+Enter ]</Hint>}\n            </Button>\n          </div>\n          <div>{store.task && <h4 className={styles.task}>Task ID: {store.task.id}</h4>}</div>\n        </div>\n      </div>\n    );\n  }),\n);\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Icon } from \"antd\";\n\nimport styles from \"./Panel.module.scss\";\nimport Hint from \"../Hint/Hint\";\n\n/**\n * Panel component with buttons:\n * Undo\n * Redo\n * Reset\n * Show Instructions\n * Settings\n */\nexport default observer(({ store }) => {\n  const { history } = store.completionStore.selected;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.block}>\n        <Button\n          type=\"ghost\"\n          icon=\"undo\"\n          onClick={ev => {\n            history && history.canUndo && history.undo();\n            ev.preventDefault();\n          }}\n        >\n          Undo\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Ctrl+z ]</Hint>}\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon=\"redo\"\n          onClick={ev => {\n            history && history.canRedo && history.redo();\n            ev.preventDefault();\n          }}\n        >\n          Redo\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon=\"rest\"\n          onClick={ev => {\n            history && history.reset();\n          }}\n        >\n          Reset\n        </Button>\n        {store.setPrelabeling && (\n          <Button\n            style={{ display: \"none\" }}\n            onClick={ev => {\n              store.resetPrelabeling();\n            }}\n          >\n            {\" \"}\n            Reset Prelabeling\n          </Button>\n        )}\n      </div>\n\n      <div className={styles.block}>\n        {store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.closeDescription();\n            }}\n          >\n            Hide Instructions\n          </Button>\n        )}\n        {!store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.openDescription();\n            }}\n          >\n            Show Instructions\n          </Button>\n        )}\n\n        <Button\n          type=\"dashed\"\n          icon=\"setting\"\n          onClick={ev => {\n            store.toggleSettings();\n            ev.preventDefault();\n            return false;\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Modal, Checkbox } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nexport default observer(({ store }) => {\n  return (\n    <Modal visible={store.showingSettings} title=\"Hotkeys\" footer=\"\" onCancel={store.toggleSettings}>\n      <Checkbox\n        value=\"Enable labeling hotkeys\"\n        defaultChecked={store.settings.enableHotkeys}\n        onChange={() => {\n          store.settings.toggleHotkeys();\n        }}\n      >\n        Enable labeling hotkeys\n      </Checkbox>\n      <br />\n      <Checkbox\n        value=\"Show tooltips\"\n        defaultChecked={store.settings.enableTooltips}\n        onChange={() => {\n          store.settings.toggleTooltips();\n        }}\n      >\n        Show tooltips\n      </Checkbox>\n    </Modal>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Form, Button, Header } from \"semantic-ui-react\";\n\nimport { observer } from \"mobx-react\";\n\nclass DebugComponent extends Component {\n  state = { res: null };\n\n  render() {\n    const self = this;\n    const { store } = this.props;\n    const completion = store.completionStore.selected;\n\n    return (\n      <div>\n        <br />\n        <Header>Debug</Header>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.toJSON()) });\n          }}\n        >\n          Serialize whole tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.serializeCompletion()) });\n          }}\n        >\n          Seriealize results tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            if (self.state.res) completion.deserializeCompletion(JSON.parse(self.state.res));\n          }}\n        >\n          Load Serialized Results\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            const c = store.completionStore.addInitialCompletion();\n            store.completionStore.selectCompletion(c.id);\n\n            if (self.state.res) c.deserializeCompletion(JSON.parse(self.state.res));\n            // this.setState.res;\n          }}\n        >\n          Load As New Completion\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: store.task.data });\n          }}\n        >\n          Task data\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            // this.setState.res;\n            const data = JSON.parse(self.state.res);\n            const task = {\n              id: data[\"id\"],\n              project: 2,\n              data: JSON.stringify(data),\n            };\n\n            store.resetState();\n            store.addTask(task);\n            store.addGeneratedCompletion(task);\n            store.markLoading(false);\n\n            if (store.completionStore.selected)\n              store.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n          }}\n        >\n          Simulate Loading Task\n        </Button>\n\n        <br />\n        <br />\n        <Form>\n          <Form.TextArea\n            value={this.state.res}\n            className=\"is-search\"\n            // label={item.label}\n            onChange={ev => {\n              this.setState({ res: ev.target.value });\n            }}\n          />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default observer(DebugComponent);\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { getType, getRoot } from \"mobx-state-tree\";\nimport { Icon } from \"antd\";\n\nconst Node = observer(({ node }) => {\n  const click = ev => {\n    ev.preventDefault();\n    getRoot(node).completionStore.selected.regionStore.unselectAll();\n    node.selectRegion();\n\n    return false;\n  };\n\n  const style = {\n    color: \"black\",\n    textDecorationLine: \"underline\",\n    textDecorationStyle: \"dotted\",\n  };\n\n  if (getType(node).name === \"TextRegionModel\") {\n    return (\n      <div>\n        <Icon type=\"font-colors\" />\n        Text &nbsp;\n        <span style={{ color: \"#5a5a5a\" }}>{node.text}</span>\n      </div>\n    );\n  }\n\n  if (getType(node).name === \"AudioRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"microphone icon\" />\n          Audio &nbsp;{node.start.toFixed(2)} - {node.end.toFixed(2)}\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"TextAreaRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"i cursor icon\" />\n          Input &nbsp;<span style={{ color: \"#5a5a5a\" }}>{node._value}</span>\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"RectRegionModel\") {\n    const w = node.width * node.scaleX;\n    const y = node.height * node.scaleY;\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"expand icon\" />\n          Rectangle &nbsp;{w.toFixed(2)} x {y.toFixed(2)}\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"PolygonRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"i object ungroup outline icon\" />\n          Polygon\n        </a>\n      </p>\n    );\n  }\n});\n\nconst NodeMinimal = ({ node }) => {\n  if (getType(node).name == \"TextRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"font icon\" />\n        Text\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"RectRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"expand icon\" />\n        Rectangle\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"AudioRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"microphone icon\" />\n        Audio\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"TextAreaRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"i cursor icon\" />\n        Input\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"PolygonRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"i object ungroup outline icon\" />\n        Polygon\n      </Fragment>\n    );\n  }\n};\n\nexport { Node, NodeMinimal };\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { isValidReference } from \"mobx-state-tree\";\n\nimport { Node, NodeMinimal } from \"./Node\";\n\nconst Relation = ({ store, rl }) => {\n  if (!isValidReference(() => rl.node1) || !isValidReference(() => rl.node2)) {\n    return null;\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"1em\" }}>\n      <div\n        className=\"ui segment\"\n        style={{ marginBottom: 0, width: \"100%\" }}\n        onMouseOver={() => {\n          rl.toggleHighlight();\n        }}\n        onMouseOut={() => {\n          rl.toggleHighlight();\n        }}\n      >\n        <div className=\"ui two column grid\">\n          <div className=\"column\">\n            <p>\n              <NodeMinimal node={rl.node1} />\n            </p>\n          </div>\n          <div className=\"column\">\n            <p>\n              <NodeMinimal node={rl.node2} />\n            </p>\n          </div>\n        </div>\n        <div className=\"ui vertical divider\">\n          <i className=\"arrow right icon\" />\n        </div>\n      </div>\n      <a\n        href=\"#\"\n        className=\"floating right\"\n        onClick={() => {\n          store.deleteRelation(rl);\n          return false;\n        }}\n        style={{ marginLeft: \"5px\" }}\n      >\n        <i className=\"ui icon delete\" />\n      </a>\n    </div>\n  );\n};\n\nexport default observer(({ item, store }) => {\n  const completion = store.completionStore.selected;\n  const { relations } = completion.relationStore;\n\n  return (\n    <div>\n      <h4>Relations ({relations.length})</h4>\n      {!relations.length && <p>No Relations added yet</p>}\n      {completion.relationStore.relations.map(rl => (\n        <Relation store={completion.relationStore} rl={rl} />\n      ))}\n    </div>\n  );\n});\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Typography } from \"antd\";\n\nimport { Node, NodeMinimal } from \"../Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entities.module.scss\";\n\nexport default observer(({ store, regionStore }) => {\n  const { regions } = regionStore;\n\n  let buttonRemove = () => {\n    return (\n      <Button\n        type=\"link\"\n        style={{ paddingLeft: 0 }}\n        onClick={ev => {\n          store.completionStore.selected.deleteAllRegions();\n          ev.preventDefault();\n        }}\n      >\n        Remove all\n        {regions.length > 0 && store.settings.enableHotkeys && store.settings.enableTooltips && (\n          <Hint>[ Ctrl+bksp ]</Hint>\n        )}\n      </Button>\n    );\n  };\n\n  return (\n    <div>\n      <h4>Entities ({regions.length})</h4>\n      {regions.length > 0 && buttonRemove()}\n      {!regions.length && <p>No Entitied added yet</p>}\n      <ul>\n        {regions.map(region => (\n          <li\n            key={region.id}\n            className={styles.item}\n            onMouseOver={() => {\n              region.toggleHightlight();\n            }}\n            onMouseOut={() => {\n              region.toggleHightlight();\n            }}\n          >\n            <Node node={region} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { getType } from \"mobx-state-tree\";\nimport { Input, Form } from \"semantic-ui-react\";\nimport { Icon, Button, Tag } from \"antd\";\n\nimport { Node, NodeMinimal } from \"../Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entity.module.scss\";\n\nconst templateElement = element => {\n  return (\n    <div key={element.id} className={styles.labels}>\n      Labels:\n      {element.getSelectedNames().map(title => {\n        let bgColor = element.getSelectedColor() ? element.getSelectedColor() : \"#000000\";\n\n        return (\n          <Tag key={element.id} color={bgColor} className={styles.tag}>\n            {title}\n          </Tag>\n        );\n      })}\n    </div>\n  );\n};\n\nconst RenderStates = ({ node }) => {\n  const _render = s => {\n    if (\n      getType(s).name === \"LabelsModel\" ||\n      getType(s).name === \"RectangleLabelsModel\" ||\n      getType(s).name === \"PolygonLabelsModel\"\n    ) {\n      return templateElement(s);\n    } else if (getType(s).name === \"RatingModel\") {\n      return <p>Rating: {s.getSelectedString()}</p>;\n    }\n\n    return null;\n  };\n\n  return <Fragment>{node.states.map(s => _render(s))}</Fragment>;\n};\n\nexport default observer(({ store, completion }) => {\n  const node = completion.highlightedNode;\n\n  return (\n    <Fragment>\n      <p>\n        <NodeMinimal node={node} /> (id: {node.id})\n      </p>\n\n      {node.normalization && (\n        <p>\n          Normalization: {node.normalization}\n          <Icon\n            name=\"delete\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              node.deleteNormalization();\n            }}\n          />\n        </p>\n      )}\n      {node.states && <RenderStates node={node} />}\n\n      <div className={styles.block}>\n        <Button\n          className={styles.button}\n          onClick={() => {\n            completion.startRelationMode(node);\n          }}\n        >\n          <Icon type=\"link\" />\n          Relation\n        </Button>\n\n        <Button\n          className={styles.button}\n          onClick={() => {\n            completion.setNormalizationMode(true);\n          }}\n        >\n          <Icon type=\"plus\" />\n          Normalization\n        </Button>\n\n        <Button\n          className={styles.button}\n          type=\"dashed\"\n          onClick={() => {\n            completion.highlightedNode.unselectRegion();\n          }}\n        >\n          <Icon type=\"fullscreen-exit\" />\n          Unselect\n        </Button>\n\n        <Button\n          type=\"danger\"\n          className={styles.button}\n          onClick={() => {\n            completion.highlightedNode.deleteRegion();\n          }}\n        >\n          <Icon type=\"delete\" />\n          Delete\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Bksp ]</Hint>}\n        </Button>\n      </div>\n\n      {completion.normalizationMode && (\n        <div>\n          <Form\n            style={{ marginTop: \"0.5em\" }}\n            onSubmit={ev => {\n              const { value } = ev.target;\n              node.setNormalization(node.normInput);\n              completion.setNormalizationMode(false);\n\n              ev.preventDefault();\n              return false;\n            }}\n          >\n            <Form.Input\n              onChange={ev => {\n                const { value } = ev.target;\n                node.setNormInput(value);\n              }}\n              placeholder=\"Add Normalization\"\n            />\n          </Form>\n        </div>\n      )}\n    </Fragment>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport Relations from \"../Relations\";\nimport Entities from \"../Entities/Entities\";\nimport Entity from \"../Entity/Entity\";\nimport styles from \"./SideColumn.module.scss\";\n\n/**\n * Component Side with:\n * Completions\n * Entities\n * Relations\n */\nexport default observer(({ store }) => {\n  const completion = store.completionStore.selected;\n  const node = completion.highlightedNode;\n\n  return (\n    <Card title=\"Entity\" className={styles.card}>\n      {node && <Entity store={store} completion={completion} />}\n\n      {!completion.highlightedNode && <p>Nothing selected</p>}\n\n      <Entities store={store} regionStore={completion.regionStore} />\n\n      <Relations store={store} item={completion} />\n    </Card>\n  );\n});\n","import { types, getType, getParent } from \"mobx-state-tree\";\nimport Registry from \"./Registry\";\n\nfunction unionArray(arr) {\n  return types.maybeNull(types.array(oneOf(arr)));\n}\n\nfunction oneOf(arr) {\n  return types.union({\n    dispatcher: sn => {\n      if (arr.find(val => sn.type === val)) {\n        return Registry.getModelByTag(sn.type);\n      } else {\n        throw Error(\"Not expecting tag: \" + sn.type);\n      }\n    },\n  });\n}\n\nfunction allModelsTypes() {\n  const args = [\n    {\n      dispatcher: sn => {\n        if (Registry.tags.find(val => sn.type === val)) {\n          return Registry.getModelByTag(sn.type);\n        } else {\n          throw Error(\"Not expecting tag: \" + sn.type);\n        }\n      },\n    },\n    Registry.modelsArr(),\n  ];\n\n  const results = [].concat.apply([], args);\n\n  return types.union.apply(null, results);\n}\n\nfunction isType(node, types) {\n  const nt = getType(node);\n  for (let t of types) if (nt === t) return true;\n\n  return false;\n}\n\nfunction getParentOfTypeString(node, str) {\n  // same as getParentOfType but checks models .name instead of type\n  let parent = getParent(node);\n\n  if (!Array.isArray(str)) str = [str];\n\n  while (parent) {\n    const name = getType(parent).name;\n\n    if (str.find(c => c === name)) return parent;\n\n    parent = getParent(parent);\n  }\n\n  return null;\n}\n\nexport default { unionArray, allModelsTypes, oneOf, isType, getParentOfTypeString };\n","import React from \"react\";\nimport { types, getEnv, flow, getParentOfType } from \"mobx-state-tree\";\nimport { observer, Provider } from \"mobx-react\";\n\nimport Tree from \"../../core/Tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\n\n/**\n * View element. It's analogous to div element in html and can be used to visual configure display of blocks\n * @example\n * <View style=\"display: flex;\">\n *  <View style=\"flex: 50%\">\n *   <Header value=\"Facts:\"></Header>\n *   <Text name=\"text\" value=\"$fact\"></Text>\n *  </View>\n *  <View style=\"flex: 50%; margin-left: 1em\">\n *   <Header value=\"Enter your question:\"></Header>\n *   <TextArea name=\"question\" ></TextArea>\n *  </View>\n * </View>\n * @name View\n * @param {block|inline} display\n * @param {hexColor} backgroundColor background color\n * @param {style} style css style string\n */\nconst TagAttrs = types.model({\n  display: types.optional(types.string, \"block\"),\n  backgroundcolor: types.optional(types.string, \"\"),\n  margin: types.optional(types.string, \"\"),\n});\n\nconst Model = types.model({\n  id: types.identifier,\n  type: \"view\",\n  style: types.maybeNull(types.string),\n  children: Types.unionArray([\n    \"view\",\n    \"header\",\n    \"labels\",\n    \"textarea\",\n    \"choices\",\n    \"rating\",\n    \"ranker\",\n    \"rectangle\",\n    \"polygon\",\n    \"rectanglelabels\",\n    \"polygonlabels\",\n    \"text\",\n    \"audio\",\n    \"image\",\n    \"hypertext\",\n    \"audioplus\",\n    \"list\",\n    \"dialog\",\n  ]),\n});\n\nconst ViewModel = types.compose(\n  \"ViewModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = observer(({ item }) => {\n  let style = {};\n\n  if (item.display === \"inline\") {\n    style = { display: \"inline-block\", marginRight: \"15px\" };\n  }\n\n  if (item.style) {\n    style = Tree.cssConverter(item.style);\n  }\n\n  return <div style={style}>{Tree.renderChildren(item)}</div>;\n});\n\nRegistry.addTag(\"view\", ViewModel, HtxView);\n\nexport { HtxView, ViewModel };\n","/**\n * Convert JavaScript string in dot notation into an object reference\n * @param {Object} obj\n * @param {*} is\n * @param {*} value\n */\nfunction _index(obj, is, value) {\n  if (typeof is === \"string\") return _index(obj, is.split(\".\"), value);\n  else if (is.length === 1 && value !== undefined) return (obj[is[0]] = value);\n  else if (is.length === 0) return obj;\n  else return _index(obj[is[0]], is.slice(1), value);\n}\n\n/**\n *\n * @param {*} variable\n * @param {*} obj\n */\nfunction variableNotation(variable, obj) {\n  if (variable.charAt(0) === \"$\") {\n    const n = variable.substring(1);\n    return _index(obj, n);\n  } else {\n    return variable;\n  }\n}\n\n/**\n * A small templating engine for processing HTML with given data.\n *\n * @see TemplateEngine via MIT Licensed https://github.com/krasimir/absurd/\n *\n * @param {string} html\n * @param {Object} options\n * @returns {*}\n */\nfunction runTemplate(html, options) {\n  if (!options) options = {};\n\n  var re = /[$](.+)/g,\n    reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,\n    code = \"with(obj) { var r=[];\\n\",\n    cursor = 0,\n    result,\n    match;\n\n  var add = function(line, js) {\n    js\n      ? (code += line.match(reExp) ? line + \"\\n\" : \"r.push(\" + line + \");\\n\")\n      : (code += line !== \"\" ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : \"\");\n    return add;\n  };\n\n  while ((match = re.exec(html))) {\n    add(html.slice(cursor, match.index))(match[1], true);\n    cursor = match.index + match[0].length;\n  }\n\n  if (!html) return \"\";\n\n  add(html.substr(cursor, html.length - cursor));\n  code = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, \" \");\n\n  try {\n    result = new Function(\"obj\", code).apply(options, [options]);\n  } catch (err) {\n    console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n  }\n\n  return result;\n}\n\nexport { variableNotation, runTemplate, _index };\n","import { types } from \"mobx-state-tree\";\n\nimport { runTemplate } from \"../../core/Template\";\n\nconst ProcessAttrsMixin = types.model().actions(self => ({\n  updateValue(store) {\n    self._value = runTemplate(self.value, store.task.dataObj) || \"\";\n  },\n}));\n\nexport default ProcessAttrsMixin;\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport { Table, Header } from \"semantic-ui-react\";\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Table tag, show object keys and values in a table\n * @example\n * <Table name=\"text-1\" value=\"$text\"></Table>\n * @name Table\n * @param {string} value\n */\nconst Model = types.model({\n  type: \"table\",\n  size: types.optional(types.string, \"h4\"),\n  value: types.maybeNull(types.string),\n  _value: types.optional(types.string, \"\"),\n});\n\nconst TableModel = types.compose(\n  \"TableModel\",\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxTable = inject(\"store\")(\n  observer(({ store, item }) => {\n    let value = item._value;\n    if (!value) {\n      if (store.task) value = store.task.dataObj;\n    }\n\n    return (\n      <div style={{ marginTop: \"1em\" }}>\n        <Table basic=\"very\" celled collapsing>\n          <Table.Body>\n            {Object.keys(value).map(k => {\n              let v = value[k];\n              if (typeof v === \"object\") v = JSON.stringify(v);\n\n              return (\n                <Table.Row>\n                  <Table.Cell>\n                    <Header as=\"h4\">\n                      <Header.Subheader>{k}</Header.Subheader>\n                    </Header>\n                  </Table.Cell>\n                  <Table.Cell>{v}</Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"table\", TableModel, HtxTable);\n\nexport { HtxTable, TableModel };\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { Typography } from \"antd\";\n\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Header tag, show header\n * @example\n * <Header name=\"text-1\" value=\"$text\"></Header>\n * @name Header\n * @param {string} size Size of header\n * @param {string} value Text of header\n * @param {boolean} underline Underline of header\n */\nconst Model = types.model({\n  type: \"header\",\n  size: types.optional(types.number, 4),\n  value: types.optional(types.string, \"\"),\n  underline: types.optional(types.boolean, false),\n});\n\nconst HeaderModel = types.compose(\n  \"HeaderModel\",\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxHeader = observer(({ item }) => {\n  return (\n    <Typography.Title underline={item.underline} level={item.size} style={{ margin: \"10px 0\" }}>\n      {item.value}\n    </Typography.Title>\n  );\n});\n\nRegistry.addTag(\"header\", HeaderModel, HtxHeader);\n\nexport { HtxHeader, HeaderModel };\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport { runTemplate } from \"../../core/Template\";\n\n/**\n * HyperText element. Render html inside\n * @example\n * <View>\n *  <HyperText value=\"<p>Hey</p>\"></HyperText>\n * <View>\n * @param {string} name\n * @param {string} value\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nfunction HyperTextActions(self) {\n  return {\n    fromStateJSON(obj) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  };\n}\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"HyperText\",\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => HyperTextActions(self));\n\nconst HyperTextModel = types.compose(\n  \"HyperTextModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxHyperTextView = inject(\"store\")(\n  observer(({ store, item }) => {\n    if (!store.task) return null;\n\n    return <div dangerouslySetInnerHTML={{ __html: runTemplate(item.value, store.task.dataObj) }} />;\n  }),\n);\n\nRegistry.addTag(\"hypertext\", HyperTextModel, HtxHyperTextView);\n\nexport { HtxHyperTextView, HyperTextModel };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Tag } from \"antd\";\n\nimport styles from \"./Dialog.module.scss\";\n\nexport default class DialogView extends React.Component {\n  render() {\n    let selectedStyle = `${styles.block}`;\n    let hint;\n    let bgColor;\n    let date;\n\n    if (this.props.hint) {\n      hint = <Tag color=\"blue\">{this.props.hint}</Tag>;\n    }\n\n    if (this.props.bg) {\n      bgColor = this.props.bg;\n    }\n\n    if (this.props.selected) {\n      selectedStyle = `${selectedStyle} ${styles.block_selected}`;\n      hint = (\n        <div>\n          <Tag color=\"magenta\">Selected Message</Tag>\n        </div>\n      );\n\n      if (this.props.hint) {\n        hint = (\n          <div className={styles.tag}>\n            <Tag color=\"magenta\">{this.props.hint}</Tag>\n          </div>\n        );\n      }\n    }\n\n    if (this.props.date) {\n      date = <span className={styles.date}>{this.props.date}</span>;\n    }\n\n    return (\n      <div className={selectedStyle} style={{ background: bgColor, width: \"max-content\", maxWidth: \"100%\" }}>\n        <span className={styles.name}>{this.props.name}:&nbsp;</span>\n        <p className={styles.text}>{this.props.text}</p>\n        {date}\n        {hint}\n      </div>\n    );\n  }\n}\n\nDialogView.propTypes = {\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  selected: PropTypes.bool,\n  date: PropTypes.string,\n  hint: PropTypes.string,\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { Divider, Empty } from \"antd\";\n\nimport { guidGenerator } from \"../../utils/unique\";\nimport Registry from \"../../core/Registry\";\nimport DialogView from \"../../components/Dialog/Dialog\";\nimport { stringToColor, convertToRGBA } from \"../../utils/colors\";\n\n/**\n * Dialog Tag. Render dialog\n * @example\n * <View>\n *  <Dialog name=\"dialog\" value=\"$dialog\"></Dialog>\n * <View>\n * @param {string} name\n * @param {object} value\n */\nconst Replica = types.model({\n  name: types.string,\n  text: types.string,\n  selected: types.optional(types.boolean, false),\n  date: types.optional(types.string, \"\"),\n  hint: types.optional(types.string, \"\"),\n});\n\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nfunction DialogActions(self) {\n  return {\n    fromStateJSON(obj) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  };\n}\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"Dialog\",\n    data: types.map(Replica),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => DialogActions(self));\n\nconst DialogModel = types.compose(\n  \"DialogModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxDialogView = inject(\"store\")(\n  observer(({ store, item }) => {\n    if (!store.task || !store.task.dataObj) {\n      return <Empty />;\n    }\n\n    let result = [];\n    let name = item.value;\n\n    if (name.charAt(0) === \"$\") {\n      name = name.substr(1);\n    }\n\n    store.task.dataObj[name].forEach((item, ind) => {\n      let bgColor;\n\n      if (item.name) {\n        bgColor = convertToRGBA(stringToColor(item.name), 0.1);\n      }\n\n      result.push(\n        <DialogView\n          key={ind}\n          name={item.name}\n          hint={item.hint}\n          text={item.text}\n          selected={item.selected}\n          date={item.date}\n          id={item.id}\n          bg={bgColor}\n        />,\n      );\n    });\n\n    return (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            maxHeight: \"500px\",\n            overflowY: \"scroll\",\n            paddingRight: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          {result}\n        </div>\n        <Divider dashed={true} />\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"dialog\", DialogModel, HtxDialogView);\n\nexport { DialogModel, HtxDialogView };\n","import React from \"react\";\n\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Audio tag, play simple audio file\n * @example\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n * </View>\n * @example\n * <!-- Audio classification -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n *   <Choices name=\"ch\" toName=\"audio\">\n *     <Choice value=\"Positive\"></Choice>\n *     <Choice value=\"Negative\"></Choice>\n *   </Choices>\n * </View>\n * @example\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n *   <TextArea name=\"ta\" toName=\"audio\"></TextArea>\n * </View>\n * @name Audio\n * @param {string} name of element\n * @param {string} value of element\n * @param {string} hotkey hotkey used to play/pause audio\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"audio\",\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  }));\n\nconst AudioModel = types.compose(\n  \"AudioModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  // [NOTE] we can't let audio element load empty item._value\n  // because it's not updating it's parent automatically\n  // https://github.com/facebook/react/issues/9447\n  if (!item._value) return null;\n\n  return (\n    <div>\n      <audio controls>\n        <source src={item._value} type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n});\n\nconst HtxAudio = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audio\", AudioModel, HtxAudio);\n\nexport { AudioModel, HtxAudio };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions.min.js\";\nimport TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js\";\nimport CursorPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.cursor\";\n\nimport styles from \"./Waveform.module.scss\";\n\n/**\n * Use formatTimeCallback to style the notch labels as you wish, such\n * as with more detail as the number of pixels per second increases.\n *\n * Here we format as M:SS.frac, with M suppressed for times < 1 minute,\n * and frac having 0, 1, or 2 digits as the zoom increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override timeInterval, primaryLabelInterval and/or\n * secondaryLabelInterval so they all work together.\n *\n * @param: seconds\n * @param: pxPerSec\n */\nfunction formatTimeCallback(seconds, pxPerSec) {\n  seconds = Number(seconds);\n  var minutes = Math.floor(seconds / 60);\n  seconds = seconds % 60;\n\n  // fill up seconds with zeroes\n  var secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n\n  if (minutes > 0) {\n    if (seconds < 10) {\n      secondsStr = \"0\" + secondsStr;\n    }\n    return `${minutes}:${secondsStr}`;\n  }\n  return secondsStr;\n}\n\n/**\n * Use timeInterval to set the period between notches, in seconds,\n * adding notches as the number of pixels per second increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param: pxPerSec\n */\nfunction timeInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 0.01;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 0.025;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 0.1;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 0.25;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches that get labels in the primary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction primaryLabelInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 4;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 4;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches to get labels in the secondary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Secondary labels are drawn after primary labels, so if\n * you want to have labels every 10 seconds and another color labels\n * every 60 seconds, the 60 second labels should be the secondaries.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction secondaryLabelInterval(pxPerSec) {\n  // draw one every 10s as an example\n  return Math.floor(10 / timeInterval(pxPerSec));\n}\n\nexport default class Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      pos: 0,\n      colors: {\n        waveColor: \"#97A0AF\",\n        progressColor: \"#36B37E\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.$el = ReactDOM.findDOMNode(this);\n\n    this.$waveform = this.$el.querySelector(\"#wave\");\n\n    this.regions = RegionsPlugin.create({\n      dragSelection: {\n        slop: 5, // slop\n      },\n    });\n\n    this.wavesurfer = WaveSurfer.create({\n      container: this.$waveform,\n      backend: \"MediaElement\",\n      waveColor: this.state.colors.waveColor,\n      progressColor: this.state.colors.progressColor,\n      plugins: [\n        this.regions,\n        TimelinePlugin.create({\n          container: \"#timeline\", // the element in which to place the timeline, or a CSS selector to find it\n          formatTimeCallback: formatTimeCallback, // custom time format callback. (Function which receives number of seconds and returns formatted string)\n          timeInterval: timeInterval, // number of intervals that records consists of. Usually it is equal to the duration in minutes. (Integer or function which receives pxPerSec value and returns value)\n          primaryLabelInterval: primaryLabelInterval, // number of primary time labels. (Integer or function which receives pxPerSec value and reurns value)\n          secondaryLabelInterval: secondaryLabelInterval, // number of secondary time labels (Time labels between primary labels, integer or function which receives pxPerSec value and reurns value).\n          primaryColor: \"blue\", // the color of the modulo-ten notch lines (e.g. 10sec, 20sec). The default is '#000'.\n          secondaryColor: \"red\", // the color of the non-modulo-ten notch lines. The default is '#c0c0c0'.\n          primaryFontColor: \"blue\", // the color of the non-modulo-ten time labels (e.g. 10sec, 20sec). The default is '#000'.\n          secondaryFontColor: \"red\",\n        }),\n        CursorPlugin.create({\n          wrapper: this.$waveform,\n          showTime: true,\n          opacity: 1,\n        }),\n      ],\n    });\n\n    this.wavesurfer.load(this.props.src);\n\n    const self = this;\n\n    /**\n     * Mouse enter on region\n     */\n    this.wavesurfer.on(\"region-mouseenter\", reg => {\n      reg._region.onMouseOver();\n    });\n\n    /**\n     * Mouse leave on region\n     */\n    this.wavesurfer.on(\"region-mouseleave\", reg => {\n      reg._region.onMouseLeave();\n    });\n\n    /**\n     *\n     */\n    this.wavesurfer.on(\"region-created\", reg => {\n      const region = self.props.addRegion(reg);\n      reg._region = region;\n\n      reg.on(\"click\", () => region.onClick(self.wavesurfer));\n      reg.on(\"update-end\", () => region.onUpdateEnd(self.wavesurfer));\n\n      reg.on(\"dblclick\", e => {\n        window.setTimeout(function() {\n          reg.play();\n        }, 0);\n      });\n\n      reg.on(\"out\", () => {});\n    });\n\n    /**\n     * Handler of slider\n     */\n    const slider = document.querySelector(\"#slider\");\n\n    if (slider) {\n      slider.oninput = function() {\n        self.wavesurfer.zoom(Number(this.value));\n      };\n    }\n\n    /**\n     *\n     */\n    this.wavesurfer.on(\"ready\", () => {\n      self.props.onCreate(this.wavesurfer);\n    });\n\n    /**\n     * Pause trigger of audio\n     */\n    this.wavesurfer.on(\"pause\", self.props.handlePlay);\n\n    /**\n     * Play trigger of audio\n     */\n    this.wavesurfer.on(\"play\", self.props.handlePlay);\n\n    /**\n     *\n     */\n    this.props.onLoad(this.wavesurfer);\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"wave\" className={styles.wave} />\n        <div id=\"timeline\" />\n      </div>\n    );\n  }\n}\n","import { types } from \"mobx-state-tree\";\n\nconst RegionsMixin = types\n  .model({\n    selected: types.optional(types.boolean, false),\n    highlighted: types.optional(types.boolean, false),\n  })\n  .actions(self => ({\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n    },\n\n    unselectRegion() {\n      const completion = self.completion;\n      if (completion.relationMode) {\n        completion.stopRelationMode();\n      }\n\n      self.selected = false;\n      self.completion.setHighlightedNode(null);\n    },\n\n    onClickRegion() {\n      const completion = self.completion;\n\n      if (completion.relationMode) {\n        completion.addRelation(self);\n        completion.stopRelationMode();\n        completion.regionStore.unselectAll();\n      } else {\n        if (self.selected) {\n          self.unselectRegion();\n        } else {\n          completion.regionStore.unselectAll();\n          self.selectRegion();\n        }\n      }\n    },\n\n    deleteRegion() {\n      self.unselectRegion();\n\n      self.completion.relationStore.deleteNodeRelation(self);\n\n      self.completion.regionStore.deleteRegion(self);\n\n      self.completion.deleteRegion(self);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n    },\n\n    toggleHightlight() {\n      self.setHighlight(!self.highlighted);\n    },\n  }));\n\nexport default RegionsMixin;\n","import { types } from \"mobx-state-tree\";\n\nconst NormalizationMixin = types\n  .model({\n    normInput: types.maybeNull(types.string),\n    normalization: types.maybeNull(types.string),\n  })\n  .actions(self => ({\n    setNormalization(val) {\n      self.normalization = val;\n    },\n\n    deleteNormalization() {\n      self.setNormalization(\"\");\n    },\n\n    setNormInput(val) {\n      self.normInput = val;\n    },\n  }));\n\nexport default NormalizationMixin;\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { Tag } from \"antd\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Utils from \"../../utils\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\nimport Hint from \"../../components/Hint/Hint\";\n\n/**\n * Label tag, represents single label\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\"></Label>\n *     <Label alias=\"P\" value=\"Product\"></Label>\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\"></Text>\n * </View>\n * @name Label\n * @param {string} value A value of label\n * @param {boolean} selected If this label should be preselected\n * @param {string} alias Label alias\n * @param {string} hotkey Hotkey\n * @param {boolean} showalias Show alias inside label text\n * @param {string} aliasstyle Alias css style default=opacity: 0.6\n * @param {string} size Size of text in label\n * @param {string} background Background color of active label\n * @param {string} selectedColor Color of text in active label\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  showalias: types.optional(types.string, \"false\"),\n  aliasstyle: types.optional(types.string, \"opacity: 0.6\"),\n  size: types.optional(types.string, \"medium\"),\n  background: types.optional(types.string, \"#36B37E\"),\n  selectedcolor: types.optional(types.string, \"white\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"label\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .actions(self => ({\n    toggleSelected() {\n      const sel = self.selected;\n\n      const labels = Types.getParentOfTypeString(self, [\"LabelsModel\", \"RectangleLabelsModel\", \"PolygonLabelsModel\"]);\n      labels.shouldBeUnselected && labels.unselectAll();\n\n      if (labels.shouldBeUnselected && sel === true) {\n      } else {\n        self.selected = !self.selected;\n      }\n    },\n\n    markSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst LabelModel = types.compose(\n  \"LabelModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxLabelView = inject(\"store\")(\n  observer(({ item, store }) => {\n    const bg = {\n      backgroundColor: item.selected ? item.background : \"#e8e8e8\",\n      color: item.selected ? item.selectedcolor : \"#333333\",\n      cursor: \"pointer\",\n      margin: \"5px\",\n    };\n\n    return (\n      <Tag\n        onClick={ev => {\n          item.toggleSelected();\n          return false;\n        }}\n        style={bg}\n        size={item.size}\n      >\n        {item._value}\n        {item.showalias === \"true\" && item.alias && (\n          <span style={Utils.styleToProp(item.aliasstyle)}>&nbsp;{item.alias}</span>\n        )}\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n      </Tag>\n    );\n  }),\n);\n\nRegistry.addTag(\"label\", LabelModel, HtxLabelView);\n\nexport { HtxLabelView, LabelModel };\n","import { types } from \"mobx-state-tree\";\n\nconst SelectedModelMixin = types\n  .model()\n  .views(self => ({\n    get selectedLabels() {\n      return self.children.filter(c => c.selected === true);\n    },\n\n    get isSelected() {\n      return self.selectedLabels.length > 0;\n    },\n  }))\n  .actions(self => ({\n    findLabel(value) {\n      return self.children.find(c => c.alias === value || c.value === value);\n    },\n\n    unselectAll() {\n      self.children.map(c => c.markSelected(false));\n    },\n\n    getSelectedNames() {\n      return self.selectedLabels.map(c => (c.alias ? c.alias : c.value));\n    },\n\n    getSelectedString(joinstr) {\n      joinstr = joinstr || \" \";\n      return self.getSelectedNames().join(joinstr);\n    },\n  }));\n\nexport default SelectedModelMixin;\n","import { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { types } from \"mobx-state-tree\";\n\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\n\nimport { LabelModel } from \"./Label\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\n/**\n * Labels tag, create group of labels\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\"></Label>\n *     <Label alias=\"P\" value=\"Product\"></Label>\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\"></Text>\n * </View>\n * @name Labels\n * @param {string} name\n * @param {string} toName name of element that you want to label\n * @param {single|multiple=} [choice=single] one or multiple\n * @param {string=} headerprefix show header text inline with labels\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  choice: types.optional(types.enumeration([\"single\", \"multiple\"]), \"single\"),\n\n  headerprefix: types.maybeNull(types.string),\n\n  // TODO make enum\n  selectionstyle: types.maybeNull(types.optional(types.string, \"basic\", \"border\", \"bottom\")),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"labels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\";\n    },\n  }))\n  .actions(self => ({\n    getSelectedColor() {\n      // return first selected label color\n      const sel = self.children.find(c => c.selected === true);\n      return sel && sel.background;\n    },\n\n    toStateJSON() {\n      const names = self.getSelectedNames();\n\n      if (names && names.length) {\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: self.name,\n          type: self.type,\n          value: {\n            labels: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.labels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.labels.forEach(l => {\n        const label = self.findLabel(l);\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst LabelsModel = types.compose(\n  \"LabelsModel\",\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\n\nconst HtxLabels = observer(({ item }) => {\n  return (\n    <div\n      style={{\n        marginTop: \"1em\",\n        marginBottom: \"1em\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        flexFlow: \"wrap\",\n      }}\n    >\n      {item.headerprefix && <h4 style={{ display: \"inline\", marginRight: \"15px\" }}>{item.headerprefix}</h4>}\n      {Tree.renderChildren(item)}\n    </div>\n  );\n});\n\nRegistry.addTag(\"labels\", LabelsModel, HtxLabels);\n\nexport { HtxLabels, LabelsModel };\n","import React, { Component } from \"react\";\nimport { Rating } from \"semantic-ui-react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\n\n/**\n * Rating tag\n * @example\n * <View>\n *   <Text name=\"txt\" value=\"$text\"></Text>\n *   <Rating name=\"rating\" toName=\"txt\" maxRating=\"10\"></Rating>\n * </View>\n * @name Rating\n * @param {string} name of group\n * @param {string} toName name of element that you want to label\n * @param {integer=} [maxRating=5] maxmium rating value\n * @param {string=} [size=large] one of: mini tiny small large huge massive\n * @param {string=} [icon=star] one of: star heart\n * @param {string=} hotkey hokey\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  maxrating: types.optional(types.string, \"5\"),\n  icon: types.optional(types.string, \"star\"),\n  size: types.optional(types.string, \"large\"),\n\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rating\",\n    rating: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get isSelected() {\n      return self.rating > 0;\n    },\n  }))\n  .actions(self => ({\n    getSelectedString() {\n      return self.rating + \" star\";\n    },\n\n    getSelectedNames() {\n      return self.rating;\n    },\n\n    unselectAll() {\n      self.rating = 0;\n    },\n\n    handleRate(e, { rating, maxrating }) {\n      self.rating = rating;\n    },\n\n    increaseValue() {\n      if (self.rating >= self.maxrating) {\n        self.rating = 0;\n      } else {\n        if (self.rating > 0) {\n          self.rating = self.rating + 1;\n        } else {\n          self.rating = 1;\n        }\n      }\n    },\n\n    onHotKey() {\n      return self.increaseValue();\n    },\n\n    toStateJSON() {\n      if (self.rating) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            rating: self.rating,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      if (obj.id) self.pid = obj.id;\n\n      self.rating = obj.value.rating;\n    },\n  }));\n\nconst RatingModel = types.compose(\n  \"RatingModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxRating = inject(\"store\")(\n  observer(({ item, store }) => {\n    return (\n      <div>\n        <Rating\n          icon=\"star\"\n          size={item.size}\n          defaultRating={0}\n          rating={item.rating}\n          maxRating={item.maxrating}\n          onRate={item.handleRate}\n          clearable\n        />\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n          <sup style={{ fontSize: \"9px\" }}>[{item.hotkey}]</sup>\n        )}\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"rating\", RatingModel, HtxRating);\n\nexport { HtxRating, RatingModel };\n","import { types, getParentOfType, destroy, getRoot } from \"mobx-state-tree\";\n\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\n\nimport { AudioPlusModel } from \"./AudioPlus\";\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    start: types.number,\n    end: types.number,\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel))),\n    // regionbg: types.string,\n    // selectedregionbg: types.string\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, AudioPlusModel);\n    },\n\n    get regionbg() {\n      return self.parent.regionbg;\n    },\n\n    get selectedregionbg() {\n      return self.parent.selectedregionbg;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.pid,\n          // type: getType(s).name,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"region\",\n          // text: parent.text,\n          value: {\n            start: self.start,\n            end: self.end,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n\n    unselectRegion() {\n      self.selected = false;\n      self._ws_region.update({ color: self.regionbg });\n      self.completion.setHighlightedNode(null);\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self._ws_region.update({ color: self.selectedregionbg });\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n\n      if (val) {\n        // self._ws_region.update({ color: self.selectedregionbg });\n        self._ws_region.element.style.border = \"2px solid red\";\n      } else {\n        // self._ws_region.update({ color: self.regionbg });\n        self._ws_region.element.style.border = \"none\";\n      }\n    },\n\n    beforeDestroy() {\n      if (self._ws_region) self._ws_region.remove();\n    },\n\n    onClick(wavesurfer) {\n      if (!self.completion.relationMode) {\n        Object.values(wavesurfer.regions.list).forEach(r => {\n          r.update({ color: self.regionbg });\n        });\n\n        self._ws_region.update({ color: self.selectedregionbg });\n      }\n\n      self.onClickRegion();\n      // self.props.clickRegion(reg._range);\n    },\n\n    onMouseOver() {\n      if (self.completion.relationMode) {\n        self.setHighlight(true);\n        self._ws_region.element.style.cursor = \"crosshair\";\n      }\n    },\n\n    onMouseLeave() {\n      if (self.completion.relationMode) {\n        self.setHighlight(false);\n        self._ws_region.element.style.cursor = \"move\";\n      }\n    },\n\n    onUpdateEnd(wavesurfer) {\n      self.start = self._ws_region.start;\n      self.end = self._ws_region.end;\n\n      // console.log(self._ws_region.style());\n\n      // console.log(self.start);\n      // console.log(self.end);\n\n      // Object.values(wavesurfer.regions.list).forEach((r) => {\n      //     r.update({ color: self.regionbg });\n      // });\n\n      // self._ws_region.update({ color: self.selectedregionbg });\n    },\n  }));\n\nconst AudioRegionModel = types.compose(\n  \"AudioRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nexport { AudioRegionModel };\n","import React, { Fragment } from \"react\";\n\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Icon } from \"antd\";\n\nimport { cloneNode } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\n// import { AudioEditorMode } from './AudioEditor';\nimport Waveform from \"../../components/Waveform/Waveform\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\nimport { AudioRegionModel } from \"./AudioRegion\";\n\n/**\n * AudioPlus tag, play audio and label regions\n * @example\n * <View>\n *  <Labels name=\"lbl-1\" toName=\"audio-1\"><Label value=\"Hello\"></Label><Label value=\"World\"></Label></Labels>\n *  <Rating name=\"rate-1\" toName=\"audio-1\"></Rating>\n *  <AudioPlus name=\"audio-1\" value=\"$audio\"></AudioPlus>\n * </View>\n * @name AudioPlus\n * @param {string} name of group\n * @param {string} value\n * @param {boolean} hasZoom speficy if audio has zoom functionality\n * @param {string} regionBG region color\n * @param {string} selectedRegionBG selected region background\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  haszoom: types.optional(types.string, \"true\"),\n  regionbg: types.optional(types.string, \"rgba(0,0,0, 0.1)\"),\n  selectedregionbg: types.optional(types.string, \"rgba(255,0,0,0.5)\"),\n  _value: types.optional(types.string, \"\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"audio\",\n    playing: types.optional(types.boolean, false),\n    regions: types.array(AudioRegionModel),\n    rangeValue: types.optional(types.string, \"20\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states ? states.filter(s => s.isSelected) : null;\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      return self.regions.map(r => r.toStateJSON());\n    },\n\n    findRegion(start, end) {\n      return self.regions.find(r => r.start === start && r.end === end);\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.findRegion(obj.value.start, obj.value.end);\n      restoreNewsnapshot(fromModel);\n\n      self._ws.addRegion({\n        start: obj.value.start,\n        end: obj.value.end,\n      });\n    },\n\n    setRangeValue(val) {\n      self.rangeValue = val;\n    },\n\n    addRegion(ws_region) {\n      const find_r = self.findRegion(ws_region.start, ws_region.end);\n      if (self.findRegion(ws_region.start, ws_region.end)) {\n        find_r._ws_region = ws_region;\n        return find_r;\n      }\n\n      const states = self.activeStates();\n\n      const clonedStates = states ? states.map(s => cloneNode(s)) : null;\n\n      // const bgColor = states ? states[0].getSelectedColor() : self.selectedregionbg;\n\n      const r = AudioRegionModel.create({\n        id: guidGenerator(),\n        start: ws_region.start,\n        end: ws_region.end,\n        regionbg: self.regionbg,\n        selectedregionbg: self.selectedregionbg,\n        states: clonedStates,\n      });\n\n      r._ws_region = ws_region;\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      // r.selectRegion();\n      states && states.forEach(s => s.unselectAll());\n\n      return r;\n    },\n\n    /**\n     * Play and stop\n     */\n    handlePlay() {\n      self.playing = !self.playing;\n    },\n\n    onLoad(ws) {\n      self._ws = ws;\n\n      self.regions.forEach(obj => {\n        self._ws.addRegion({\n          start: obj.start,\n          end: obj.end,\n        });\n      });\n    },\n\n    wsCreated(ws) {\n      self._ws = ws;\n    },\n  }));\n\nconst AudioPlusModel = types.compose(\n  \"AudioPlusModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  return (\n    <div>\n      <Waveform\n        src={item._value}\n        selectRegion={item.selectRegion}\n        handlePlay={item.handlePlay}\n        onCreate={item.wsCreated}\n        addRegion={item.addRegion}\n        onLoad={item.onLoad}\n      />\n\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", marginTop: \"1em\" }}>\n        <Button\n          type=\"primary\"\n          onClick={ev => {\n            item._ws.playPause();\n          }}\n        >\n          {item.playing && (\n            <Fragment>\n              <Icon type=\"pause-circle\" /> Pause\n            </Fragment>\n          )}\n          {!item.playing && (\n            <Fragment>\n              <Icon type=\"play-circle\" /> Play\n            </Fragment>\n          )}\n        </Button>\n\n        {item.haszoom === \"true\" && (\n          <input\n            type=\"range\"\n            min=\"20\"\n            max=\"200\"\n            id=\"slider\"\n            value={item.rangeValue}\n            onChange={ev => {\n              item.setRangeValue(ev.target.value);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n});\n\nconst HtxAudioPlus = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audioplus\", AudioPlusModel, HtxAudioPlus);\n\nexport { AudioPlusModel, AudioRegionModel, HtxAudioPlus };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { isHtx, cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { RectRegionModel } from \"../object/RectRegion\";\n\n/**\n * Rectangle tag\n * Rectangle is used to add rectangle (BBox) to an image\n * @example\n * <View>\n *   <Rectangle name=\"rect-1\" toName=\"img-1\"></Rectangle>\n *   <Image name=\"img-1\" value=\"$img\"></Image>\n * </View>\n * @name Rectangle\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {float=} [opacity=0.6] opacity of rectangle\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {boolean=} [canRotate=true] show rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.maybeNull(types.string),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n\n  canrotate: types.optional(types.string, \"true\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"rectangle\",\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj) {\n      // const rect = self._createRect();\n      // rect.setPosition(obj.value.x, obj.value.y, obj.value.width, obj.value.height, obj.value.rotation);\n      // return rect;\n    },\n  }));\n\nconst RectangleModel = types.compose(\n  \"RectangleModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"rectangle\", RectangleModel, HtxView);\n\nexport { HtxView, RectangleModel };\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\n\nimport { types } from \"mobx-state-tree\";\n\nimport Types from \"../../core/Types\";\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { RectangleModel } from \"./Rectangle\";\n\n/**\n * RectangleLabels tag, create labeled rectangles\n * @example\n * <View>\n *   <RectangleLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\"></Label>\n *     <Label value=\"Animal\"></Label>\n *   </RectangleLabels>\n *   <Image name=\"image\" value=\"$image\"></Image>\n * </View>\n * @name RectangleLabels\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {float=} [opacity=0.6] opacity of rectangle\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {boolean=} [canRotate=true] show rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model(\"RectangleLabelsModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rectanglelabels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.rectanglelabels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.rectanglelabels.forEach(l => {\n        const label = self.findLabel(l);\n\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst Composition = types.compose(\n  LabelsModel,\n  RectangleModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\nconst RectangleLabelsModel = types.compose(\n  \"RectangleLabelsModel\",\n  Composition,\n);\n\nconst HtxRectangleLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"rectanglelabels\", RectangleLabelsModel, HtxRectangleLabels);\n\nexport { HtxRectangleLabels, RectangleLabelsModel };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RectangleLabelsModel } from \"../control/RectangleLabels\";\n\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"rectangleregion\",\n\n    x: types.number,\n    y: types.number,\n    width: types.number,\n    height: types.number,\n\n    scaleX: types.optional(types.number, 1),\n    scaleY: types.optional(types.number, 1),\n\n    rotation: types.optional(types.number, 0),\n\n    opacity: types.number,\n    strokewidth: types.number,\n\n    fillcolor: types.maybeNull(types.string),\n    strokecolor: types.string,\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel, RectangleLabelsModel))),\n\n    // fromName: types.maybeNull(types.string),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n\n    sw: types.maybeNull(types.number),\n    sh: types.maybeNull(types.number),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"px\"),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    unselectRegion() {\n      self.selected = false;\n      self.parent.setSelected(undefined);\n      self.completion.setHighlightedNode(null);\n    },\n\n    coordsInside(x, y) {\n      // check if x and y are inside the rectangle\n      const rx = self.x;\n      const ry = self.y;\n      const rw = self.width * (self.scaleX || 1);\n      const rh = self.height * (self.scaleY || 1);\n\n      if (x > rx && x < rx + rw && y > ry && y < ry + rh) return true;\n\n      return false;\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n    },\n\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.rotation = rotation;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      self.wp = wp;\n      self.hp = hp;\n\n      self.sw = sw;\n      self.sh = sh;\n\n      if (self.coordstype == \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.width = (sw * self.width) / 100;\n        self.height = (sh * self.height) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    toStateJSON() {\n      const parent = self.parent;\n      const from = parent.states()[0];\n\n      const buildTree = obj => {\n        const tree = {\n          id: self.id,\n          from_name: from.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"rectangle\",\n          value: {\n            x: (self.x * 100) / self.parent.stageWidth,\n            y: (self.y * 100) / self.parent.stageHeight,\n            width: (self.width * (self.scaleX || 1) * 100) / self.parent.stageWidth, //  * (self.scaleX || 1)\n            height: (self.height * (self.scaleY || 1) * 100) / self.parent.stageHeight,\n            rotation: self.rotation,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst RectRegionModel = types.compose(\n  \"RectRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxRectangleView = ({ store, item }) => {\n  const self = this;\n  const { name, wwidth, wheight, onChangedPosition } = item;\n\n  const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n  const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n  const x = item.x;\n  const y = item.y;\n  const w = item.width;\n  const h = item.height;\n\n  const props = {};\n\n  props[\"opacity\"] = item.opacity;\n\n  if (item.fillcolor) {\n    props[\"fill\"] = item.fillcolor;\n  }\n\n  props[\"stroke\"] = item.strokecolor;\n  props[\"strokeWidth\"] = item.strokewidth;\n  props[\"strokeScaleEnabled\"] = false;\n  props[\"shadowBlur\"] = 0;\n\n  if (item.highlighted) {\n    props[\"stroke\"] = \"#ff0000\";\n  }\n\n  return (\n    <Fragment>\n      <Rect\n        x={x}\n        y={y}\n        width={w}\n        height={h}\n        scaleX={item.scaleX}\n        scaleY={item.scaleY}\n        name={item.id}\n        onTransformEnd={e => {\n          const t = e.target;\n\n          const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n          const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        onDragEnd={e => {\n          const t = e.target;\n\n          const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n          const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        dragBoundFunc={function(pos) {\n          let { x, y } = pos;\n\n          if (x < 0) x = 0;\n          if (y < 0) y = 0;\n\n          return {\n            x: x,\n            y: y,\n          };\n        }}\n        onMouseOver={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent._stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable\n      />\n    </Fragment>\n  );\n};\n\nconst HtxRectangle = inject(\"store\")(observer(HtxRectangleView));\n\nRegistry.addTag(\"rectangleregion\", RectRegionModel, HtxRectangle);\n\nexport { RectRegionModel, HtxRectangle };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot, getParent } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer, Line, Circle } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst PolygonPoint = types\n  .model({\n    init_x: types.optional(types.number, 0),\n    init_y: types.optional(types.number, 0),\n\n    x: types.number,\n    y: types.number,\n\n    style: types.string,\n    size: types.string,\n    // isMouseOverStartPoint: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get parent() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      self.init_x = self.x;\n      self.init_y = self.y;\n    },\n\n    movePoint(x, y) {\n      self.x = self.init_x + x;\n      self.y = self.init_y + y;\n    },\n\n    _movePoint(x, y) {\n      self.init_x = x;\n      self.init_y = y;\n\n      self.x = x;\n      self.y = y;\n    },\n\n    handleMouseOverStartPoint(ev) {\n      const stage = self.parent.parent._stageRef;\n      stage.container().style.cursor = \"crosshair\";\n\n      if (self.parent.closed || self.parent.points.length < 3) return;\n\n      const t = ev.target;\n\n      t.setX(t.x() - t.width() / 2);\n      t.setY(t.y() - t.height() / 2);\n\n      const scaleMap = {\n        small: 3,\n        medium: 2,\n        large: 2,\n      };\n\n      const scale = scaleMap[self.size];\n\n      t.scale({ x: scale, y: scale });\n\n      self.parent.setMouseOverStartPoint(true);\n    },\n\n    handleMouseOutStartPoint(ev) {\n      const t = ev.target;\n\n      const stage = self.parent.parent._stageRef;\n      stage.container().style.cursor = \"default\";\n\n      t.setX(t.x() + t.width() / 2);\n      t.setY(t.y() + t.height() / 2);\n      t.scale({ x: 1, y: 1 });\n\n      self.parent.setMouseOverStartPoint(false);\n    },\n  }));\n\nconst PolygonPointView = observer(({ item, index }) => {\n  const sizes = {\n    small: 4,\n    medium: 8,\n    large: 12,\n  };\n\n  const stroke = {\n    small: 1,\n    medium: 2,\n    large: 3,\n  };\n\n  const w = sizes[item.size];\n\n  const startPointAttr =\n    index === 0\n      ? {\n          hitStrokeWidth: 12,\n          onMouseOver: item.handleMouseOverStartPoint,\n          onMouseOut: item.handleMouseOutStartPoint,\n        }\n      : null;\n\n  const isOver = item.parent.mouseOverStartPoint;\n\n  const dragOpts = {\n    onDragStart: e => {\n      //handleDragStartPoint\n    },\n\n    onDragMove: e => {\n      item._movePoint(e.target.attrs.x, e.target.attrs.y);\n\n      /* const points = this.state.points; */\n      /* const index = e.target.index - 1; */\n      /* console.log(event.target); */\n      /* const pos = [event.target.attrs.x, event.target.attrs.y]; */\n      /* console.log(\"move\", event); */\n      /* console.log(pos); */\n      /* this.setState({ */\n      /*     points: [...points.slice(0, index), pos, ...points.slice(index + 1)] */\n      /* }); */\n    },\n\n    onDragEnd: e => {\n      // handleDragEndPoint\n    },\n\n    onMouseOver: e => {\n      const stage = item.parent.parent._stageRef;\n      stage.container().style.cursor = \"crosshair\";\n    },\n\n    onMouseOut: e => {\n      const stage = item.parent.parent._stageRef;\n      stage.container().style.cursor = \"default\";\n    },\n  };\n\n  if (item.style == \"circle\") {\n    return (\n      <Circle\n        key={index}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        radius={w}\n        fill=\"white\"\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable\n      />\n    );\n  } else {\n    return (\n      <Rect\n        key={index}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        width={w}\n        height={w}\n        fill=\"white\"\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        dragOnTop={false}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable\n      />\n    );\n  }\n  // <Rect width={w}\n  //       height={w}\n  //       x={item.x - w/2}\n  //       y={item.y - w/2}\n  //       fill=\"black\"\n\n  //       onClick={(ev) => {\n  //           item.parent.closePoly();\n\n  //           ev.cancelBubble = true;\n  //           ev.evt.stopPropagation();\n  //       }}\n\n  //       dragBoundFunc={function(pos) {\n  //           let { x, y } = pos;\n  //           if (x < 0) x = 0;\n  //           if (y < 0) y = 0;\n\n  //           // /* const r = wwidth - this.getAttr('width'); */\n  //           // /* const b = wheight - this.getAttr('height'); */\n\n  //           item._movePoint(x, y);\n  //           // if (x > r) x = r;\n  //           // if (y > b) y = b;\n  //           // item.redrawParent();\n\n  //         return {\n  //             x: x,\n  //             y: y,\n  //         };\n\n  //       }}\n\n  //  draggable\n  // />\n});\n\nexport { PolygonPoint, PolygonPointView };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { isHtx, cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { PolygonRegionModel } from \"../object/PolygonRegion\";\n\n/**\n * Polygon tag\n * Polygon is used to add polygons to an image\n * @example\n * <View>\n *   <Polygon name=\"rect-1\" toName=\"img-1\" value=\"Add Rectangle\"></Polygon>\n *   <Image name=\"img-1\" value=\"$img\"></Image>\n * </View>\n * @name Polygon\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {number=} [opacity=0.6] opacity of polygon\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {small|medium|large=} [pointSize=medium] size of polygon handle points\n * @param {rectangle|circle=} [pointStyle=rectangle] style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.maybeNull(types.string),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n\n  pointsize: types.optional(types.string, \"medium\"),\n  pointstyle: types.optional(types.string, \"rectangle\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"polygon\",\n\n    // regions: types.array(RectRegionModel),\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states ? states.filter(c => c.isSelected === true) : null;\n    },\n  }))\n  .actions(self => ({}));\n\nconst PolygonModel = types.compose(\n  \"PolygonModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = inject(\"store\")(\n  observer(({ store, item }) => {\n    return null;\n  }),\n);\n\nRegistry.addTag(\"polygon\", PolygonModel, HtxView);\n\nexport { HtxView, PolygonModel };\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\n\nimport { types } from \"mobx-state-tree\";\n\nimport Types from \"../../core/Types\";\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { PolygonModel } from \"./Polygon\";\n\n/**\n * PolygonLabels tag, create labeled polygons\n * @example\n * <View>\n *   <Image name=\"image\" value=\"$image\"></Image>\n *   <PolygonLabels name=\"lables\" toName=\"image\">\n *     <Label value=\"Car\"></Label>\n *     <Label value=\"Sign\"></Label>\n *   </PolygonLabels>\n * </View>\n * @name PolygonLabels\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {number=} [opacity=0.6] opacity of polygon\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {small|medium|large=} [pointSize=medium] size of polygon handle points\n * @param {rectangle|circle=} [pointStyle=rectangle] style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model(\"PolygonLabelsModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"polygonlabels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.polygonlabels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.polygonlabels.forEach(l => {\n        const label = self.findLabel(l);\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst Composition = types.compose(\n  LabelsModel,\n  PolygonModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\nconst PolygonLabelsModel = types.compose(\n  \"PolygonLabelsModel\",\n  Composition,\n);\n\nconst HtxPolygonLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"polygonlabels\", PolygonLabelsModel, HtxPolygonLabels);\n\nexport { HtxPolygonLabels, PolygonLabelsModel };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot, getParent } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer, Group, Line } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport { PolygonPoint, PolygonPointView } from \"./PolygonPoint\";\n\nimport { PolygonLabelsModel } from \"../control/PolygonLabels\";\n\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"polygonregion\",\n\n    opacity: types.number,\n    fillcolor: types.maybeNull(types.string),\n\n    strokewidth: types.number,\n    strokecolor: types.string,\n\n    pointsize: types.string,\n    pointstyle: types.string,\n\n    closed: types.optional(types.boolean, false),\n\n    points: types.array(PolygonPoint, []),\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel, PolygonLabelsModel))),\n\n    mouseOverStartPoint: types.optional(types.boolean, false),\n\n    fromName: types.maybeNull(types.string),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get isCW() {},\n\n    linePoints() {\n      const p = self.points.map(p => [p[\"x\"], p[\"y\"]]);\n\n      const flatten = arr => {\n        return arr.reduce(function(flat, toFlatten) {\n          return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n        }, []);\n      };\n\n      return flatten(p);\n    },\n  }))\n  .actions(self => ({\n    setMouseOverStartPoint(val) {\n      self.mouseOverStartPoint = val;\n    },\n\n    findPolyOutline() {\n      const { points } = self;\n      const left = points.reduce((acc, loc) => (acc.x < loc.x ? acc : loc));\n      const right = points.reduce((acc, loc) => (acc.x > loc.x ? acc : loc));\n\n      const top = points.reduce((acc, loc) => (acc.y < loc.y ? acc : loc));\n      const bottom = points.reduce((acc, loc) => (acc.y > loc.y ? acc : loc));\n\n      return {\n        x: left.x,\n        y: top.y,\n        width: right.x - left.x,\n        height: bottom.y - top.y,\n      };\n    },\n\n    coordsInside(x, y) {\n      const inside = false;\n      const vs = self.points;\n\n      for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0],\n          yi = vs[i][1];\n        var xj = vs[j][0],\n          yj = vs[j][1];\n\n        var intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n        if (intersect) inside = !inside;\n      }\n\n      return inside;\n    },\n\n    addPoint(x, y) {\n      if (self.closed) return;\n\n      if (self.mouseOverStartPoint) {\n        self.closePoly();\n        return;\n      }\n      // if (self.canClose(x, y)) {\n      //     self.closePoly();\n      //     return;\n      // }\n\n      self._addPoint(x, y);\n    },\n\n    insertPoint(insertIdx, x, y) {\n      const p = { x: x, y: y, size: self.pointsize, style: self.pointstyle };\n      self.points.splice(insertIdx, 0, p);\n    },\n\n    _addPoint(x, y) {\n      self.points.push({ x: x, y: y, size: self.pointsize, style: self.pointstyle });\n    },\n\n    closePoly() {\n      self.closed = true;\n      self.selectRegion();\n    },\n\n    canClose(x, y) {\n      if (self.points.length < 2) return false;\n\n      const p1 = self.points[0];\n      const p2 = { x: x, y: y };\n\n      var r = 50;\n      var dist_points = (p1[\"x\"] - p2[\"x\"]) * (p1[\"x\"] - p2[\"x\"]) + (p1[\"y\"] - p2[\"y\"]) * (p2[\"y\"] - p2[\"y\"]);\n\n      if (dist_points < r) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    unselectRegion() {\n      self.selected = false;\n      self.parent.setSelected(undefined);\n      self.completion.setHighlightedNode(null);\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n    },\n\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.rotation = rotation;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp) {\n      self.wp = wp;\n      self.hp = hp;\n    },\n\n    toStateJSON() {\n      // console.log(self.parent.naturalWidth);\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = self.parent;\n\n      const perc_w = (stageWidth * 100) / naturalWidth;\n      const perc_h = (stageHeight * 100) / naturalHeight;\n\n      const perc_points = self.points.map(p => {\n        const orig_w = (p.x * 100) / perc_w;\n        const res_w = (orig_w * 100) / naturalWidth;\n\n        const orig_h = (p.y * 100) / perc_h;\n        const res_h = (orig_h * 100) / naturalHeight;\n\n        return [res_w, res_h];\n      });\n\n      // 1024 - 100\n      // 750 - x\n\n      // x = (750 * 100) / 1024\n      // x = 75\n\n      // 300 - 75\n      // y - 100\n\n      // y = (100 * 300) / 75\n      // y = 500\n\n      // 1024 - 100\n      // 500 - z\n\n      // z = (y * 100) / 1024\n\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.id,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"polygon\",\n          value: {\n            points: perc_points,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst PolygonRegionModel = types.compose(\n  \"PolygonRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nfunction getAnchorPoint({ flattenedPoints, a, b }) {\n  const [x1, y1, x2, y2] = flattenedPoints;\n  const y =\n    ((x2 - x1) * (x2 * y1 - x1 * y2) + (x2 - x1) * (y2 - y1) * a + (y2 - y1) * (y2 - y1) * b) /\n    ((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n  const x =\n    a -\n    ((y2 - y1) * (x2 * y1 - x1 * y2 + a * (y2 - y1) - b * (x2 - x1))) / ((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n  return [x, y];\n}\n\nfunction getFlattenedPoints(points) {\n  const p = points.map(p => [p[\"x\"], p[\"y\"]]);\n  return p.reduce(function(flattenedPoints, point) {\n    return flattenedPoints.concat(point);\n  }, []);\n}\n\nconst HtxPolygonView = ({ store, item }) => {\n  const self = this;\n  const { name, wwidth, wheight, onChangedPosition } = item;\n\n  let opacity = 0.5;\n\n  const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n  const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n  const x = item.x;\n  const y = item.y;\n  const w = item.width;\n  const h = item.height;\n\n  const props = {};\n\n  props[\"opacity\"] = item.opacity;\n\n  if (item.fillcolor) {\n    props[\"fill\"] = item.fillcolor;\n  }\n\n  props[\"stroke\"] = item.strokecolor;\n  props[\"strokeWidth\"] = item.strokewidth;\n\n  if (item.highlighted) {\n    props[\"stroke\"] = \"red\";\n  }\n\n  return (\n    <Fragment>\n      {item.mouseOverStartPoint}\n\n      <Line\n        points={item.linePoints()}\n        fill={item.fill}\n        opacity={item.opacity}\n        closed={item.closed}\n        redraw={item.update}\n        stroke={item.stroke}\n        strokeWidth={parseInt(item.strokewidth)}\n        onDragStart={e => {\n          item.completion.setDragMode(true);\n        }}\n        dragBoundFunc={function(pos) {\n          let { x, y } = pos;\n          /* if (x < 0) x = 0; */\n          /* if (y < 0) y = 0; */\n\n          const r = item.parent.stageWidth - this.getAttr(\"width\");\n          const b = item.parent.stageHeight - this.getAttr(\"height\");\n\n          /* const r = wwidth - this.getAttr('width'); */\n          /* const b = wheight - this.getAttr('height'); */\n\n          if (x > r) x = r;\n          if (y > b) y = b;\n\n          item.points.forEach(p => {\n            p.movePoint(x, y);\n          });\n\n          return {\n            x: 0,\n            y: 0,\n          };\n        }}\n        onDragEnd={e => {\n          item.completion.setDragMode(false);\n\n          if (!item.closed) item.closePoly();\n\n          item.parent.setActivePolygon(null);\n\n          item.points.forEach(p => {\n            p.afterCreate();\n          });\n        }}\n        onMouseOver={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent._stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          e.cancelBubble = true;\n\n          if (!item.closed) return;\n\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable\n      />\n\n      {!item.closed && item.points.map((p, index) => <PolygonPointView item={p} index={index} />)}\n      {item.closed && item.selected && item.points.map((p, index) => <PolygonPointView item={p} index={index} />)}\n    </Fragment>\n  );\n};\n\nconst HtxPolygon = inject(\"store\")(observer(HtxPolygonView));\n\nRegistry.addTag(\"polygonregion\", PolygonRegionModel, HtxPolygon);\n\nexport { PolygonRegionModel, HtxPolygon };\n","import React, { Component } from \"react\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getType, getParentOfType, destroy, getRoot } from \"mobx-state-tree\";\n\nimport { Stage, Layer, Rect, Text, Transformer } from \"react-konva\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, cloneNode, restoreNewsnapshot } from \"../../core/Helpers\";\nimport Tree from \"../../core/Tree\";\n\n// import { ImageEditorModel } from './ImageEditor';\nimport { RectRegionModel } from \"./RectRegion\";\nimport { PolygonRegionModel } from \"./PolygonRegion\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Image tag, show image on the page\n * @example\n * <View>\n *   <Image value=\"$url\"></Image>\n * </View>\n * @example\n * <View>\n *   <Image value=\"https://imgflip.com/s/meme/Leonardo-Dicaprio-Cheers.jpg\" width=\"100%\" maxWidth=\"750px\"></Image>\n * </View>\n * @name Image\n * @param {string} name name of image tag\n * @param {string} value value\n * @param {string=} [width=100%] image width\n * @param {string=} [maxWidth=750px] image maximum width\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  resize: types.maybeNull(types.string),\n  width: types.optional(types.string, \"100%\"),\n  maxwidth: types.optional(types.string, \"750px\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"image\",\n    _value: types.optional(types.string, \"\"),\n    stageWidth: types.optional(types.integer, 1),\n    stageHeight: types.optional(types.integer, 1),\n    naturalWidth: types.optional(types.integer, 1),\n    naturalHeight: types.optional(types.integer, 1),\n    selectedShape: types.safeReference(types.union(RectRegionModel, PolygonRegionModel)),\n    activePolygon: types.maybeNull(types.safeReference(PolygonRegionModel)),\n    shapes: types.array(types.union(RectRegionModel, PolygonRegionModel), []),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    controlButton() {\n      const names = self.completion.toNames.get(self.name);\n      return names[0];\n    },\n\n    controlButtonType() {\n      const name = self.controlButton();\n      return getType(name).name;\n    },\n\n    // get editor() {\n    //     try {\n    //         return getParentOfType(self, ImageEditorModel);\n    //     } catch (err) {\n    //         return null;\n    //     }\n    // },\n\n    // get isInsideEditor() {\n    //     return (self.editor !== null);\n    // }\n  }))\n  .actions(self => ({\n    setActivePolygon(poly) {\n      self.activePolygon = poly;\n    },\n\n    updateIE(ev) {\n      const { width, height, naturalWidth, naturalHeight } = ev.target;\n\n      if (self.hasStates) {\n        self.naturalWidth = naturalWidth;\n        self.naturalHeight = naturalHeight;\n        self.stageWidth = width;\n        self.stageHeight = height;\n\n        // const IE = getParentOfType(self, ImageEditorModel);\n        // IE.updateStageSize(width, height);\n        self.shapes.forEach(s => s.updateImageSize(width / naturalWidth, height / naturalHeight, width, height));\n      }\n    },\n\n    _setStageRef(ref) {\n      self._stageRef = ref;\n    },\n\n    _deleteSelectedShape() {\n      if (self.selectedShape) destroy(self.selectedShape);\n    },\n\n    setSelected(shape) {\n      self.selectedShape = shape;\n    },\n\n    _addShape(shape) {\n      self.shapes.push(shape);\n      self.completion.addRegion(shape);\n      self.setSelected(shape.id);\n      shape.selectRegion();\n    },\n\n    onImageClick(ev) {\n      // console.log(self.controlButton());\n      if (self.controlButtonType() === \"RectangleModel\") {\n        self._addRect(ev);\n      } else if (self.controlButtonType() === \"PolygonModel\") {\n        self._addPoly(ev);\n      } else if (self.controlButtonType() === \"PolygonLabelsModel\") {\n        if (self.activePolygon && !self.activePolygon.closed) {\n          self._addPoly(ev);\n        } else {\n          const states = self.completion.toNames.get(self.name);\n          const activeStates = states ? states.filter(c => c.isSelected == true) : null;\n          const clonedStates = activeStates ? activeStates.map(s => cloneNode(s)) : null;\n\n          if (clonedStates.length === 0) return;\n\n          self._addPoly(ev, clonedStates);\n\n          activeStates && activeStates.forEach(s => s.unselectAll());\n        }\n      } else if (self.controlButtonType() === \"RectangleLabelsModel\") {\n        const states = self.completion.toNames.get(self.name);\n        const activeStates = states ? states.filter(c => c.isSelected === true) : null;\n        const clonedStates = activeStates ? activeStates.map(s => cloneNode(s)) : null;\n\n        // don't allow to add RectangleLabel when there is no label selected\n        if (clonedStates.length === 0) return;\n\n        self._addRect(ev, clonedStates);\n\n        activeStates && activeStates.forEach(s => s.unselectAll());\n      }\n    },\n\n    _addRect(ev, states) {\n      // const _states = self.activeStates();\n      // const states = (_states) ? _states.map(s => cloneNode(s)) : null;\n      // const states = null;\n\n      // const image = self.completion.names.get(self.toname);\n\n      const iw = 200;\n      const ih = 200;\n\n      // console.log(states.toJSON());\n\n      // based on image width and height we can place rect somewhere\n      // in the center\n      const sw = 100;\n      const sh = 100;\n      // const name = guidGenerator();\n\n      let stroke = self.controlButton().rectstrokecolor;\n      // let stroke = self.editor.rectstrokecolor;\n      // const states = self.states;\n      // TODO you may need to filter this states, check Text.js\n      if (states && states.length) {\n        // console.log(states[0].toJSON());\n        // console.log(states);\n        stroke = states[0].getSelectedColor();\n      }\n\n      const wp = self.stageWidth / self.naturalWidth;\n      const hp = self.stageHeight / self.naturalHeight;\n\n      const wx = ev.evt.offsetX;\n      const wy = ev.evt.offsetY;\n\n      self.__addRect(Math.floor(wx - sw / 2), Math.floor(wy - sh / 2), sw, sh, stroke, states);\n    },\n\n    __addRect(x, y, sw, sh, stroke, states, coordstype) {\n      const c = self.controlButton();\n      const rect = RectRegionModel.create({\n        id: guidGenerator(),\n\n        x: x,\n        y: y,\n\n        width: sw,\n        height: sh,\n\n        opacity: parseFloat(c.opacity),\n        fillcolor: c.fillcolor,\n\n        strokewidth: parseInt(c.strokewidth),\n        strokecolor: stroke,\n\n        states: states,\n\n        coordstype: coordstype,\n      });\n\n      self._addShape(rect);\n    },\n\n    _addPoly(ev, states) {\n      let poly;\n      const w = 10;\n\n      if (self.activePolygon && self.activePolygon.closed) {\n        self.setActivePolygon(null);\n        return;\n      }\n\n      if (self.completion.dragMode === false) {\n        if (self.activePolygon) {\n          poly = self.activePolygon;\n        } else {\n          const c = self.controlButton();\n          poly = PolygonRegionModel.create({\n            id: guidGenerator(),\n            x: ev.evt.offsetX - w / 2,\n            y: ev.evt.offsetY - w / 2,\n            width: w,\n            height: w,\n\n            opacity: parseFloat(c.opacity),\n            fillcolor: c.fillcolor,\n\n            strokewidth: parseInt(c.strokewidth),\n            strokecolor: c.strokecolor,\n\n            pointsize: c.pointsize,\n            pointstyle: c.pointstyle,\n\n            states: states,\n          });\n\n          self.setActivePolygon(poly);\n\n          self.shapes.push(poly);\n          self.completion.addRegion(poly);\n\n          // self._addShape(poly);\n        }\n\n        poly.addPoint(ev.evt.offsetX - w / 2, ev.evt.offsetY - w / 2);\n\n        const stage = self._stageRef;\n        stage.container().style.cursor = \"default\";\n      }\n    },\n\n    toStateJSON() {\n      return self.shapes.map(r => r.toStateJSON());\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const params = [\"choices\", \"shape\", \"rectanglelabels\"];\n\n      params.forEach(item => {\n        if (!item in obj.value) {\n          throw new Error(\"Not valid param\");\n        }\n      });\n\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.rectanglelabels) {\n        const states = restoreNewsnapshot(fromModel);\n\n        states.fromStateJSON(obj);\n\n        self.__addRect(\n          obj.value.x,\n          obj.value.y,\n          obj.value.width,\n          obj.value.height,\n          states.getSelectedColor(),\n          [states],\n          \"perc\",\n        );\n      }\n\n      if (obj.value.shape) {\n        let modifySnap;\n        let shapeModel;\n\n        if (obj.from_name !== obj.to_name) {\n          modifySnap = restoreNewsnapshot(fromModel);\n          shapeModel = modifySnap.fromStateJSON(obj);\n          self.shapes.push(shapeModel);\n        }\n      }\n    },\n  }));\n\nconst ImageModel = types.compose(\n  \"ImageModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nclass TransformerComponent extends React.Component {\n  componentDidMount() {\n    this.checkNode();\n  }\n\n  componentDidUpdate() {\n    this.checkNode();\n  }\n\n  checkNode() {\n    // here we need to manually attach or detach Transformer node\n    const stage = this.transformer.getStage();\n    const { selectedShapeName } = this.props;\n\n    if (!selectedShapeName) {\n      this.transformer.detach();\n      this.transformer.getLayer().batchDraw();\n      return;\n    }\n\n    const selectedNode = stage.findOne(\".\" + selectedShapeName.id);\n    // do nothing if selected node is already attached\n    if (selectedNode === this.transformer.node()) {\n      return;\n    }\n\n    if (selectedNode) {\n      // attach to another node\n      this.transformer.attachTo(selectedNode);\n    } else {\n      // remove transformer\n      this.transformer.detach();\n    }\n    this.transformer.getLayer().batchDraw();\n  }\n\n  render() {\n    return (\n      <Transformer\n        resizeEnabled={true}\n        rotateEnabled={this.props.rotateEnabled}\n        anchorSize={8}\n        // borderEnabled={false}\n        // borderDash={[]}\n        // anchorCornerRadius={5}\n        // enabledAnchors={['top-left', 'top-right', 'bottom-left', 'bottom-right']}\n        ref={node => {\n          this.transformer = node;\n        }}\n      />\n    );\n  }\n}\n\nclass HtxImageView extends Component {\n  handleDblClick = ev => {\n    // const item = this.props.item;\n    // const poly = item.activePolygon;\n    // if (poly)\n    //     poly.closePoly();\n    // item.setActivePolygon(null);\n  };\n\n  handleOnClick = ev => {\n    const { item } = this.props;\n\n    // TODO this is a hack, for some reason stopPropagation is not\n    // working. And when you try to select a Rectangle the event\n    // propagates to Image as well. Which calls this function even\n    // if you click inside Rectangle. Current workaround is to\n    // check if our click lands inside the Rectangle/Polygon or\n    // not :-/\n    // const { offsetX, offsetY } = ev.evt;\n    // const shape = item.shapes.find(sh => sh.coordsInside(offsetX, offsetY));\n\n    // if (shape)\n    //     return;\n\n    return item.onImageClick(ev);\n  };\n\n  handleStageMouseDown = e => {\n    if (e.target === e.target.getStage()) {\n      return;\n    }\n\n    // clicked on transformer - do nothing\n    const clickedOnTransformer = e.target.getParent().className === \"Transformer\";\n    if (clickedOnTransformer) {\n      return;\n    }\n  };\n\n  render() {\n    // const width = 750;\n    const { item, store } = this.props;\n\n    // TODO fix me\n    if (!store.task) return null;\n\n    const divStyle = {};\n    const style = {\n      width: item.width,\n      maxWidth: item.maxwidth,\n    };\n\n    if (item.resize) {\n      style[\"transform\"] = \"scale(\" + item.resize + \", \" + item.resize + \")\";\n    }\n\n    if (item.hasStates) {\n      divStyle[\"position\"] = \"absolute\";\n      // const rotateEnabled = (item.editor.rectcanrotate == \"true\") ? true : false;\n      const rotateEnabled = item.controlButton().canrotate === \"true\" ? true : false;\n\n      return (\n        <div style={{ marginBottom: \"1em\", marginTop: \"1em\" }}>\n          <div style={divStyle}>\n            <img style={style} src={item._value} onLoad={item.updateIE} />\n          </div>\n          <Stage\n            ref={ref => {\n              item._setStageRef(ref);\n            }}\n            width={item.stageWidth}\n            height={item.stageHeight}\n            onDblClick={this.handleDblClick}\n            onClick={this.handleOnClick}\n            onMouseDown={this.handleStageMouseDown}\n          >\n            <Layer>\n              {item.shapes.map(s => {\n                return Tree.renderItem(s);\n              })}\n              <TransformerComponent rotateEnabled={rotateEnabled} selectedShapeName={this.props.item.selectedShape} />\n            </Layer>\n          </Stage>\n        </div>\n      );\n    } else {\n      divStyle[\"marginTop\"] = \"1em\";\n      return (\n        <div style={divStyle}>\n          <img style={style} src={item._value} onLoad={item.updateIE} />\n        </div>\n      );\n    }\n  }\n}\n\nconst HtxImage = inject(\"store\")(observer(HtxImageView));\n\nRegistry.addTag(\"image\", ImageModel, HtxImage);\n\nexport { ImageModel, HtxImage };\n","/**\n * Class for text data with 4 params:\n * start -> int: the index of the character where the range start.\n * end -> int: the index of the character where the range stop.\n * text -> string: the highlighted text.\n * data -> object: extra data (the props of the highlight component)\n */\nexport default class Range {\n  constructor(start, end, text, data = {}) {\n    this.start = start;\n    this.end = end;\n    this.text = text;\n    this.data = data;\n  }\n}\n","import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nexport default class TextNode extends Component {\n  render() {\n    return (\n      <span\n        data-position={this.props.position}\n        overlap={this.props.overlap}\n        key={this.props.keyNode ? this.props.keyNode : null}\n        style={this.props.style}\n      >\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nTextNode.propTypes = {\n  position: PropTypes.number,\n  overlap: PropTypes.string,\n  key: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Utils from \"../../utils\";\nimport TextNode from \"../TextNode/TextNode\";\n\nconst HtxTextNodeView = ({ store, range, id, highlightStyle, style, charIndex, children, overlap }) => {\n  const getStyle = range => (range ? highlightStyle : style);\n  const getRangeKey = () => `${id}-${range.start}-${charIndex}`;\n  const getNormalKey = () => `${id}-${charIndex}`;\n  const getKey = range => (range ? getRangeKey() : getNormalKey());\n\n  let wrapper = (\n    <span data-position={charIndex} key={getKey(range)} style={getStyle(range)}>\n      {children}\n    </span>\n  );\n\n  if (overlap && overlap.length) {\n    let bg;\n\n    if (range.states) {\n      range.states.map(i => {\n        bg = Utils.Colors.convertToRGBA(i.getSelectedColor(), 0.3);\n      });\n    }\n\n    store.completionStore.selected.regionStore.regions.map(i => {\n      if (i.selected) {\n        overlap.map(overlapItem => {\n          if (overlapItem === i.id) {\n            bg = \"#ff4d4f\";\n          }\n        });\n      }\n\n      if (i.highlighted && overlap.includes(i.id)) {\n        bg = \"#ff4d4f\";\n      }\n    });\n\n    wrapper = overlap.reduceRight((value, key) => {\n      return (\n        <TextNode\n          style={{ background: bg, padding: \"2px 0\" }}\n          position={charIndex}\n          overlap={key}\n          keyNode={getKey(range)}\n        >\n          {value}\n        </TextNode>\n      );\n    }, children);\n  }\n\n  return wrapper;\n};\n\nconst HtxTextNode = inject(\"store\")(observer(HtxTextNodeView));\nexport { HtxTextNode };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { HtxTextNode } from \"./Node\";\n\n/**\n * Node for URL\n * @param {*} props\n */\nconst UrlNode = props => {\n  const style = { wordWrap: \"break-word\" };\n\n  return (\n    <HtxTextNode\n      id={props.id}\n      highlightStyle={Object.assign({}, style, props.highlightStyle)}\n      charIndex={props.charIndex}\n      range={props.range}\n      overlap={props.overlap}\n      style={style}\n    >\n      <a data-position={props.charIndex + props.url.length} href={props.url} target=\"blank\">\n        {props.url}\n      </a>\n    </HtxTextNode>\n  );\n};\n\nUrlNode.propTypes = {\n  highlightStyle: PropTypes.object,\n  id: PropTypes.string,\n  charIndex: PropTypes.number,\n  range: PropTypes.object,\n  url: PropTypes.string,\n};\n\nexport default UrlNode;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport { HtxTextNode } from \"./Node\";\n\n/**\n * Node for Emoji\n * @param {*} props\n */\nconst EmojiNode = props => {\n  return (\n    <HtxTextNode\n      id={props.id}\n      highlightStyle={props.highlightStyle}\n      charIndex={props.charIndex}\n      range={props.range}\n      overlap={props.overlap}\n    >\n      {`${props.text[props.charIndex]}${props.text[props.charIndex + 1]}`}\n    </HtxTextNode>\n  );\n};\n\nEmojiNode.propTypes = {\n  id: PropTypes.string.isRequired,\n  highlightStyle: PropTypes.object,\n  charIndex: PropTypes.number.isRequired,\n  range: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  overlap: PropTypes.array,\n  text: PropTypes.string.isRequired,\n};\n\nexport default EmojiNode;\n","import emojiRegex from \"emoji-regex\";\nimport React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport Utils from \"../../utils\";\nimport Range from \"./Range\";\nimport { HtxTextNode } from \"./Node\";\nimport UrlNode from \"./UrlNode\";\nimport EmojiNode from \"./EmojiNode\";\nimport styles from \"./TextHighlight.module.scss\";\n\nclass TextHighlight extends Component {\n  constructor() {\n    super();\n\n    this.dismissMouseUp = 0;\n  }\n\n  /**\n   * Return first ok element\n   */\n  getRange(charIndex) {\n    if (this.props.ranges && this.props.ranges.length) {\n      return this.props.ranges.find(range => charIndex >= range.start && charIndex <= range.end);\n    }\n  }\n\n  /**\n   * Function when the user mouse is over an highlighted text\n   */\n  onMouseOverHighlightedWord(range, visible) {\n    if (visible && this.props.onMouseOverHighlightedWord) {\n      this.props.onMouseOverHighlightedWord(range);\n    }\n  }\n\n  getLetterNode(charIndex, range) {\n    /**\n     * Current symbol\n     */\n    const char = this.props.text[charIndex];\n\n    let nl;\n\n    /**\n     * Line break\n     */\n    if (char && char.charCodeAt()) {\n      nl = char.charCodeAt(0) === 10;\n    }\n\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <HtxTextNode\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        charIndex={charIndex}\n        key={`${this.props.id}-${charIndex}`}\n        highlightStyle={this.props.highlightStyle}\n        // style={{padding: \"2px 0\", background: \"linear-gradient(180deg, #fdcd3b 60%, #ffed4b 60%, red 9%)\"}}\n      >\n        {nl ? <br /> : char}\n      </HtxTextNode>\n    );\n  }\n\n  getEmojiNode(charIndex, range) {\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <EmojiNode\n        text={this.props.text}\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        key={`${this.props.id}-emoji-${charIndex}`}\n        charIndex={charIndex}\n        highlightStyle={this.props.highlightStyle}\n      />\n    );\n  }\n\n  getUrlNode(charIndex, range, url) {\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <UrlNode\n        url={url}\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        key={`${this.props.id}-url-${charIndex}`}\n        charIndex={charIndex}\n        highlightStyle={this.props.highlightStyle}\n      />\n    );\n  }\n\n  mouseEvent() {\n    if (!this.props.enabled) {\n      return false;\n    }\n\n    let text = \"\";\n\n    if (window.getSelection) {\n      /**\n       * Get highlited text\n       * Tip: with helper elements (hints)\n       */\n      // text = window.getSelection().toString();\n\n      if (window.getSelection().type === \"None\") return;\n\n      /**\n       * Create clone range\n       */\n      let cloneCont = window\n        .getSelection()\n        .getRangeAt(0)\n        .cloneRange();\n\n      /**\n       * The Range.cloneContents() returns a DocumentFragment copying the objects of type Node included in the Range.\n       */\n      let selectionContents = cloneCont.cloneContents();\n      /**\n       * Create virtual div with text\n       */\n      let virtualDiv = document.createElement(\"div\");\n\n      virtualDiv.appendChild(selectionContents);\n\n      let elementsWithSup = virtualDiv.getElementsByTagName(\"sup\");\n\n      if (elementsWithSup.length > 0) {\n        for (let i = 0; i < elementsWithSup.length; i++) {\n          elementsWithSup[i].innerText = \"\";\n        }\n        text = virtualDiv.innerText;\n      } else {\n        text = virtualDiv.innerText;\n      }\n    } else if (document.selection && document.selection.type !== \"Control\") {\n      text = document.selection.createRange().text;\n    }\n\n    if (!text || !text.length) return false;\n\n    const range = window.getSelection().getRangeAt(0);\n\n    /**\n     * Check for hint\n     */\n    if (range.startContainer.parentNode.dataset.hint || range.endContainer.parentNode.dataset.hint) return;\n\n    /**\n     * Start position of selected item\n     */\n    const startContainerPosition = parseInt(range.startContainer.parentNode.dataset.position);\n    /**\n     * End position of selected item\n     */\n    const endContainerPosition = parseInt(range.endContainer.parentNode.dataset.position);\n\n    let startHL = startContainerPosition < endContainerPosition ? startContainerPosition : endContainerPosition;\n    let endHL = startContainerPosition < endContainerPosition ? endContainerPosition : startContainerPosition;\n\n    const rangeObj = new Range(startHL, endHL, text, {\n      ...this.props,\n      ranges: undefined,\n    });\n\n    this.props.onTextHighlighted(rangeObj);\n  }\n\n  /**\n   *\n   * @param {*} event\n   */\n  onMouseUp(event) {\n    this.mouseEvent.bind(this)();\n\n  }\n\n  onMouseDown(event) {\n    // console.log(event)\n  }\n\n  onMouseEnter(event) {\n    // console.log(event)\n  }\n\n  /**\n   * Double click on text\n   * @param {*} event\n   */\n  onDoubleClick(event) {\n    // WARN\n    // event.stopPropagation();\n    // this.doucleckicked = true;\n    // this.mouseEvent.bind(this)();\n  }\n\n  /**\n   * @param {object} letterGroup All marked sections of text\n   * @param {object} range Range of marked section\n   * @param {number} textCharIndex The last number of selection\n   * @param {function} onMouseOverHighlightedWord\n   */\n  rangeRenderer(letterGroup, range, textCharIndex, onMouseOverHighlightedWord) {\n    if (this.props.rangeRenderer) {\n      return this.props.rangeRenderer(letterGroup, range, textCharIndex, onMouseOverHighlightedWord);\n    }\n\n    return letterGroup;\n  }\n\n  getNode(i, range, text, url, isEmoji) {\n    if (url.length) {\n      return this.getUrlNode(i, range, url);\n    } else if (isEmoji) {\n      return this.getEmojiNode(i, range);\n    }\n\n    return this.getLetterNode(i, range);\n  }\n\n  getRanges() {\n    /**\n     * Text with nodes\n     */\n    const newText = [];\n\n    let lastRange;\n\n    /**\n     * For all the characters on the text\n     */\n    for (let textCharIndex = 0; textCharIndex < this.props.text.length; textCharIndex++) {\n      /**\n       * Get range text\n       */\n      const range = this.getRange(textCharIndex);\n\n      /**\n       * Check characters for URL\n       */\n      const url = Utils.Checkers.getUrl(textCharIndex, this.props.text);\n\n      /**\n       * Check characters for emoji\n       */\n      const isEmoji = emojiRegex().test(this.props.text[textCharIndex] + this.props.text[textCharIndex + 1]);\n\n      /**\n       * Get the current character node\n       */\n      const node = this.getNode(textCharIndex, range, this.props.text, url, isEmoji);\n\n      /**\n       * If the next node is an url one, we fast forward to the end of it\n       */\n      if (url.length) {\n        textCharIndex += url.length - 1;\n      } else if (isEmoji) {\n        /**\n         * Because an emoji is composed of 2 chars\n         */\n        textCharIndex++;\n      }\n\n      if (!range) {\n        newText.push(node);\n        continue;\n      }\n\n      /**\n       * If the char is in range\n       */\n      lastRange = range;\n\n      // console.log(this.props.text[lastRange.start], this.props.text[lastRange.end])\n\n      /**\n       * We put the first range node on the array\n       */\n      const letterGroup = [node];\n\n      /**\n       * For all the characters in the highlighted range\n       */\n      let rangeCharIndex = textCharIndex + 1;\n\n      // if (rangeCharIndex >= parseInt(range.start) && rangeCharIndex <= parseInt(range.end)) {\n      //   console.log(this.props.text[parseInt(range.end)])\n      // }\n      // console.log(textCharIndex, range.start, range.end)\n\n      for (; rangeCharIndex < parseInt(range.end) + 1; rangeCharIndex++) {\n        /**\n         * Emoji handler\n         */\n        const isEmoji = emojiRegex().test(`${this.props.text[rangeCharIndex]}${this.props.text[rangeCharIndex + 1]}`);\n\n        if (isEmoji) {\n          letterGroup.push(this.getEmojiNode(rangeCharIndex, range));\n          // Because an emoji is composed of 2 chars\n          rangeCharIndex++;\n        } else {\n          letterGroup.push(this.getLetterNode(rangeCharIndex, range));\n        }\n\n        textCharIndex = rangeCharIndex;\n      }\n\n      newText.push(this.rangeRenderer(letterGroup, range, textCharIndex, this.onMouseOverHighlightedWord.bind(this)));\n    }\n\n    if (lastRange) {\n      // Callback function\n      this.onMouseOverHighlightedWord(lastRange, true);\n    }\n\n    return newText;\n  }\n\n  render() {\n    const newText = this.getRanges();\n\n    return (\n      <div\n        className={styles.block}\n        style={this.props.style}\n        onMouseUp={this.onMouseUp.bind(this)}\n        onMouseDown={this.onMouseDown.bind(this)}\n        onMouseEnter={this.onMouseEnter.bind(this)}\n        onDoubleClick={this.onDoubleClick.bind(this)}\n      >\n        {newText}\n      </div>\n    );\n  }\n}\n\nexport default observer(TextHighlight);\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { TextModel } from \"./Text\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport Hint from \"../../components/Hint/Hint\";\nimport Utils from \"../../utils\";\n\nimport styles from \"./TextRegion/TextRegion.module.scss\";\n\nconst Model = types\n  .model(\"TextRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"textrange\",\n    start: types.integer,\n    end: types.integer,\n    text: types.string,\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel))),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    highlightStates() {},\n\n    /**\n     *\n     */\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.pid,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"region\",\n          // text: parent.text,\n          value: {\n            start: self.start,\n            end: self.end,\n            text: self.text,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst TextRegionModel = types.compose(\n  \"TextRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\n/**\n * Region state hint\n * @param {*} props\n */\nconst RegionState = props => {\n  const localState = props.state;\n\n  /**\n   * Get name of label\n   */\n  const selectedString = localState.getSelectedString();\n  const selectedColor = Utils.Colors.convertToRGBA(localState.getSelectedColor(), 0.3);\n  let style = {\n    background: selectedColor,\n  };\n\n  if (props.style) style = { ...style, outline: props.style.outline };\n\n  return (\n    <Hint className={styles.state} style={style}>\n      <span data-hint={true}>&nbsp;[{selectedString}]</span>\n    </Hint>\n  );\n};\n\nconst HtxTextRegionView = ({ store, item, letterGroup, range, textCharIndex, onMouseOverHighlightedWord }) => {\n  /**\n   * Get color of label\n   */\n  let labelColor = \"rgba(0, 0, 255, 0.1)\";\n\n  if (range.states) {\n    labelColor = range.states.map(s => {\n      return s.getSelectedColor();\n    });\n  }\n\n  /**\n   * TODO\n   * Update function to all formats\n   */\n  if (labelColor.length !== 0) {\n    labelColor = Utils.Colors.convertToRGBA(labelColor[0], 0.3);\n  }\n\n  let markStyle = {\n    padding: \"2px 0px\",\n    position: \"relative\",\n    borderRadius: \"2px\",\n    cursor: store.completionStore.selected.relationMode ? \"crosshair\" : \"pointer\",\n  };\n\n  let regionStates = [];\n\n  if ((range.states && range.states.length) > 0) {\n    range.states.map(state => {\n      regionStates.push(\n        <RegionState\n          key={range.id}\n          state={state}\n          bg={labelColor}\n          hover={store.completionStore.selected.relationMode ? true : false}\n          selected={range.selected}\n          style={range.highlighted ? { outline: \"2px solid red\" } : null}\n        />,\n      );\n    });\n  }\n\n  /**\n   * Without label\n   */\n  if (!regionStates.length) {\n    markStyle = {\n      ...markStyle,\n      background: \"rgba(0, 0, 255, 0.1)\",\n    };\n  }\n\n  return (\n    <span\n      style={markStyle}\n      onClick={range.onClickRegion}\n      onMouseOver={() => {\n        if (store.completionStore.selected.relationMode) {\n          range.setHighlight(true);\n        }\n      }}\n      onMouseOut={() => {\n        if (store.completionStore.selected.relationMode) {\n          range.setHighlight(false);\n        }\n      }}\n    >\n      {letterGroup}\n      {regionStates}\n    </span>\n  );\n};\n\nconst HtxTextRegion = inject(\"store\")(observer(HtxTextRegionView));\n\nRegistry.addTag(\"textrange\", TextRegionModel, HtxTextRegion);\n\nexport { TextRegionModel, HtxTextRegion };\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getType, getRoot } from \"mobx-state-tree\";\n\nimport { cloneNode } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport TextHighlight from \"../../components/TextHighlight/TextHighlight\";\nimport { runTemplate } from \"../../core/Template\";\nimport { TextRegionModel, HtxTextRegion } from \"./TextRegion\";\n\n/**\n * Text tag, show text box\n * @example\n * <Text name=\"text-1\" value=\"$text\"></Text>\n * @name Text\n * @param {string} name of group\n * @param {string} value\n * @param {boolean} selelectwithoutlabel\n */\nconst TagAttrs = types.model(\"TextModel\", {\n  name: types.maybeNull(types.string),\n  // text: types.maybeNull(types.optional(types.string, \"Please set \\\"value\\\" attribute of Text\")),\n  value: types.maybeNull(types.string),\n  selelectwithoutlabel: types.optional(types.string, \"false\"),\n\n  hidden: types.optional(types.enumeration([\"true\", \"false\"]), \"false\"),\n  /**\n   * If we allow selecting parts of words of we select whole word only\n   */\n  adjustselection: types.optional(types.string, \"true\"),\n  selectionenabled: types.optional(types.string, \"true\"),\n});\n\nconst Model = types\n  .model(\"TextModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"text\",\n    regions: types.array(TextRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states\n        ? states.filter(s => s.isSelected && (getType(s).name === \"LabelsModel\" || getType(s).name === \"RatingModel\"))\n        : null;\n    },\n  }))\n  .actions(self => ({\n    remove() {\n      // if (self.generated) {\n      //     const m = Registry.getModelByTag('textarea');\n      //     const ta = getParentOfType(self, m);\n      //     ta.deleteText(self);\n      // }\n    },\n\n    findRegion(start, end) {\n      const immutableRange = self.regions.find(r => r.start === start && r.end === end);\n      return immutableRange;\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj);\n    },\n\n    _addRegion(params) {\n      const r = TextRegionModel.create(params);\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(range) {\n      const states = self.activeStates();\n      const clonedStates = states\n        ? states.map(s => {\n            return cloneNode(s);\n          })\n        : null;\n\n      /**\n       * Selelect without label\n       * Default: false\n       */\n      if (self.selelectwithoutlabel === \"false\" && !clonedStates.length) return null;\n\n      const r = self._addRegion({\n        start: range.start,\n        end: range.end,\n        text: range.text,\n        states: clonedStates, // tl.cloneActiveStates()\n      });\n\n      states &&\n        states.forEach(s => {\n          return s.unselectAll();\n        });\n\n      return r;\n    },\n\n    /**\n     * Return JSON\n     */\n    toStateJSON() {\n      const objectsToReturn = self.regions.map(r => r.toStateJSON());\n      return objectsToReturn;\n    },\n\n    /**\n     *\n     * @param {*} obj\n     * @param {*} fromModel\n     */\n    fromStateJSON(obj, fromModel) {\n      let r;\n\n      const tree = {\n        pid: obj.id,\n        start: obj.value.start,\n        end: obj.value.end,\n        text: obj.value.text,\n        normalization: obj.normalization,\n      };\n\n      if (fromModel.type === \"choices\") {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n        return;\n      }\n\n      if (obj.from_name === obj.to_name) {\n        r = self._addRegion(tree);\n      } else {\n        const region = self.findRegion(obj.value.start, obj.value.end);\n        const m = restoreNewsnapshot(fromModel);\n\n        // update state\n        m.fromStateJSON(obj);\n\n        if (!region) {\n          tree.states = [m];\n          r = self._addRegion(tree);\n        } else {\n          region.states.push(m);\n        }\n      }\n\n      return r;\n    },\n  }));\n\nconst TextModel = types.compose(\n  \"TextModel\",\n  TagAttrs,\n  Model,\n);\n\nclass HtxTextView extends Component {\n  renderRegion(letterGroup, range, textCharIndex, onMouseOverHighlightedWord) {\n    return (\n      <HtxTextRegion\n        key={range.id}\n        store={this.props.store}\n        item={this.props.item}\n        letterGroup={letterGroup}\n        range={range}\n        selected={range.selected}\n        textCharIndex={textCharIndex}\n        onMouseOverHighlightedWord={onMouseOverHighlightedWord}\n      />\n    );\n  }\n\n  render() {\n    const self = this;\n\n    const { store, item } = this.props;\n    const style = {};\n    if (item.hidden == \"true\") style[\"display\"] = \"none\";\n\n    return (\n      <div style={style}>\n        <TextHighlight\n          id={item.id}\n          key={item.id}\n          text={item._value}\n          enabled={item.selectionenabled === \"true\" ? true : false}\n          ranges={item.regions}\n          adjustSelection={item.adjustselection}\n          rangeRenderer={self.renderRegion.bind(this)}\n          onTextHighlighted={range => {\n            item.addRegion(range);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst HtxText = inject(\"store\")(observer(HtxTextView));\n\nRegistry.addTag(\"text\", TextModel, HtxText);\n\nexport { TextModel, HtxText };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType } from \"mobx-state-tree\";\nimport { Checkbox, Form } from \"semantic-ui-react\";\n\nimport { ChoicesModel } from \"./Choices\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\n\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\nimport Hint from \"../../components/Hint/Hint\";\nimport ChoiceComponent from '../../components/Choice/Choice';\n\n/**\n * Choice tag, represents single choice\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single\">\n *     <Choice alias=\"M\" value=\"Male\"></Choice>\n *     <Choice alias=\"F\" value=\"Female\"></Choice>\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\"></Text>\n * </View>\n * @name Choice\n * @param {string} value label value\n * @param {boolean=} selected If this label should be preselected\n * @param {string=} alias label alias\n * @param {string=} hotkey hokey\n */\nconst TagAttrs = types.model({\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  style: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"choice\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get isCheckbox() {\n      const choice = getParentOfType(self, ChoicesModel).choice;\n      return choice === \"multiple\" || choice === \"single\";\n    },\n\n    get name() {\n      return getParentOfType(self, ChoicesModel).name;\n    },\n  }))\n  .actions(self => ({\n    toggleSelected() {\n      const choice = getParentOfType(self, ChoicesModel);\n\n      choice.shouldBeUnselected && choice.unselectAll();\n\n      self.markSelected(!self.selected);\n    },\n\n    markSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst ChoiceModel = types.compose(\n  \"ChoiceModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxChoice = inject(\"store\")(\n  observer(({ item, store }) => {\n    let style = {};\n\n    if (item.style) style = Tree.cssConverter(item.style);\n\n    if (item.isCheckbox) {\n      const cStyle = Object.assign({ marginRight: \"1em\", display: \"flex\", alignItems: \"center\" }, style);\n\n      return (\n        <div style={cStyle}>\n          <Checkbox\n            name={item._value}\n            label={item._value}\n            onChange={ev => {\n              item.toggleSelected();\n            }}\n            checked={item.selected}\n          />\n          {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n        </div>\n      );\n    } else {\n      const label = (\n        <label>\n          {item._value}\n          {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n        </label>\n      );\n\n      return (\n        <div style={style}>\n          <Form.Radio\n            label={label}\n            value={item._value}\n            style={{ display: \"inline-block\" }}\n            checked={item.selected}\n            onChange={ev => {\n              item.toggleSelected();\n            }}\n          />\n        </div>\n      );\n    }\n    // return (\n    //   <ChoiceComponent\n    //     name={item._value}\n    //     onChange={ev => {\n    //       item.toggleSelected();\n    //     }}\n    //     hint={store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && `${item.hotkey}`}\n    //     value={item._value}\n    //     checked={item.selected}\n    //   >\n    //     {item._value}\n    //   </ChoiceComponent>\n    // );\n  }),\n);\n\nRegistry.addTag(\"choice\", ChoiceModel, HtxChoice);\n\nexport { HtxChoice, ChoiceModel };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Radio } from \"antd\";\n\nimport Hint from \"../Hint/Hint\";\n\n/**\n * Choice Component\n */\nexport default class ChoiceComponent extends React.Component {\n  render() {\n    let hint;\n\n    if (this.props.hint) {\n      hint = <Hint>[{this.props.hint}]</Hint>;\n    }\n\n    return (\n      <Radio\n        value={this.props.value}\n        onChange={this.props.onChange}\n        checked={this.props.checked}\n        defaultChecked={this.props.checked}\n      >\n        {this.props.children}\n        {hint}\n      </Radio>\n    );\n  }\n}\n\nChoiceComponent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  value: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  hint: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { Component } from \"react\";\n\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\n\nimport { ChoiceModel } from \"./Choice\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { Form } from \"semantic-ui-react\";\n\n/**\n * Choices tag, create group of choices, radio or checkboxes\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single-radio\">\n *     <Choice alias=\"M\" value=\"Male\"></Choice>\n *     <Choice alias=\"F\" value=\"Female\"></Choice>\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\"></Text>\n * </View>\n * @name Choices\n * @param {string} name of group\n * @param {string} toName name of element that you want to label\n * @param {single|single-radio|multiple=} [choice=single] one or more\n * @param {boolean} showInline\n */\nconst TagAttrs = types.model({\n  name: types.string,\n  toname: types.maybeNull(types.string),\n  showinline: types.optional(types.string, \"false\"),\n  choice: types.optional(types.enumeration([\"single\", \"single-radio\", \"multiple\"]), \"single\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"choices\",\n    children: Types.unionArray([\"choice\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\" || self.choice === \"single-radio\";\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      const names = self.getSelectedNames();\n\n      if (names && names.length) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            choices: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.choices) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.choices.forEach(l => {\n        const choice = self.findLabel(l);\n        if (!choice) throw new Error(\"No label \" + l);\n\n        choice.markSelected(true);\n      });\n    },\n  }));\n\nconst ChoicesModel = types.compose(\n  \"ChoicesModel\",\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\n\nconst HtxChoices = observer(({ item }) => {\n  return (\n    <div style={{ marginTop: \"1em\" }}>\n      <Form>\n        {item.showinline === \"true\" ? (\n          <Form.Group inline>{Tree.renderChildren(item)}</Form.Group>\n        ) : (\n          <Form.Group grouped>{Tree.renderChildren(item)}</Form.Group>\n        )}\n      </Form>\n    </div>\n  );\n});\n\nRegistry.addTag(\"choices\", ChoicesModel, HtxChoices);\n\nexport { HtxChoices, ChoicesModel, TagAttrs };\n","import React, { createRef, Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Message, Icon, Popup, Button, Dropdown, Input } from \"semantic-ui-react\";\n\nimport Types from \"../../core/Types\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport { TextAreaModel } from \"../control/TextArea\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model(\"TextAreaRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"textarearegion\",\n\n    _value: types.string,\n    // states: types.array(types.union(LabelsModel, ChoicesModel)),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextAreaModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }));\n\nconst TextAreaRegionModel = types.compose(\n  \"TextAreaRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxTextAreaRegionView = ({ store, item }) => {\n  let markStyle = {\n    cursor: store.completionStore.selected.relationMode ? \"crosshair\" : \"pointer\",\n  };\n\n  if (item.selected) {\n    markStyle = {\n      ...markStyle,\n      border: \"1px solid red\",\n    };\n  } else if (item.highlighted) {\n    markStyle = {\n      ...markStyle,\n      border: \"2px solid red\",\n    };\n  }\n\n  return (\n    <Message\n      className=\"warning\"\n      style={markStyle}\n      onClick={item.onClickRegion}\n      onMouseOver={() => {\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(true);\n        }\n      }}\n      onMouseOut={() => {\n        /* range.setHighlight(false); */\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(false);\n        }\n      }}\n    >\n      <p>{item._value}</p>\n    </Message>\n  );\n};\n\nconst HtxTextAreaRegion = inject(\"store\")(observer(HtxTextAreaRegionView));\n\nRegistry.addTag(\"textarearegion\", TextAreaRegionModel, HtxTextAreaRegion);\n\nexport { TextAreaRegionModel, HtxTextAreaRegion };\n","import React, { Component } from \"react\";\n\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, destroy, getEnv, flow, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Form, Message } from \"semantic-ui-react\";\n\nimport { renderChildren } from \"../../core/Tree\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\nimport { HtxTextAreaRegion, TextAreaRegionModel } from \"../object/TextAreaRegion\";\n\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * TextArea tag, show textarea for user input\n * @example\n * <View>\n *   <TextArea name=\"ta\"></TextArea>\n * </View>\n * @name TextArea\n * @param {string} name\n * @param {string} toName name of element that you want to label\n * @param {string} value\n * @param {string=} label label text\n * @param {string=} placeholder placeholder text\n * @param {string=} maxSubmissions maximum number of submissions\n */\nconst TagAttrs = types.model({\n  allowSubmit: types.optional(types.string, \"true\"),\n  label: types.optional(types.string, \"\"),\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  placeholder: types.maybeNull(types.string),\n  maxsubmissions: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"textarea\",\n    regions: types.array(TextAreaRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get submissionsNum() {\n      return self.regions.length;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get showSubmit() {\n      if (self.maxsubmissions) {\n        const num = parseInt(self.maxsubmissions);\n        return self.submissionsNum < num;\n      } else {\n        return true;\n      }\n    },\n  }))\n  .actions(self => ({\n    setValue(value) {\n      self._value = value;\n    },\n\n    addText(text, pid) {\n      const r = TextAreaRegionModel.create({\n        pid: pid,\n        _value: text,\n      });\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    beforeSend() {\n      if (self._value && self._value.length) {\n        self.addText(self._value);\n      }\n    },\n\n    deleteText(text) {\n      destroy(text);\n    },\n\n    toStateJSON() {\n      const toname = self.toname || self.name;\n\n      return [\n        self.regions.map(r => {\n          return {\n            id: r.pid,\n            from_name: self.name,\n            to_name: toname,\n            type: self.type,\n            value: {\n              text: r._value,\n            },\n          };\n        }),\n      ];\n    },\n\n    fromStateJSON(obj, fromModel) {\n      return self.addText(obj.value.text, obj.id);\n    },\n  }));\n\nconst TextAreaModel = types.compose(\n  \"TextAreaModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxTextArea = observer(({ item }) => {\n  return (\n    <div>\n      {item.regions.length > 0 && (\n        <div style={{ marginTop: \"1em\", marginBottom: \"1em\" }}>\n          {item.regions.map(t => (\n            <HtxTextAreaRegion item={t} />\n          ))}\n        </div>\n      )}\n\n      {item.showSubmit && (\n        <Form\n          onSubmit={ev => {\n            if (item.allowSubmit === \"true\") {\n              item.addText(item._value);\n              item.setValue(\"\");\n            }\n\n            ev.preventDefault();\n            return false;\n          }}\n        >\n          <Form.Input\n            value={item._value}\n            className=\"is-search\"\n            label={item.label}\n            placeholder={item.placeholder}\n            onChange={ev => {\n              const { value } = ev.target;\n              item.setValue(value);\n            }}\n          />\n        </Form>\n      )}\n    </div>\n  );\n});\n\nRegistry.addTag(\"textarea\", TextAreaModel, HtxTextArea);\n\nexport { TextAreaModel, HtxTextArea };\n","import React from \"react\";\n\nimport Registry from \"../../core/Registry\";\nimport { types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { List } from \"semantic-ui-react\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { variableNotation } from \"../../core/Template\";\n\nconst ListItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * List element, used for ranking results. Great choice for recomendation systems.\n * @example\n * <View>\n *  <HyperText value=\"$markup\"></HyperText>\n *  <List name=\"ranker\" value=\"$replies\" elementValue=\"$text\" elementTag=\"Text\" ranked=\"true\" sortedHighlightColor=\"#fcfff5\"></List>\n * </View>\n * @name List\n * @param {string} elementValue lookup key for child object\n * @param {Text|Image|Audio} elementTag element used to render children\n * @param {string} value list value\n * @param {string} name of group\n * @param {string=} sortedHighlightColor color\n * @param {string=} axis axis used for drag-n-drop\n * @param {string=} lockAxis lock axis\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  // ranked: types.optional(types.string, \"true\"),\n  // sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"list\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(ListItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    addRegion(vals, idx) {\n      const reg = ListItemModel.create({\n        value: self.elementvalue,\n        idx: idx,\n        _value: variableNotation(self.elementvalue, vals[idx]),\n      });\n\n      self.regions.push(reg);\n    },\n\n    updateValue(store) {\n      const val = variableNotation(self.value, store.task.dataObj);\n\n      // in case we're in expert mode it will call updateValue\n      // on each new task loaded, therefore we need to remove\n      // previously loaded regions here\n      self.regions = [];\n      val.forEach((v, idx) => self.addRegion(val, idx));\n\n      val.forEach((v, idx) => {\n        v[\"_orig_idx\"] = idx;\n      });\n\n      self._value = val;\n      self.setUpdate();\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex === newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      const map = {};\n\n      self._value.forEach((v, idx) => {\n        map[self.regions[idx].idx] = 1 / (1 + idx);\n      });\n\n      const ranked = Object.keys(map)\n        .sort((a, b) => a - b)\n        .map(function(v) {\n          return map[v];\n        });\n\n      const selected = [];\n      for (let i = 0; i < Object.keys(map).length; i++) {\n        selected[self.regions[i].idx] = self.regions[i].selected ? 1 : 0;\n      }\n\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          weights: ranked,\n          selected: selected,\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const ranked = [];\n      const regions = [];\n      const item_weight = {};\n\n      obj.value.weights.forEach((v, idx) => {\n        if (item_weight[v]) {\n          item_weight[v].push(idx);\n        } else {\n          item_weight[v] = [idx];\n        }\n      });\n\n      Object.keys(item_weight)\n        .sort((a, b) => b - a)\n        .forEach(v => {\n          const idxes = item_weight[v];\n          idxes.forEach(idx => {\n            regions.push(self.regions[idx]);\n            ranked.push(self._value[idx]);\n          });\n        });\n\n      regions.forEach((r, idx) => r.setIdx(idx));\n\n      self._value = ranked;\n      self.regions = regions;\n\n      // self.regions = ranked;\n      self.setUpdate();\n    },\n  }));\n\nconst ListModel = types.compose(\n  \"ListModel\",\n  TagAttrs,\n  Model,\n);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} alt=\"image\" />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxListView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxList = inject(\"store\")(observer(HtxListView));\n\nRegistry.addTag(\"list\", ListModel, HtxList);\n\nexport { ListModel, HtxList };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Registry from \"../../core/Registry\";\nimport { types, getParentOfType, destroy, getRoot, getParent } from \"mobx-state-tree\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { List } from \"semantic-ui-react\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { runTemplate, variableNotation } from \"../../core/Template\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\nconst RankerItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * Ranker tag, used to ranking models\n * @example\n * <View>\n *   <Ranker name=\"ranker\" value=\"$items\"></Ranker>\n * </View>\n * @name Ranker\n * @param {string} name of group\n * @param {y|x=} [axis=y] axis direction\n * @param {string} sortedHighlightColor sorted color\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  // elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  ranked: types.optional(types.string, \"true\"),\n  sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"ranker\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(RankerItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    _addRegion(val, idx) {\n      const reg = RankerItemModel.create({\n        value: val,\n        idx: idx,\n        _value: val,\n      });\n\n      self.regions.push(reg);\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex == newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          // weights: ranked,\n          items: self.regions.map(r => r.value),\n          selected: self.regions.map(r => r.selected),\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      obj.value.items.forEach((v, idx) => {\n        self._addRegion(v, idx);\n      });\n\n      self.setUpdate();\n    },\n  }));\n\nconst RankerModel = types.compose(\n  \"RankerModel\",\n  TagAttrs,\n  Model,\n);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxRankerView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxRanker = inject(\"store\")(observer(HtxRankerView));\n\nRegistry.addTag(\"ranker\", RankerModel, HtxRanker);\n\nexport { RankerModel, HtxRanker };\n","/**\n * Libraries\n */\nimport React, { Component } from \"react\";\nimport parse5 from \"parse5\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getSnapshot } from \"mobx-state-tree\";\nimport { Segment } from \"semantic-ui-react\";\nimport { Result, Spin, notification } from \"antd\";\n\n/**\n * Core\n */\nimport Registry from \"../../core/Registry\";\nimport Requests from \"../../core/Requests\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Tree from \"../../core/Tree\";\n\n/**\n * Components\n */\nimport Completions from \"../Completions/Completions\";\nimport Controls from \"../Controls/Controls\";\nimport Panel from \"../Panel/Panel\";\nimport Settings from \"../Settings/Settings\";\nimport Debug from \"../Debug\";\nimport SideColumn from \"../SideColumn/SideColumn\";\n\n/**\n * Visual\n */\nimport { ViewModel } from \"../../interfaces/visual/View\";\nimport { TableModel } from \"../../interfaces/visual/Table\";\nimport { HeaderModel } from \"../../interfaces/visual/Header\";\nimport { HyperTextModel } from \"../../interfaces/visual/HyperText\";\nimport { DialogModel } from \"../../interfaces/visual/Dialog\";\n\n/**\n * Object\n */\nimport { AudioModel } from \"../../interfaces/object/Audio\";\nimport { AudioPlusModel } from \"../../interfaces/object/AudioPlus\";\nimport { ImageModel } from \"../../interfaces/object/Image\";\nimport { TextModel } from \"../../interfaces/object/Text\";\n\n/**\n * Control\n */\nimport { RectangleModel } from \"../../interfaces/control/Rectangle\";\nimport { PolygonModel } from \"../../interfaces/control/Polygon\";\nimport { RectangleLabelsModel } from \"../../interfaces/control/RectangleLabels\";\nimport { PolygonLabelsModel } from \"../../interfaces/control/PolygonLabels\";\nimport { ChoicesModel } from \"../../interfaces/control/Choices\";\nimport { TextAreaModel } from \"../../interfaces/control/TextArea\";\nimport { RatingModel } from \"../../interfaces/control/Rating\";\nimport { ListModel } from \"../../interfaces/control/List\";\nimport { RankerModel } from \"../../interfaces/control/Ranker\";\n\n/**\n * Styles\n */\nimport styles from \"./App.module.scss\";\n\n/**\n * App\n */\nconst App = inject(\"store\")(\n  observer(\n    class App extends Component {\n      renderSuccess() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"Done!\" />;\n      }\n\n      renderNoCompletion() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"No more completions\" />;\n      }\n\n      renderNothingToLabel() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"No more data available for labeling\" />;\n      }\n\n      renderLoader() {\n        return <Result icon={<Spin size=\"large\" />} />;\n      }\n\n      render() {\n        const self = this;\n        const { store } = this.props;\n\n        if (store.isLoading) return this.renderLoader();\n\n        if (store.noTask) return this.renderNothingToLabel();\n\n        if (store.labeledSuccess) return this.renderSuccess();\n\n        if (!store.completionStore.currentCompletion) return this.renderNoCompletion();\n\n        const { root } = store.completionStore.currentCompletion;\n\n        return (\n          <div className={styles.editor}>\n            <Settings store={store} />\n            <Provider store={store}>\n              <div>\n                {store.hasInterface(\"panel\") && <Panel store={store} />}\n\n                {store.showingDescription && (\n                  <Segment>\n                    <div dangerouslySetInnerHTML={{ __html: store.description }} />\n                  </Segment>\n                )}\n\n                <div className={\"common-container\"}>\n                  <Segment style={{ maxWidth: \"1200px\", minWidth: \"70%\" }}>\n                    {Tree.renderItem(root)}\n                    {store.hasInterface(\"submit\") && <Controls />}\n                  </Segment>\n\n                  <div className={styles.menu}>\n                    {store.hasInterface(\"completions\") && <Completions store={store} />}\n\n                    {store.hasInterface(\"side-column\") && <SideColumn store={store} />}\n                  </div>\n                </div>\n              </div>\n            </Provider>\n          </div>\n        );\n      }\n    },\n  ),\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport Utilities from \"../utils\";\n\nconst TaskStore = types\n  .model(\"Task\", {\n    id: types.identifierNumber,\n    data: types.maybeNull(types.string),\n    project: types.number,\n  })\n  .views(self => ({\n    get app() {\n      return getParent(self);\n    },\n\n    /**\n     * Return JSON with task data\n     * @returns {object}\n     */\n    get dataObj() {\n      if (Utilities.Checkers.isStringJSON(self.data)) {\n        return JSON.parse(self.data);\n      } else {\n        return null;\n      }\n    },\n  }));\n\nexport default TaskStore;\n","import { types, resolvePath, getEnv, onSnapshot, getSnapshot, applySnapshot } from \"mobx-state-tree\";\nimport { IObservableArray } from \"mobx\";\n\nconst TimeTraveller = types\n  .model(\"TimeTraveller\", {\n    history: types.array(types.frozen()),\n    undoIdx: -1,\n    targetPath: \"\",\n\n    createdIdx: 1,\n\n    isFrozen: types.optional(types.boolean, false),\n    frozenIdx: -1,\n  })\n  .views(self => ({\n    get canUndo() {\n      // [TODO] since we initialize state a bit incorrectly we end up with 2 items in history\n      // before even any action takes place. To protect those items we keep them in history forever\n      return self.undoIdx > 1;\n    },\n    get canRedo() {\n      return self.undoIdx < self.history.length - 1;\n    },\n  }))\n  .actions(self => {\n    let targetStore;\n    let snapshotDisposer;\n    let skipNextUndoState = false;\n\n    return {\n      freeze() {\n        self.isFrozen = true;\n        skipNextUndoState = true;\n        self.frozenIdx = self.undoIdx;\n      },\n\n      addUndoState(ss) {\n        if (skipNextUndoState) {\n          // skip recording if this state was caused by undo / redo\n          skipNextUndoState = false;\n          return;\n        }\n        self.history.splice(self.undoIdx + 1);\n        self.history.push(ss);\n        self.undoIdx = self.history.length - 1;\n      },\n      afterCreate() {\n        targetStore = self.targetPath ? resolvePath(self, self.targetPath) : getEnv(self).targetStore;\n\n        if (!targetStore)\n          throw new Error(\n            \"Failed to find target store for TimeTraveller. Please provide `targetPath`  property, or a `targetStore` in the environment\",\n          );\n        // TODO: check if targetStore doesn't contain self\n        // if (contains(targetStore, self)) throw new Error(\"TimeTraveller shouldn't be recording itself. Please specify a sibling as taret, not some parent\")\n        // start listening to changes\n        snapshotDisposer = onSnapshot(targetStore, snapshot => this.addUndoState(snapshot));\n        // record an initial state if no known\n        if (self.history.length === 0) {\n          this.addUndoState(getSnapshot(targetStore));\n        }\n\n        self.createdIdx = self.undoIdx;\n      },\n      beforeDestroy() {\n        snapshotDisposer();\n      },\n      undo() {\n        if (self.isFrozen && self.frozenIdx <= self.undoIdx) return;\n\n        self.undoIdx--;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      redo() {\n        self.undoIdx++;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      set(idx) {\n        self.undoIdx = idx;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      reset() {\n        self.undoIdx = self.createdIdx;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n    };\n  });\n\nexport default TimeTraveller;\n","import keymaster from \"keymaster\";\n\nlet _hotkeys_map = {};\n\n/**\n * Add key\n * @param {*} key\n * @param {*} func\n */\nfunction addKey(key, func) {\n  if (_hotkeys_map[key]) return;\n\n  _hotkeys_map[key] = true;\n  keymaster(key, \"main\", func);\n}\n\n/**\n * Unbund all hotkeys\n */\nfunction unbindAll() {\n  for (let key of Object.keys(_hotkeys_map)) keymaster.unbind(key);\n\n  _hotkeys_map = {};\n}\n\n/**\n * Set scope of hotkeys\n * @param {*} scope\n */\nfunction setScope(scope) {\n  keymaster.setScope(scope);\n}\n\n/**\n * Create combination\n */\nfunction makeComb() {\n  let prefix = null;\n  let st = \"1234567890qwertasdfgzxcvbyuiophjklnm\";\n  let combs = st.split(\"\");\n\n  for (var i = 0; i <= combs.length; i++) {\n    let comb;\n    if (prefix) comb = prefix + \"+\" + combs[i];\n    else comb = combs[i];\n\n    if (!_hotkeys_map.hasOwnProperty(comb)) return comb;\n  }\n\n  return null;\n}\n\nexport default { addKey, unbindAll, makeComb, setScope };\n","import { types, getParent, getEnv, flow, destroy, getMembers } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\nimport Types from \"../core/Types\";\n\nimport { TextRegionModel } from \"../interfaces/object/TextRegion\";\nimport { RectRegionModel } from \"../interfaces/object/RectRegion\";\nimport { AudioRegionModel } from \"../interfaces/object/AudioRegion\";\nimport { TextAreaRegionModel } from \"../interfaces/object/TextAreaRegion\";\nimport { PolygonRegionModel } from \"../interfaces/object/PolygonRegion\";\n\nconst Relation = types\n  .model(\"Relation\", {\n    node1: types.reference(\n      types.union(TextRegionModel, RectRegionModel, AudioRegionModel, TextAreaRegionModel, PolygonRegionModel),\n    ),\n    node2: types.reference(\n      types.union(TextRegionModel, RectRegionModel, AudioRegionModel, TextAreaRegionModel, PolygonRegionModel),\n    ),\n  })\n  .actions(self => ({\n    toggleHighlight() {\n      if (self.node1 == self.node2) {\n        self.node1.toggleHightlight();\n      } else {\n        self.node1.toggleHightlight();\n        self.node2.toggleHightlight();\n      }\n    },\n  }));\n\nexport default types\n  .model(\"RelationStore\", {\n    relations: types.array(Relation),\n  })\n  .actions(self => ({\n    findRelations(node1, node2) {\n      if (!node2) {\n        return self.relations.filter(rl => {\n          return rl.node1.id == node1.id || rl.node2.id == node1.id;\n        });\n      }\n\n      return self.relations.filter(rl => {\n        return rl.node1.id == node1.id && rl.node2.id == node2.id;\n      });\n    },\n\n    nodesRelated(node1, node2) {\n      return self.findRelations(node1, node2).length > 0;\n    },\n\n    addRelation(node1, node2) {\n      if (self.nodesRelated(node1, node2)) return;\n\n      const rl = Relation.create({\n        node1: node1,\n        node2: node2,\n      });\n\n      // self.relations.unshift(rl);\n      self.relations.push(rl);\n\n      return rl;\n    },\n\n    deleteRelation(rl) {\n      destroy(rl);\n    },\n\n    deleteNodeRelation(node) {\n      // lookup $node and delete it's relation\n      const rl = self.findRelations(node);\n      rl.length && rl.forEach(self.deleteRelation);\n    },\n\n    serializeCompletion() {\n      return self.relations.map(r => {\n        return {\n          from_id: r.node1.pid,\n          to_id: r.node2.pid,\n          type: \"relation\",\n        };\n      });\n    },\n\n    deserializeRelation(node1, node2) {\n      self.addRelation(node1, node2);\n    },\n  }));\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport { TextRegionModel } from \"../interfaces/object/TextRegion\";\nimport { RectRegionModel } from \"../interfaces/object/RectRegion\";\nimport { PolygonRegionModel } from \"../interfaces/object/PolygonRegion\";\nimport { AudioRegionModel } from \"../interfaces/object/AudioRegion\";\nimport { TextAreaRegionModel } from \"../interfaces/object/TextAreaRegion\";\n\nexport default types\n  .model(\"RegionStore\", {\n    regions: types.array(\n      types.safeReference(\n        types.union(TextRegionModel, RectRegionModel, PolygonRegionModel, AudioRegionModel, TextAreaRegionModel),\n      ),\n    ),\n  })\n  .actions(self => ({\n    addRegion(region) {\n      self.regions.push(region);\n    },\n\n    findRegion(pid) {\n      return self.regions.find(r => r.pid === pid);\n    },\n\n    /**\n     * Delete region\n     * @param {obj} region\n     */\n    deleteRegion(region) {\n      const arr = self.regions;\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === region) {\n          arr.splice(i, 1);\n        }\n      }\n    },\n\n    unselectAll() {\n      self.regions.forEach(r => r.unselectRegion());\n      getParent(self).setHighlightedNode(null);\n    },\n\n    unhighlightAll() {\n      self.regions.forEach(r => r.setHighlight(false));\n    },\n  }));\n","import { types, getParent, getEnv, flow, destroy, detach, getMembers } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\nimport Types from \"../core/Types\";\n\nimport Registry from \"../core/Registry\";\nimport Tree from \"../core/Tree\";\nimport TimeTraveller from \"../core/TimeTraveller\";\nimport Hotkey from \"../core/Hotkey\";\n\nimport RelationStore from \"./RelationStore\";\nimport RegionStore from \"./RegionStore\";\nimport { RectangleModel } from \"../interfaces/control/Rectangle\";\n\nimport * as HtxObjectModel from \"../interfaces/object\";\n\nconst Completion = types\n  .model(\"Completion\", {\n    id: types.identifier,\n    pk: types.optional(types.integer, 1),\n    selected: types.optional(types.boolean, false),\n\n    createdDate: types.optional(types.string, new Date().toISOString()),\n    createdAgo: types.maybeNull(types.string),\n    createdBy: types.optional(types.string, \"Admin\"),\n\n    honeypot: types.optional(types.boolean, false),\n\n    root: Types.allModelsTypes(),\n    names: types.map(types.reference(Types.allModelsTypes())),\n    toNames: types.map(types.array(types.reference(Types.allModelsTypes()))),\n\n    history: types.optional(TimeTraveller, { targetPath: \"../root\" }),\n\n    dragMode: types.optional(types.boolean, false),\n\n    relationMode: types.optional(types.boolean, false),\n    relationStore: types.optional(RelationStore, {\n      relations: [],\n    }),\n\n    normalizationMode: types.optional(types.boolean, false),\n    // normalizationStore: types.optional(NormalizationStore, {\n    //     normalizations: []\n    // }),\n\n    regionStore: types.optional(RegionStore, {\n      regions: [],\n    }),\n\n    highlightedNode: types.maybeNull(\n      types.union(\n        types.safeReference(HtxObjectModel.TextRegionModel),\n        types.safeReference(HtxObjectModel.RectRegionModel),\n        types.safeReference(HtxObjectModel.AudioRegionModel),\n        types.safeReference(HtxObjectModel.TextAreaRegionModel),\n        types.safeReference(HtxObjectModel.PolygonRegionModel),\n        types.safeReference(RectangleModel),\n      ),\n    ),\n  })\n  .views(self => ({\n    get store() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    reinitHistory() {\n      self.history = { targetPath: \"../root\" };\n    },\n    // send update to server\n    _updateServerState(state) {\n      let appStore = getParent(self, 3);\n      let url = \"/api/tasks/\" + appStore.task.id + \"/completions/\" + self.pk + \"/\";\n\n      getEnv(self).patch(url, JSON.stringify(state));\n    },\n\n    setHoneypot() {\n      self.honeypot = true;\n      self._updateServerState({ honeypot: self.honeypot });\n    },\n\n    setDragMode(val) {\n      self.dragMode = val;\n    },\n\n    setNormalizationMode(val) {\n      self.normalizationMode = val;\n    },\n\n    setHighlightedNode(node) {\n      self.highlightedNode = node;\n    },\n\n    startRelationMode(node1) {\n      self._relationObj = node1;\n      self.relationMode = true;\n    },\n\n    stopRelationMode() {\n      self._relationObj = null;\n      self.relationMode = false;\n\n      self.regionStore.unhighlightAll();\n    },\n\n    deleteAllRegions() {\n      self.regionStore.regions.forEach(r => r.deleteRegion());\n    },\n\n    addRegion(reg) {\n      self.regionStore.unselectAll();\n      self.regionStore.addRegion(reg);\n\n      if (self.relationMode) {\n        self.addRelation(reg);\n        self.stopRelationMode();\n      }\n    },\n\n    /**\n     * Add relation\n     * @param {*} reg\n     */\n    addRelation(reg) {\n      self.relationStore.addRelation(self._relationObj, reg);\n    },\n\n    /**\n     * Remove honeypot\n     */\n    removeHoneypot() {\n      self.honeypot = false;\n      self._updateServerState({ honeypot: self.honeypot });\n    },\n\n    traverseTree(cb) {\n      let visitNode;\n      visitNode = function(node) {\n        cb(node);\n\n        if (node.children) {\n          node.children.forEach(chld => visitNode(chld));\n        }\n      };\n\n      visitNode(self.root);\n    },\n\n    /**\n     *\n     */\n    beforeSend() {\n      self.traverseTree(node => {\n        if (node && node.beforeSend) {\n          node.beforeSend();\n        }\n      });\n\n      self.stopRelationMode();\n      self.regionStore.unselectAll();\n    },\n\n    /**\n     * Delete region\n     * @param {*} region\n     */\n    deleteRegion(region) {\n      destroy(region);\n    },\n\n    afterCreate() {\n      self.traverseTree(node => {\n        // create mapping from name to Model (by ref)\n        if (node && node.name && node.id) self.names.set(node.name, node.id);\n\n        if (node && node.toname && node.id) {\n          const val = self.toNames.get(node.toname);\n          if (val) {\n            val.push(node.id);\n          } else {\n            self.toNames.set(node.toname, [node.id]);\n          }\n        }\n      });\n\n      Hotkey.unbindAll();\n\n      // [TODO] we need to traverse this two times, fix\n      self.traverseTree(node => {\n        if (node && node.onHotKey && node.hotkey) Hotkey.addKey(node.hotkey, node.onHotKey);\n      });\n\n      self.traverseTree(node => {\n        if (node && node.onHotKey && !node.hotkey) {\n          const comb = Hotkey.makeComb();\n\n          if (!comb) return;\n\n          node.hotkey = comb;\n          Hotkey.addKey(node.hotkey, node.onHotKey);\n        }\n      });\n\n      Hotkey.setScope(\"main\");\n    },\n\n    serializeCompletion() {\n      const arr = [];\n\n      self.traverseTree(node => {\n        if (node.toStateJSON) {\n          const val = node.toStateJSON();\n\n          if (val) arr.push(val);\n        }\n      });\n\n      const relations = self.relationStore.serializeCompletion();\n      arr.push(relations);\n\n      const flatten = arr => {\n        return arr.reduce(function(flat, toFlatten) {\n          return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n        }, []);\n      };\n\n      return flatten(arr);\n    },\n\n    /**\n     * Deserialize completion of models\n     */\n    deserializeCompletion(json) {\n      json.forEach(obj => {\n        if (obj[\"type\"] !== \"relation\") {\n          const names = obj.to_name.split(\",\");\n          names.forEach(name => {\n            const toModel = self.names.get(name);\n            if (!toModel) throw new Error(\"No model found for \" + obj.to_name);\n\n            const fromModel = self.names.get(obj.from_name);\n            if (!fromModel) throw new Error(\"No model found for \" + obj.from_name);\n\n            toModel.fromStateJSON(obj, fromModel);\n          });\n        } else {\n          self.relationStore.deserializeRelation(\n            self.regionStore.findRegion(obj.from_id),\n            self.regionStore.findRegion(obj.to_id),\n          );\n        }\n      });\n    },\n  }));\n\nexport default types\n  .model(\"CompletionStore\", {\n    completions: types.array(Completion),\n    selected: types.maybeNull(types.reference(Completion)),\n  })\n  .views(self => ({\n    /**\n     * Get current completion\n     */\n    get currentCompletion() {\n      return self.selected && self.completions.find(c => c.id === self.selected.id);\n    },\n\n    /**\n     * Get parent\n     */\n    get store() {\n      return getParent(self);\n    },\n\n    /**\n     * Get only those that were saved\n     */\n    get savedCompletions() {\n      return self.completions.filter(c => !c.was_generated);\n    },\n  }))\n  .actions(self => {\n    function selectCompletion(id) {\n      self.completions.map(c => (c.selected = false));\n      const c = self.completions.find(c => c.id === id);\n\n      // [FIXME]\n      // if (self.selected && self.selected.id !== c.id)\n      //     c.history.reset();\n\n      c.selected = true;\n      self.selected = c;\n    }\n\n    /**\n     * Adding new completion\n     * @param {object} node\n     * @param {string} type\n     */\n    function addCompletion(node, type) {\n      const c = Completion.create(node);\n\n      if (self.store.task && type == \"initial\")\n        c.traverseTree(node => node.updateValue && node.updateValue(self.store));\n\n      self.completions.push(c);\n\n      return c;\n    }\n\n    const _deleteCompletion = flow(function* _deleteCompletion(pk) {\n      try {\n        const json = yield getEnv(self).remove(\"/api/tasks/\" + self.store.task.id + \"/completions/\" + pk + \"/\");\n      } catch (err) {\n        console.error(\"Failed to skip task \", err);\n      }\n    });\n\n    function destroyCompletion(completion) {\n      destroy(completion);\n\n      self.selected = null;\n      if (self.completions.length > 0) self.selectCompletion(self.completions[0].id);\n    }\n\n    function deleteCompletion(completion) {\n      _deleteCompletion(completion.pk);\n      destroyCompletion(completion);\n    }\n\n    /**\n     *\n     * @param {*} c\n     */\n    function addSavedCompletion(c) {\n      const completionModel = Tree.treeToModel(self.store.config);\n      const modelClass = Registry.getModelByTag(completionModel.type);\n\n      let root = modelClass.create(completionModel);\n\n      const node = {\n        pk: c.id,\n        id: guidGenerator(),\n        createdAgo: c.created_ago,\n        createdBy: c.created_username,\n        honeypot: c.honeypot,\n        root: root,\n      };\n\n      const completion = self.addCompletion(node, \"list\");\n      return completion;\n    }\n\n    /**\n     * Initial Completion\n     * @returns {object}\n     */\n    function addInitialCompletion() {\n      const completionModel = Tree.treeToModel(self.store.config);\n      const modelClass = Registry.getModelByTag(completionModel.type);\n\n      let root = modelClass.create(completionModel);\n\n      const node = {\n        id: guidGenerator(),\n        root: root,\n      };\n\n      if (self.store.expert) {\n        const { expert } = self.store;\n        node[\"createdBy\"] = expert.firstName + \" \" + expert.lastName;\n      } else {\n        node[\"createdBy\"] = \"Admin\";\n      }\n\n      let completion = self.addCompletion(node, \"initial\");\n\n      return completion;\n    }\n\n    return {\n      selectCompletion,\n      addCompletion,\n      deleteCompletion,\n      destroyCompletion,\n      addInitialCompletion,\n      addSavedCompletion,\n    };\n  });\n","import { types, getEnv, flow, getSnapshot } from \"mobx-state-tree\";\n\nimport Task from \"./TaskStore\";\nimport CompletionStore from \"./CompletionStore\";\nimport Hotkey from \"../core/Hotkey\";\n\nconst UserStore = types.model(\"UserStore\", {\n  pk: types.integer,\n  firstName: types.string,\n  lastName: types.string,\n});\n\nconst SettingsModel = types\n  .model(\"SettingsModel\", {\n    enableHotkeys: types.optional(types.boolean, true),\n    enablePanelHotkeys: types.optional(types.boolean, true),\n    enableTooltips: types.optional(types.boolean, true),\n  })\n  .actions(self => ({\n    toggleHotkeys() {\n      self.enableHotkeys = !self.enableHotkeys;\n      if (self.enableHotkeys) {\n        Hotkey.setScope(\"main\");\n      } else {\n        Hotkey.setScope(\"none\");\n      }\n    },\n\n    togglePanelHotkeys() {\n      self.enablePanelHotkeys = !self.enablePanelHotkeys;\n    },\n\n    toggleTooltips() {\n      self.enableTooltips = !self.enableTooltips;\n    },\n  }));\n\nexport default types\n  .model(\"AppStore\", {\n    config: types.string,\n\n    task: types.maybeNull(Task),\n    taskID: types.maybeNull(types.number),\n\n    interfaces: types.array(types.string),\n\n    completionStore: types.optional(CompletionStore, {\n      completions: [],\n    }),\n\n    projectID: types.integer,\n\n    expert: UserStore,\n\n    debug: types.optional(types.boolean, true),\n\n    settings: types.optional(SettingsModel, {}),\n\n    showingSettings: types.optional(types.boolean, false),\n    showingDescription: types.optional(types.boolean, false),\n    description: types.maybeNull(types.string),\n\n    isLoading: types.optional(types.boolean, false),\n    noTask: types.optional(types.boolean, false),\n    labeledSuccess: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get fetch() {\n      return getEnv(self).fetch;\n    },\n    get alert() {\n      return getEnv(self).alert;\n    },\n    get post() {\n      return getEnv(self).post;\n    },\n  }))\n  .actions(self => {\n    function setDescription(text) {\n      self.description = text;\n    }\n\n    function toggleSettings() {\n      self.showingSettings = !self.showingSettings;\n    }\n\n    const openDescription = flow(function* openDescription() {\n      let url = \"/api/projects/\" + self.projectID + \"/expert_instruction\";\n      const res = yield self.fetch(url);\n\n      if (res.status === 200) {\n        res.text().then(function(text) {\n          self.setDescription(text);\n        });\n      } else {\n        self.setDescription(\"No instructions for this task\");\n      }\n\n      self.showingDescription = true;\n    });\n\n    function closeDescription() {\n      self.showingDescription = false;\n    }\n\n    function markLoading(loading) {\n      self.isLoading = loading;\n    }\n\n    function hasInterface(name) {\n      return self.interfaces.find(i => name === i);\n    }\n\n    const afterCreate = function() {\n      if (!self.task) self.loadTask();\n\n      Hotkey.addKey(\"ctrl+enter\", self.sendTask);\n\n      if (self.hasInterface(\"submit:skip\")) Hotkey.addKey(\"ctrl+space\", self.skipTask);\n\n      Hotkey.addKey(\"ctrl+backspace\", function() {\n        const { selected } = self.completionStore;\n        selected.deleteAllRegions();\n      });\n\n      Hotkey.addKey(\"ctrl+z\", function() {\n        const { history } = self.completionStore.selected;\n        history && history.canUndo && history.undo();\n      });\n\n      Hotkey.addKey(\"escape\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.relationMode) {\n          c.stopRelationMode();\n        }\n      });\n\n      Hotkey.addKey(\"backspace\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.highlightedNode) {\n          c.highlightedNode.deleteRegion();\n        }\n      });\n    };\n\n    function loadTask() {\n      return self.taskID\n        ? _loadTask(\"/api/tasks/\" + self.taskID + \"/\")\n        : _loadTask(\"/api/projects/\" + self.projectID + \"/next\");\n    }\n\n    function addTask(json) {\n      self.task = Task.create(json);\n    }\n\n    function resetState() {\n      self.completionStore = CompletionStore.create({ completions: [] });\n      const c = self.completionStore.addInitialCompletion();\n\n      self.completionStore.selectCompletion(c.id);\n    }\n\n    function addGeneratedCompletion(data) {\n      if (\"completion_result\" in data && !self.hasInterface(\"predictions:hide\")) {\n        const c = self.completionStore.selected;\n        c.deserializeCompletion(data[\"completion_result\"]);\n        c.reinitHistory();\n      }\n    }\n\n    const _loadTask = flow(function* _loadTask(url) {\n      try {\n        const res = yield self.fetch(url);\n\n        if (res instanceof Response && res.status === 404) {\n          self.markLoading(false);\n          self.noTask = true;\n          return;\n        }\n\n        res.json().then(function(r) {\n          r.data = JSON.stringify(r.data);\n\n          self.addTask(r);\n          self.markLoading(false);\n\n          if (self.hasInterface(\"completions\") && r.completions) {\n            self.completionStore.destroyCompletion(self.completionStore.selected);\n\n            for (var i = 0; i < r.completions.length; i++) {\n              const c = r.completions[i];\n\n              if (c.was_cancelled === true) continue;\n\n              const comp = self.completionStore.addSavedCompletion(c);\n              comp.traverseTree(node => node.updateValue && node.updateValue(self));\n              self.completionStore.selectCompletion(comp.id);\n\n              comp.deserializeCompletion(JSON.parse(c.result));\n              comp.reinitHistory();\n            }\n          } else {\n            if (self.completionStore.selected)\n              self.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n\n            self.addGeneratedCompletion(r);\n          }\n        });\n      } catch (err) {\n        console.error(\"Failed to load next task \", err);\n      }\n    });\n\n    const skipTask = flow(function* skipTask() {\n      self.markLoading(true);\n\n      try {\n        const json = yield self.post(\n          \"/api/tasks/\" + self.task.id + \"/cancel/\",\n          JSON.stringify({ data: JSON.stringify({ error: \"cancelled\" }) }),\n        );\n\n        self.resetState();\n        return loadTask();\n      } catch (err) {\n        console.error(\"Failed to skip task \", err);\n      }\n    });\n\n    const sendTask = flow(function* sendTask() {\n      const c = self.completionStore.selected;\n\n      c.beforeSend();\n\n      const res = c.serializeCompletion();\n\n      if (self.hasInterface(\"submit:check-empty\") && res.length === 0) {\n        alert(\"You need to label at least something!\");\n        return;\n      }\n\n      self.markLoading(true);\n\n      try {\n        const state = getSnapshot(c);\n\n        const body = JSON.stringify({\n          state: JSON.stringify(state),\n          result: JSON.stringify(res),\n        });\n\n        yield self.post(\"/api/tasks/\" + self.task.id + \"/completions/\", body);\n\n        if (hasInterface(\"submit:load\")) {\n          self.resetState();\n          return loadTask();\n        } else {\n          self.markLoading(false);\n          self.labeledSuccess = true;\n        }\n\n        delete state.history;\n      } catch (err) {\n        console.error(\"Failed to send task \", err);\n      }\n    });\n\n    function initializeStore({ completions }) {\n      // console.log(args);\n      // const { completions } = args;\n\n      // console.log(self.task);\n\n      const generatedCompletions = [];\n      const { completionStore } = self;\n\n      if (completions && completions.length) {\n        for (var i = 0; i < completions.length; i++) {\n          const c = completions[i];\n\n          if (c.was_cancelled === true) continue;\n\n          if (c.was_generated) generatedCompletions.push(c);\n        }\n      }\n\n      //         else {\n      // const comp = completionStore.addSavedCompletion(c);\n      // completionStore.selectCompletion(comp.id);\n\n      // comp.deserializeCompletion(JSON.parse(c.result));\n      // comp.reinitHistory();\n\n      // const comp = JSON.parse(c.state);\n\n      // comp.pk = c.id;\n      // comp.createdAgo = c.created_ago;\n      // comp.honeypot = c.honeypot;\n\n      // completionStore.addCompletion(comp, 'list');\n      //     }\n      // }\n\n      //     if (completionStore.completions.length)\n      //         completionStore.selectCompletion(completionStore.completions[0].id);\n      // }\n\n      if (completionStore.completions.length === 0) {\n        const c = self.completionStore.addInitialCompletion();\n        self.completionStore.selectCompletion(c.id);\n\n        if (generatedCompletions.length > 0) {\n          let data = generatedCompletions[0].result;\n\n          if (typeof generatedCompletions[0].result === \"string\") {\n            data = JSON.parse(generatedCompletions[0].result);\n          }\n\n          c.deserializeCompletion(data);\n\n          c.reinitHistory();\n        }\n      }\n    }\n\n    return {\n      afterCreate,\n      loadTask,\n      addTask,\n      hasInterface,\n      skipTask,\n      sendTask,\n      markLoading,\n      resetState,\n      openDescription,\n      closeDescription,\n      setDescription,\n      toggleSettings,\n      initializeStore,\n      addGeneratedCompletion,\n    };\n  });\n","function getData() {\n  // TODO remove, this is here because MST either takes string or a\n  // fully features typed tree\n  if (window.taskData) window.taskData.data = JSON.stringify(window.taskData.data);\n\n  const data = {\n    projectID: window.projectID,\n    isLoading: false,\n    config: window.editorAppConfig,\n    // task: window.taskData,\n    taskID: window.taskID,\n    expert: window.expertData,\n    debug: window.debugEditor,\n    interfaces: window.editorInterfaces ? window.editorInterfaces : [\"basic\", \"completions\"],\n  };\n\n  // this is here to make project_render_editor to work because it\n  // expects static config\n  if (window.preRender) {\n    data[\"task\"] = window.taskData;\n  }\n\n  // /tasks/$id/explore\n  if (window.explore) {\n    data[\"interfaces\"] = window.editorInterfaces ? window.editorInterfaces : [\"basic\", \"completions\"];\n  } else {\n    data[\"interfaces\"] = window.editorInterfaces\n      ? window.editorInterfaces\n      : [\"basic\", \"submit\", \"submit:skip\", \"submit:submit\"];\n  }\n\n  return data;\n}\n\nfunction rootElement() {\n  const el = document.createElement(\"div\");\n  var root = document.getElementById(\"root\");\n  root.innerHTML = \"\";\n  root.appendChild(el);\n\n  return el;\n}\n\nfunction getState() {\n  const c = window.taskData && window.taskData.completions ? window.taskData.completions : null;\n\n  return {\n    completions: c,\n  };\n}\n\nexport default { getData, getState, rootElement };\n","/**\n * Object with configs for test\n * TODO: sorting other configs\n */\nconst configEnv = {\n  default: {\n    config: `<View><Text name=\"txt-1\" value=\"$text\"></Text></View>`,\n    data: {\n      text: `mobx-state-tree is a state container that combines the simplicity and ease of mutable data with the traceability of immutable data and the reactiveness and performance of observable data.\n      Simply put, mobx-state-tree tries to combine the best features of both immutability (transactionality, traceability and composition) and mutability (discoverability, co-location and encapsulation) based approaches to state management; everything to provide the best developer experience possible. Unlike MobX itself, mobx-state-tree is very opinionated about how data should be structured and updated. This makes it possible to solve many common problems out of the box.\n      Central in MST (mobx-state-tree) is the concept of a living tree. The tree consists of mutable, but strictly protected objects enriched with runtime type information. In other words, each tree has a shape (type information) and state (data). From this living tree, immutable, structurally shared, snapshots are automatically generated.`,\n    },\n    task: {\n      id: 402324,\n      completions: [],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n  },\n  gptc: {\n    config: `<View>\n        <Text name=\"mytext\" value=\"$text\"></Text>\n        <Choices name=\"mytext_class\" toName=\"mytext\" choice=\"single\">\n          <Choice value=\"important\" alias=\"Important document\"></Choice>\n          <Choice value=\"other\" alias=\"Other\"></Choice>\n        </Choices>\n      </View>`,\n    data: {\n      text: `mobx-state-tree is a state container that combines the simplicity and ease of mutable data with the traceability of immutable data and the reactiveness and performance of observable data.\n      Simply put, mobx-state-tree tries to combine the best features of both immutability (transactionality, traceability and composition) and mutability (discoverability, co-location and encapsulation) based approaches to state management; everything to provide the best developer experience possible. Unlike MobX itself, mobx-state-tree is very opinionated about how data should be structured and updated. This makes it possible to solve many common problems out of the box.\n      Central in MST (mobx-state-tree) is the concept of a living tree. The tree consists of mutable, but strictly protected objects enriched with runtime type information. In other words, each tree has a shape (type information) and state (data). From this living tree, immutable, structurally shared, snapshots are automatically generated.`,\n    },\n    task: {\n      id: 402324,\n      completions: [],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n  },\n  ner: {\n    config: `<View>\n    <Labels name=\"ner\" toName=\"text\">\n      <Label value=\"Person\"></Label>\n      <Label value=\"Organization\"></Label>\n      <Label value=\"Fact\"></Label>\n      <Label value=\"Money\"></Label>\n      <Label value=\"Date\"></Label>\n      <Label value=\"Time\"></Label>\n      <Label value=\"Ordinal\"></Label>\n      <Label value=\"Percent\"></Label>\n      <Label value=\"Product\"></Label>\n      <Label value=\"Language\"></Label>\n      <Label value=\"Location\"></Label>\n    </Labels>\n    <Text name=\"text\" value=\"$text\"></Text>\n  </View>`,\n    data: {\n      text: `mobx-state-tree is a state container that combines the simplicity and ease. Apple's and 😋App Store are still broken http://t.co/gIrx8G4pcC http://t.co/fwTXH2aSvC`,\n      texta: \"To have faith is to trust yourself to the water\",\n    },\n    task: {\n      id: 402324,\n      completions: [\n        {\n          id: 137601,\n          model_version: \"2019-04-10 10:52:20.591839\",\n          result: [\n            {\n              id: \"RuJ2GrJyG8\",\n              from_name: \"ner\",\n              to_name: \"text\",\n              source: \"$text\",\n              type: \"labels\",\n              value: {\n                start: 8,\n                end: 12,\n                text: \"faith\",\n                labels: [\"Fact\"],\n              },\n            },\n          ],\n          score: 1.0,\n          created_at: \"2019-04-10T10:53:28.822843Z\",\n          updated_at: \"2019-04-10T10:53:28.822851Z\",\n          task: 71937,\n          was_generated: true,\n        },\n      ],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n  },\n  bbox: {\n    config: `<View>\n        <RectangleLabels name=\"tag\" toName=\"image\">\n          <Label value=\"Cat\"></Label>\n          <Label value=\"Dog\" background=\"blue\"></Label>\n        </RectangleLabels>\n        <Image name=\"image\" value=\"$image_url\"></Image>\n      </View>\n    `,\n    task: {\n      id: 402324,\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n      completions: [],\n    },\n    data: {\n      image_url: \"https://go.heartex.net/static/samples/kittens.jpg\",\n    },\n  },\n  image: {\n    config: `<View> <Image name=\"image\" value=\"$image_url\"/> <Choices name=\"cats_or_dogs\" toName=\"image\">   <Choice value=\"Cat\"></Choice>   <Choice value=\"Dog\"></Choice> </Choices></View>`,\n    data: {\n      image_url: \"http://s3.amazonaws.com/heartex-private/cats_n_dogs/training_set/dogs/dog.887.jpg\",\n    },\n    task: {\n      id: 402324,\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      exposed: true,\n      project: 139,\n      completions: [\n        {\n          completed_by: null,\n          created_ago: \"2 months\",\n          created_at: \"2019-05-14T05:02:41.289000Z\",\n          created_username: \"\",\n          honeypot: true,\n          id: 1430,\n          result: '[{\"type\":\"choices\",\"value\":{\"choices\":[\"Dog\"]},\"to_name\":\"image\",\"from_name\":\"cats_or_dogs\"}]',\n          state: \"{}\",\n          task: 163260,\n          updated_at: \"2019-05-14T05:02:41.289000Z\",\n          was_cancelled: false,\n          was_generated: true,\n        },\n      ],\n    },\n  },\n  cda: {\n    config: `<View>\n    <HyperText name=\"dialog\" value=\"$dialogs\"></HyperText>\n    <Header value=\"Rate last answer:\"></Header>\n    <Choices name=\"chc-1\" choice=\"single-radio\" toName=\"dialog\">\n      <Choice value=\"Bad answer\"></Choice>\n      <Choice value=\"Neutral answer\"></Choice>\n      <Choice value=\"Good answer\"></Choice>\n    </Choices>\n    <Header value=\"Your answer:\"></Header>\n    <TextArea name=\"answer\"></TextArea>\n  </View>`,\n    task: {},\n    data: {},\n  },\n  dialog: {\n    config: `<View>\n        <Header value=\"Select choice:\"></Header>\n        <Dialog value=\"$dialoga\" name=\"dial\"></Dialog>\n        <Choices showInline=\"true\" name=\"mytext_class\" toName=\"dial\">\n          <Choice value=\"important\"></Choice>\n          <Choice value=\"other\"></Choice>\n        </Choices>\n      </View>`,\n    task: {\n      id: 402324,\n      completions: [\n        {\n          completed_by: 55,\n          created_ago: \"16 hours, 57 minutes\",\n          created_at: \"2019-07-19T17:48:15.465239Z\",\n          created_username: \"\",\n          honeypot: false,\n          id: 8440,\n          result: '[{\"type\":\"choices\",\"value\":{\"choices\":[\"important\"]},\"to_name\":\"dial\",\"from_name\":\"mytext_class\"}]',\n          task: 761928,\n          updated_at: \"2019-07-19T17:48:15.465264Z\",\n          was_cancelled: false,\n          was_generated: true,\n        },\n      ],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n\n    data: {\n      dialoga: [\n        {\n          name: \"Jules Winnfield\",\n          text: \"Okay, so, tell me about the hash bars\",\n          id: 100,\n        },\n        {\n          name: \"Vasya\",\n          text: \"So what you want to know?\",\n          date: \"1 August, 2019\",\n        },\n        {\n          name: \"Jules Winnfield\",\n          text: \"Well, hash is legal there, right?\",\n          selected: true,\n          date: \"1 August, 2019\",\n        },\n        {\n          name: \"Vincу\",\n          text:\n            \"Yeah, it's legal, but it ain't a hundred percent legal. I mean, you can't walk into a restaurant,\\n   roll a joint, and start puffin' away. They want you to smoke in your home or certain designated places.\",\n        },\n        {\n          name: \"Jules Winnfield\",\n          text: \"Those are hash bars?\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Breaks down like this, okay: it's legal to buy it,\\n   it's legal to own it, and if you're the proprietor of a hash bar, it's legal to sell it. It's illegal to carry it,\\n   but that doesn't really matter 'cause, get a load of this, all right; if you get stopped by the cops in Amsterdam,\\n   it's illegal for them to search you. I mean, that's a right the cops in Amsterdam don't have.\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Yeah, it's legal, but it ain't a hundred percent legal. I mean, you can't walk into a restaurant,\\n   roll a joint, and start puffin' away. They want you to smoke in your home or certain designated places.\",\n        },\n        {\n          name: \"Jules Winnfield\",\n          text: \"Those are hash bars?\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Breaks down like this, okay: it's legal to buy it,\\n   it's legal to own it, and if you're the proprietor of a hash bar, it's legal to sell it. It's illegal to carry it,\\n   but that doesn't really matter 'cause, get a load of this, all right; if you get stopped by the cops in Amsterdam,\\n   it's illegal for them to search you. I mean, that's a right the cops in Amsterdam don't have.\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Yeah, it's legal, but it ain't a hundred percent legal. I mean, you can't walk into a restaurant,\\n   roll a joint, and start puffin' away. They want you to smoke in your home or certain designated places.\",\n        },\n        {\n          name: \"Jules Winnfield\",\n          text: \"Those are hash bars?\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Breaks down like this, okay: it's legal to buy it,\\n   it's legal to own it, and if you're the proprietor of a hash bar, it's legal to sell it. It's illegal to carry it,\\n   but that doesn't really matter 'cause, get a load of this, all right; if you get stopped by the cops in Amsterdam,\\n   it's illegal for them to search you. I mean, that's a right the cops in Amsterdam don't have.\",\n        },\n      ],\n    },\n  },\n  audio: {\n    config: `<View>\n        <Header value=\"Select label:\"></Header>\n        <Labels name=\"label\" toName=\"audio\">\n          <Label value=\"Politics\" background=\"red\"></Label>\n          <Label value=\"Business\" background=\"blue\"></Label>\n          <Label value=\"Education\"></Label>\n        </Labels>\n        <Header value=\"Select audio region:\"></Header>\n        <AudioPlus name=\"audio\" value=\"$url\"></AudioPlus>\n      </View>`,\n\n    task: {\n      id: 402324,\n      completions: [\n        {\n          completed_by: 55,\n          created_ago: \"16 hours, 57 minutes\",\n          created_at: \"2019-07-19T17:48:15.465239Z\",\n          created_username: \"\",\n          honeypot: false,\n          id: 8440,\n          result: `[{\"id\":\"XPxpLMifV7\",\"from_name\":\"label\",\"to_name\":\"audio\",\"source\":\"$url\",\"type\":\"labels\",\"value\":{\"start\":0.7047114876227649,\"end\":2.369030107327593,\"labels\":[\"Politics\"]}},{\"id\":\"6ycG2nV3mp\",\"from_name\":\"label\",\"to_name\":\"audio\",\"source\":\"$url\",\"type\":\"labels\",\"value\":{\"start\":2.6014349596287176,\"end\":5.982550714074112,\"labels\":[\"Business\"]}}]`,\n          task: 761928,\n          updated_at: \"2019-07-19T17:48:15.465264Z\",\n          was_cancelled: false,\n        },\n      ],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n\n    data: {\n      url: \"https://s3-us-west-1.amazonaws.com/heartex-public/cello.mp3\",\n    },\n  },\n};\n\nexport default configEnv;\n","import configEnv from \"./config-development\";\n\n/**\n * Wrapper to generate development config\n * @param {string} config\n */\nfunction templateData(config) {\n  let task = configEnv[config].task;\n\n  window.T = task;\n\n  task = {\n    ...task,\n    data: JSON.stringify(configEnv[config].data),\n  };\n\n  return {\n    projectID: 1,\n    isLoading: false, // loading of editor\n    config: configEnv[config].config,\n    task: task,\n    taskID: 1,\n    expert: {\n      pk: 1,\n      lastName: \"Jones\",\n      firstName: \"Oliver\",\n    },\n    debug: window.location.search.indexOf(\"debug=true\") !== -1,\n    interfaces: window.editorInterfaces\n      ? window.editorInterfaces\n      : [\"basic\", \"completions\", \"submit\", \"panel\", \"side-column\"],\n  };\n}\n\n/**\n * Function to generate data\n * @member default - Default with text\n * @member gptc - General-purpose text classifier\n * @member ner - Named-entity recognition\n * @member gpic - General-purpose image classifier\n * @member gptg - General-purpose text tagging\n * @member cda - Chatbot Dialogs Analysis\n * @member bbox - Annotate And Categorize Objects In An Image Using A Bounding Box\n * @member audio - Audio Region Labeling\n * @member dialog - Dialog\n *\n */\nfunction getData() {\n  return templateData(\"dialog\");\n}\n\n/**\n * Get completions for task\n */\nfunction getState() {\n  const resultCompletions = getData().task.completions ? getData().task.completions : null;\n  return {\n    completions: resultCompletions,\n  };\n}\n\n/**\n * Function to return Root element\n */\nfunction rootElement() {\n  const el = document.createElement(\"div\");\n\n  el.style.marginTop = \"10px\";\n  el.style.marginBottom = \"10px\";\n  el.style.marginLeft = \"10px\";\n  el.style.marginRight = \"10px\";\n\n  document.body.appendChild(el);\n\n  return el;\n}\n\nexport default { getState, getData, rootElement };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./assets/styles/global.scss\";\n\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport AppStore from \"./stores/AppStore\";\nimport Requests from \"./core/Requests\";\n\nimport Prod from \"./env/prod\";\nimport Dev from \"./env/dev\";\n\n/**\n * Meaning we are starting from /tasks/$id/explore or /expert\n */\nconst Env = window.projectID ? Prod : Dev;\n\nconst app = AppStore.create(Env.getData(), {\n  fetch: Requests.fetcher,\n  patch: Requests.patch,\n  post: Requests.poster,\n  remove: Requests.remover,\n  alert: m => console.log(m), // Noop for demo: window.alert(m)\n});\n\napp.initializeStore(Env.getState());\n\nwindow.Htx = app;\n\nReactDOM.render(\n  <Provider store={app}>\n    <App />\n  </Provider>,\n  Env.rootElement(),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Entity_block__1ejHe\",\"button\":\"Entity_button__3FWxG\",\"labels\":\"Entity_labels__g-6K1\",\"tag\":\"Entity_tag__1_fMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Dialog_block__1sqOj\",\"block_selected\":\"Dialog_block_selected__2wy2k\",\"name\":\"Dialog_name__282jm\",\"tag\":\"Dialog_tag__3Hqj2\",\"date\":\"Dialog_date__23Eve\"};"],"sourceRoot":""}