{"version":3,"sources":["components/Dialog/Dialog.module.scss","components/Controls/Controls.module.scss","components/Panel/Panel.module.scss","components/Hint/Hint.module.scss","components/App/App.module.scss","components/Completions/Completions.module.scss","components/Entities/Entities.module.scss","components/SideColumn/SideColumn.module.scss","components/Waveform/Waveform.module.scss","components/TextHighlight/TextHighlight.module.scss","interfaces/object/TextRegion/TextRegion.module.scss","core/Registry.js","core/Requests.js","utils/unique.js","core/Helpers.js","core/Tree.js","utils/utilities.js","utils/colors.js","utils/date.js","utils/index.js","utils/debounce.js","utils/styles.js","components/Completions/Completions.js","components/Hint/Hint.js","components/Controls/Controls.js","components/Panel/Panel.js","components/Settings/Settings.js","components/Debug.js","components/Node.js","components/Relations.js","components/Entities/Entities.js","components/Entity/Entity.js","components/SideColumn/SideColumn.js","core/Types.js","interfaces/visual/View.js","core/Template.js","interfaces/mixins/ProcessAttrs.js","interfaces/visual/Table.js","interfaces/visual/Header.js","interfaces/visual/HyperText.js","interfaces/object/Audio.js","components/Waveform/Waveform.js","interfaces/mixins/Regions.js","interfaces/mixins/Normalization.js","interfaces/control/Label.js","interfaces/mixins/SelectedModel.js","interfaces/control/Labels.js","interfaces/control/Rating.js","interfaces/object/AudioRegion.js","interfaces/object/AudioPlus.js","interfaces/control/Rectangle.js","interfaces/control/RectangleLabels.js","interfaces/object/RectRegion.js","interfaces/object/PolygonPoint.js","interfaces/control/Polygon.js","interfaces/control/PolygonLabels.js","interfaces/object/PolygonRegion.js","interfaces/object/Image.js","components/TextHighlight/Range.js","components/TextNode/TextNode.js","components/TextHighlight/Node.js","components/TextHighlight/UrlNode.js","components/TextHighlight/EmojiNode.js","components/TextHighlight/TextHighlight.js","interfaces/object/TextRegion.js","interfaces/object/Text.js","components/Dialog/Dialog.js","interfaces/object/Dialog.js","interfaces/control/Choice.js","interfaces/control/Choices.js","interfaces/object/TextAreaRegion.js","interfaces/control/TextArea.js","interfaces/control/List.js","interfaces/control/Ranker.js","components/App/App.js","serviceWorker.js","stores/TaskStore.js","core/TimeTraveller.js","core/Hotkey.js","stores/RelationStore.js","stores/RegionStore.js","stores/CompletionStore.js","stores/AppStore.js","env/prod.js","env/config-development.js","env/dev.js","index.js","components/Entity/Entity.module.scss"],"names":["module","exports","block","block_selected","name","tag","skip","task","container","main","pushable","hide-dd-icon","drag-handle","noselect","common-container","functional-buttons","editor-side-column","editor","menu","content","buttons","item","card","progress","wave","state","Registry","_Registry","Object","classCallCheck","this","tags","models","views","views_models","model","view","push","values","modelName","Error","keys","join","wrapperRequest","url","method","headers","body","window","fetch","credentials","then","response","res","status","json","Requests","fetcher","Accept","poster","Content-Type","remover","patch","guidGenerator","nanoid","cloneNode","node","snapshot","getSnapshot","getType","create","objectSpread","id","restoreNewsnapshot","fromModel","renderItem","el","View","getViewByModel","react_default","a","createElement","key","Tree","cloneReactTree","items","attrs","clone","children","React","Children","forEach","child","props","moreProps","cloneElement","renderChildren","length","map","treeToModel","html","buildData","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","attr","value","err","return","attrsToProps","nodeName","htmlSelfClosingTags","split","newData","i","edsplit","editSelfClosingTags","replace","document","parse5","parseFragment","root","childNodes","addNode","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","chld","findInterface","tree","fn","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","findParentOfType","obj","classes","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","c","p","getParentOfType","filterChildrenOfType","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","cssConverter","style","firstIndexOfColon","result","attributes","indexOf","substring","x","toUpperCase","isString","String","isStringEmpty","isStringJSON","JSON","parse","e","getUrl","text","stringToTest","slice","match","exec","toTimeString","ms","Date","toUTCString","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexToRGBA","hex","opacity","r","g","b","parseInt","concat","colorToRGBA","alpha","toLowerCase","convertToRGBA","charAt","msToHMS","seconds","hours","Math","floor","prettyDate","time","test","date","diff","getTime","day_diff","isNaN","ceil","utils","Checkers","Colors","UDate","debounce","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","setTimeout","apply","styleToProp","styles","filter","trim","substr","reduce","styleObj","defineProperty","Completion","observer","_ref","store","List","Item","backgroundColor","selected","padding","onClick","ev","completionStore","selectCompletion","Content","Header","as","pk","Description","createdAgo","Utils","createdDate","createdBy","className","es_button","type","preventDefault","deleteCompletion","honeypot","removeHoneypot","ghost","setHoneypot","Completions","title","bodyStyle","divided","relaxed","savedCompletions","Component","Hint","localClass","data-copy","copy","inject","clear","display","justifyContent","alignItems","hasInterface","skipTask","settings","enableHotkeys","enableTooltips","Hint_Hint","icon","sendTask","submit","history","canUndo","undo","canRedo","redo","reset","setPrelabeling","resetPrelabeling","showingDescription","closeDescription","openDescription","toggleSettings","modal","visible","showingSettings","footer","onCancel","es_checkbox","defaultChecked","onChange","toggleHotkeys","toggleTooltips","DebugComponent","_this2","self","completion","Button","basic","setState","stringify","toJSON","serializeCompletion","deserializeCompletion","addInitialCompletion","project","resetState","addTask","addGeneratedCompletion","markLoading","traverseTree","updateValue","Form","TextArea","target","Node","click","getRoot","regionStore","unselectAll","selectRegion","color","textDecorationLine","textDecorationStyle","href","start","toFixed","end","_value","w","width","scaleX","y","height","scaleY","NodeMinimal","_ref2","react","Relation","rl","isValidReference","node1","node2","marginBottom","onMouseOver","toggleHighlight","onMouseOut","Node_NodeMinimal","deleteRelation","marginLeft","relations","relationStore","Relations_Relation","Entities","regions","paddingLeft","deleteAllRegions","region","toggleHightlight","RenderStates","_render","s","element","labels","getSelectedNames","bgColor","getSelectedColor","getSelectedString","states","highlightedNode","normalization","cursor","deleteNormalization","Entity_RenderStates","button","startRelationMode","setNormalizationMode","unselectRegion","deleteRegion","normalizationMode","marginTop","onSubmit","setNormalization","normInput","Input","setNormInput","placeholder","Entity","Relations","oneOf","arr","types","union","dispatcher","sn","find","val","getModelByTag","Types","unionArray","maybeNull","array","allModelsTypes","modelsArr","results","isType","nt","getParentOfTypeString","str","parent","getParent","Array","isArray","_loop","v","_ret","TagAttrs","optional","string","backgroundcolor","margin","Model","identifier","ViewModel","compose","HtxView","marginRight","addTag","variableNotation","variable","_index","is","runTemplate","options","re","reExp","code","add","line","js","index","Function","console","error","message","ProcessAttrsMixin","actions","dataObj","size","TableModel","HtxTable","Table","celled","collapsing","Body","k","Row","Cell","Subheader","number","underline","boolean","HeaderModel","HtxHeader","typography","Title","level","fromStateJSON","choices","names","get","from_name","HyperTextActions","HyperTextModel","HtxHyperTextView","dangerouslySetInnerHTML","__html","AudioModel","HtxAudioView","controls","src","HtxAudio","formatTimeCallback","pxPerSec","Number","minutes","secondsStr","round","toString","timeInterval","primaryLabelInterval","secondaryLabelInterval","Waveform","_this","possibleConstructorReturn","getPrototypeOf","call","playing","pos","colors","waveColor","progressColor","$el","ReactDOM","findDOMNode","$waveform","querySelector","RegionsPlugin","dragSelection","slop","wavesurfer","WaveSurfer","backend","plugins","TimelinePlugin","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","CursorPlugin","wrapper","showTime","load","on","reg","_region","onMouseLeave","addRegion","onUpdateEnd","play","slider","oninput","zoom","onCreate","handlePlay","onLoad","RegionsMixin","highlighted","setHighlightedNode","relationMode","stopRelationMode","onClickRegion","addRelation","deleteNodeRelation","setHighlight","NormalizationMixin","alias","hotkey","showalias","aliasstyle","background","selectedcolor","toggleSelected","sel","shouldBeUnselected","markSelected","onHotKey","LabelModel","HtxLabelView","bg","SelectedModelMixin","selectedLabels","isSelected","findLabel","joinstr","toname","choice","enumeration","headerprefix","selectionstyle","pid","toStateJSON","to_name","l","label","LabelsModel","HtxLabels","flexFlow","maxrating","rating","handleRate","increaseValue","RatingModel","HtxRating","Rating","defaultRating","maxRating","onRate","clearable","fontSize","AudioPlusModel","regionbg","selectedregionbg","buildTree","source","_ws_region","update","border","beforeDestroy","remove","list","AudioRegionModel","haszoom","rangeValue","toNames","activeStates","findRegion","_ws","setRangeValue","ws_region","find_r","clonedStates","ws","wsCreated","Waveform_Waveform","playPause","min","max","HtxAudioPlus","fillcolor","strokewidth","strokecolor","canrotate","hasStates","RectangleModel","rectanglelabels","Composition","RectangleLabelsModel","HtxRectangleLabels","rotation","wp","hp","sw","sh","coordstype","ImageModel","setSelected","coordsInside","rx","ry","rw","rh","setPosition","setScale","addState","setFill","fill","updateImageSize","from","stageWidth","stageHeight","RectRegionModel","HtxRectangle","wwidth","wheight","onChangedPosition","naturalWidth","naturalHeight","h","ReactKonva","assign","onTransformEnd","t","getAttr","onDragEnd","dragBoundFunc","stage","_stageRef","draggable","PolygonPoint","init_x","init_y","afterCreate","movePoint","_movePoint","handleMouseOverStartPoint","closed","points","setX","setY","scale","small","medium","large","setMouseOverStartPoint","handleMouseOutStartPoint","PolygonPointView","stroke","startPointAttr","hitStrokeWidth","dragOpts","mouseOverStartPoint","onDragStart","onDragMove","radius","strokeWidth","dragOnTop","pointsize","pointstyle","PolygonModel","polygonlabels","PolygonLabelsModel","HtxPolygonLabels","fromName","isCW","linePoints","flatten","flat","toFlatten","findPolyOutline","left","acc","loc","right","top","bottom","inside","vs","j","xi","yi","xj","yj","readOnlyError","addPoint","closePoly","_addPoint","insertPoint","insertIdx","splice","canClose","p1","p2","_self$parent","perc_w","perc_h","perc_points","PolygonRegionModel","HtxPolygon","redraw","setDragMode","setActivePolygon","cancelBubble","resize","maxwidth","integer","selectedShape","safeReference","activePolygon","shapes","controlButton","controlButtonType","poly","updateIE","_ev$target","_setStageRef","ref","_deleteSelectedShape","destroy","shape","_addShape","onImageClick","_addRect","_addPoly","rectstrokecolor","wx","evt","offsetX","wy","offsetY","__addRect","rect","parseFloat","dragMode","shapeModel","TransformerComponent","checkNode","transformer","getStage","selectedShapeName","detach","getLayer","batchDraw","selectedNode","findOne","attachTo","resizeEnabled","rotateEnabled","anchorSize","HtxImageView","handleDblClick","handleOnClick","handleStageMouseDown","_this$props","divStyle","maxWidth","onDblClick","onMouseDown","Image_TransformerComponent","HtxImage","Range","TextNode","data-position","position","overlap","keyNode","HtxTextNode","range","highlightStyle","charIndex","getRangeKey","getKey","getStyle","overlapItem","includes","reduceRight","TextNode_TextNode","UrlNode","wordWrap","EmojiNode","TextHighlight","dismissMouseUp","ranges","onMouseOverHighlightedWord","nl","char","charCodeAt","arrOverlap","toConsumableArray","TextHighlight_EmojiNode","TextHighlight_UrlNode","enabled","getSelection","selectionContents","getRangeAt","cloneRange","cloneContents","virtualDiv","appendChild","elementsWithSup","getElementsByTagName","innerText","selection","createRange","startContainer","parentNode","dataset","hint","endContainer","startContainerPosition","endContainerPosition","rangeObj","onTextHighlighted","event","mouseEvent","bind","letterGroup","textCharIndex","rangeRenderer","isEmoji","getUrlNode","getEmojiNode","getLetterNode","lastRange","newText","getRange","emojiRegex","getNode","rangeCharIndex","getRanges","onMouseUp","onMouseEnter","onDoubleClick","TextModel","highlightStates","TextRegionModel","RegionState","localState","selectedString","outline","data-hint","HtxTextRegion","labelColor","markStyle","borderRadius","regionStates","TextRegion_RegionState","hover","selelectwithoutlabel","hidden","adjustselection","selectionenabled","_addRegion","params","m","HtxTextView","components_TextHighlight_TextHighlight","adjustSelection","renderRegion","HtxText","DialogView","selectedStyle","Replica","DialogModel","HtxDialogView","dialog","ind","Dialog_DialogView","HtxDialog","isCheckbox","ChoicesModel","ChoiceModel","HtxChoice","cStyle","Checkbox","checked","Radio","showinline","HtxChoices","Group","inline","grouped","TextAreaModel","TextAreaRegionModel","HtxTextAreaRegion","Message","allowSubmit","maxsubmissions","submissionsNum","showSubmit","num","setValue","addText","beforeSend","deleteText","HtxTextArea","ListItemModel","idx","setBG","setIdx","axis","lockaxis","elementvalue","elementtag","sortedhighlightcolor","setUpdate","vals","moveItems","oldIndex","newIndex","arrayMove","ranked","sort","weights","item_weight","ListModel","DragHandle","sortableHandle","isMobileDevice","orientation","navigator","userAgent","SortableText","SortableElement","classNames","image","alt","audio","userSelect","SortableList","SortableContainer","_ref3","HtxListView","_ref4","onSortEnd","HtxList","RankerItemModel","sortable","RankerModel","Ranker_DragHandle","Ranker_SortableText","HtxRankerView","Ranker_SortableList","HtxRanker","App","_Component","inherits","createClass","es_result","spin","isLoading","renderLoader","noTask","renderNothingToLabel","labeledSuccess","renderSuccess","currentCompletion","renderNoCompletion","Settings","index_module","Panel","Segment","description","minWidth","Controls","components_Completions_Completions","SideColumn","Boolean","location","hostname","TaskStore","identifierNumber","app","Utilities","TimeTraveller","frozen","undoIdx","targetPath","createdIdx","isFrozen","frozenIdx","targetStore","snapshotDisposer","skipNextUndoState","freeze","addUndoState","ss","resolvePath","getEnv","onSnapshot","applySnapshot","set","_hotkeys_map","Hotkey","addKey","keymaster","unbindAll","_arr","_i","unbind","makeComb","combs","comb","hasOwnProperty","setScope","scope","reference","findRelations","nodesRelated","from_id","to_id","deserializeRelation","unhighlightAll","toISOString","RelationStore","RegionStore","HtxObjectModel","reinitHistory","_updateServerState","_relationObj","cb","visitNode","toModel","completions","was_generated","_deleteCompletion","flow","regenerator_default","mark","wrap","_context","prev","sent","t0","stop","destroyCompletion","addCompletion","completionModel","config","expert","firstName","lastName","addSavedCompletion","created_ago","created_username","UserStore","SettingsModel","enablePanelHotkeys","togglePanelHotkeys","Task","taskID","interfaces","CompletionStore","projectID","debug","alert","post","setDescription","loadTask","_loadTask","_context2","Response","abrupt","was_cancelled","comp","_context3","_context4","loading","initializeStore","generatedCompletions","prod","getData","taskData","editorAppConfig","expertData","debugEditor","editorInterfaces","preRender","explore","getState","rootElement","getElementById","innerHTML","configEnv","default","meta","accuracy","created_at","updated_at","is_labeled","exposed","gptc","ner","model_version","score","bbox","image_url","completed_by","cda","T","search","templateData","dev","Env","Prod","Dev","AppStore","log","Htx","render","components_App_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e75fab8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Dialog_block__3KAFA\",\"block_selected\":\"Dialog_block_selected__qaruV\",\"name\":\"Dialog_name__2Hj00\",\"tag\":\"Dialog_tag__JeHHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skip\":\"Controls_skip__2emog\",\"task\":\"Controls_task__25L33\",\"container\":\"Controls_container__29un3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Panel_container__2Ou-h\",\"block\":\"Panel_block__ACgrD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Hint_main__m2bh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"App_pushable__i7wCA\",\"hide-dd-icon\":\"App_hide-dd-icon__3SoGL\",\"drag-handle\":\"App_drag-handle__17xjB\",\"noselect\":\"App_noselect__bC8HN\",\"common-container\":\"App_common-container__2VUfD\",\"functional-buttons\":\"App_functional-buttons__3THOh\",\"editor-side-column\":\"App_editor-side-column__1CHBx\",\"editor\":\"App_editor__1KNEt\",\"menu\":\"App_menu__2PzdE\",\"content\":\"App_content__3l_Zm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Completions_buttons__258J-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Entities_item__QlKKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SideColumn_card__3MYMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Waveform_progress__1cHjH\",\"wave\":\"Waveform_wave__EL3r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"TextHighlight_block__wyU6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"state\":\"TextRegion_state__1K6Ca\"};","/**\n * Class for register View\n */\nclass _Registry {\n  constructor() {\n    this.tags = [];\n    this.models = {};\n    this.views = {};\n    this.views_models = {};\n  }\n\n  addTag(tag, model, view) {\n    this.tags.push(tag);\n    this.models[tag] = model;\n    this.views[tag] = view;\n    this.views_models[model.name] = view;\n  }\n\n  modelsArr() {\n    return Object.values(this.models);\n  }\n\n  getViewByModel(modelName) {\n    const view = this.views_models[modelName];\n\n    if (!view) throw new Error(\"No view for model: \" + modelName);\n\n    return view;\n  }\n\n  getViewByTag(tag) {\n    return this.views[tag];\n  }\n\n  getModelByTag(tag) {\n    const model = this.models[tag];\n\n    if (!model) {\n      const models = Object.keys(this.models);\n      throw new Error(\"No model registered for tag: \" + tag + \"\\nAvailable models:\\n\\t\" + models.join(\"\\n\\t\"));\n    }\n\n    return model;\n  }\n}\n\nconst Registry = new _Registry();\n\nexport default Registry;\n","const handleResponse = res => {\n  if (res.status !== 200 || res.status !== 201) {\n    return res;\n  } else {\n    return res.json();\n  }\n};\n\nconst wrapperRequest = (url, method, headers, body) => {\n  return window\n    .fetch(url, {\n      method: method,\n      headers: headers,\n      credentials: \"include\",\n      body: body,\n    })\n    .then(response => handleResponse(response));\n};\n\nconst fetcher = url => {\n  return wrapperRequest(url, \"GET\", { Accept: \"application/json\" });\n};\n\nconst poster = (url, body) => {\n  return wrapperRequest(url, \"POST\", { Accept: \"application/json\", \"Content-Type\": \"application/json\" }, body);\n};\n\nconst patch = (url, body) => {\n  return wrapperRequest(\n    url,\n    \"PATCH\",\n    {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  );\n};\n\nconst remover = (url, body) => {\n  return wrapperRequest(\n    url,\n    \"DELETE\",\n    {\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  );\n};\n\nexport default { fetcher, poster, remover, patch };\n","import nanoid from \"nanoid\";\n\n/**\n * Unique hash generator\n */\nexport function guidGenerator() {\n  const uniqueID = nanoid(10);\n  return uniqueID;\n}\n","import { getType, getSnapshot } from \"mobx-state-tree\";\nimport { guidGenerator } from \"../utils/unique\";\n\n/**\n * TODO: refactor\n */\nexport { guidGenerator };\n\n/**\n * Helper function to detect HTX Component\n * @param {any} component\n * @param {string} name\n * @returns {boolean}\n */\nexport function isHtx(component, name) {\n  return typeof component.type === \"function\" && component.type.name === \"Htx\" + name;\n}\n\n/**\n * Clone node with new ID\n * @param {*} node\n */\nexport function cloneNode(node) {\n  const snapshot = getSnapshot(node);\n  const snapshotRandomId = getType(node).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n  return snapshotRandomId;\n}\n\n/**\n *\n * @param {*} fromModel\n */\nexport function restoreNewsnapshot(fromModel) {\n  const snapshot = getSnapshot(fromModel);\n\n  /**\n   * Need to modify ID\n   */\n  const modifySnapshot = getType(fromModel).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n\n  /**\n   * Update state\n   */\n  return modifySnapshot;\n}\n","import React from \"react\";\nimport { getType, getParentOfType } from \"mobx-state-tree\";\nimport parse5 from \"parse5\";\n\nimport Registry from \"./Registry\";\nimport { guidGenerator } from \"./Helpers\";\n\n/**\n * Clone React Tree\n * @param {*} items\n * @param {*} attrs\n */\nfunction cloneReactTree(items, attrs) {\n  let clone = null;\n  clone = function(children) {\n    const res = [];\n\n    React.Children.forEach(children, function(child) {\n      let el;\n\n      if (child.props) {\n        let moreProps = {};\n\n        if (typeof attrs === \"function\") {\n          moreProps = attrs(child);\n        } else if (typeof attrs === \"object\") {\n          moreProps = attrs;\n        }\n\n        el = React.cloneElement(child, moreProps, clone(child.props.children));\n      } else {\n        el = child;\n      }\n\n      res.push(el);\n    });\n\n    return res;\n  };\n\n  return clone(items);\n}\n\n/**\n * Function to convert CSS string to object\n * @param {string} style\n * @returns {object}\n */\nfunction cssConverter(style) {\n  let result = {},\n    attributes = style.split(\";\"),\n    firstIndexOfColon,\n    i,\n    key,\n    value;\n\n  for (i = 0; i < attributes.length; i++) {\n    firstIndexOfColon = attributes[i].indexOf(\":\");\n    key = attributes[i].substring(0, firstIndexOfColon);\n    value = attributes[i].substring(firstIndexOfColon + 1);\n\n    key = key.replace(/ /g, \"\");\n    if (key.length < 1) {\n      continue;\n    }\n\n    if (value[0] === \" \") {\n      value = value.substring(1);\n    }\n\n    if (value[value.length - 1] === \" \") {\n      value = value.substring(0, value.length - 1);\n    }\n\n    var ukey = key.replace(/(-.)/g, x => x[1].toUpperCase());\n\n    result[ukey] = value;\n  }\n\n  return result;\n}\n\n/**\n *\n * @param {*} attrs\n */\nfunction attrsToProps(attrs) {\n  const props = {};\n\n  if (!attrs) return props;\n\n  for (let attr of attrs) {\n    props[attr.name] = attr.value;\n  }\n\n  // if (props[\"style\"]) {\n  //     props[\"style\"] = cssConverter(props[\"style\"]);\n  // }\n\n  return props;\n}\n\n/**\n *\n * @param {*} html\n */\nfunction treeToModel(html) {\n  /**\n   * Remove all line breaks from a string\n   * @param {string}\n   * @returns {string}\n   */\n  function removeAllBreaks(data) {\n    return data.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  }\n\n  /**\n   * Edit all self closing tags from XML View\n   * TODO: Fix bug: if the value of <Choice /> or another tag contains \"/>\" function return error\n   * @param {string} data\n   * @returns {string}\n   */\n  function editSelfClosingTags(data) {\n    let split = data.split(\"/>\");\n    let newData = \"\";\n\n    for (let i = 0; i < split.length - 1; i++) {\n      let edsplit = split[i].split(\"<\");\n      newData += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\n    }\n\n    return newData + split[split.length - 1];\n  }\n\n  /**\n   * Generate new node\n   * @param {object} node\n   */\n  function addNode(node) {\n    if (!node) return null;\n\n    const res = [];\n\n    for (let chld of node.childNodes) {\n      if (chld.nodeName !== \"#text\") {\n        const data = buildData(chld);\n        const children = addNode(chld);\n\n        if (children) {\n          if (typeof children === \"string\") data[\"value\"] = children;\n          else data.children = children;\n        }\n\n        res.push(data);\n      }\n    }\n\n    return res.length === 0 ? null : res;\n  }\n\n  /**\n   * Generate obj with main data\n   */\n  function buildData(node) {\n    const data = attrsToProps(node.attrs);\n\n    data[\"id\"] = guidGenerator();\n    data[\"type\"] = node.nodeName;\n\n    if (data[\"type\"] === \"img\") data[\"type\"] = \"image\";\n\n    return data;\n  }\n\n  const htmlWithotBreaks = removeAllBreaks(html);\n  const htmlSelfClosingTags = editSelfClosingTags(htmlWithotBreaks);\n  const document = parse5.parseFragment(htmlSelfClosingTags);\n  const root = buildData(document.childNodes[0]);\n  root.children = addNode(document.childNodes[0]);\n  return root;\n}\n\n/**\n * Render items of tree\n * @param {*} el\n */\nfunction renderItem(el) {\n  const View = Registry.getViewByModel(getType(el).name);\n\n  if (!View) {\n    throw new Error(\"No view for model:\" + getType(el).name);\n  }\n\n  return <View key={guidGenerator()} item={el} />;\n}\n\n/**\n *\n * @param {*} item\n */\nfunction renderChildren(item) {\n  if (item && item.children && item.children.length) {\n    return item.children.map(el => {\n      return renderItem(el);\n    });\n  } else {\n    return null;\n  }\n}\n\n/**\n *\n * @param {*} name\n * @param {*} tree\n */\nfunction findInterface(name, tree) {\n  let fn;\n  fn = function(node) {\n    if (getType(node).name === name) return node;\n\n    if (node.children) {\n      for (let chld of node.children) {\n        const res = fn(chld);\n        if (res) return res;\n      }\n    }\n  };\n\n  return fn(tree);\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction findParentOfType(obj, classes) {\n  for (let c of classes) {\n    try {\n      const p = getParentOfType(obj, c);\n      if (p) return p;\n    } catch (err) {}\n  }\n\n  return null;\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction filterChildrenOfType(obj, classes) {\n  const res = [];\n\n  let fn;\n  fn = function(node) {\n    for (let c of classes) {\n      if (getType(node).name === c) res.push(node);\n    }\n\n    if (node.children) {\n      for (let chld of node.children) {\n        fn(chld);\n      }\n    }\n  };\n\n  fn(obj);\n\n  return res;\n}\n\nexport default {\n  cloneReactTree,\n  renderItem,\n  renderChildren,\n  treeToModel,\n  findInterface,\n  findParentOfType,\n  filterChildrenOfType,\n  cssConverter,\n};\n","/**\n * Internal helper to check if parameter is a string\n * @param {*} value\n * @returns {boolean}\n */\nexport const isString = value => {\n  return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Internal helper to check if string is empty\n * @param {*} value\n * @returns {boolean}\n */\nexport const isStringEmpty = value => {\n  if (!isString(value)) {\n    return false;\n  }\n\n  return value.length === 0;\n};\n\n/**\n * Internal helper to check if string is JSON\n * @param {string} value\n * @returns {boolean}\n */\nexport const isStringJSON = value => {\n  if (isString(value)) {\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Check if text is url\n * @param {*} i\n * @param {*} text\n */\nexport function getUrl(i, text) {\n  const stringToTest = text.slice(i);\n  const myRegexp = /^(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/g;\n  const match = myRegexp.exec(stringToTest);\n\n  return match && match.length ? match[1] : \"\";\n}\n\n/**\n * Convert MS to Time String\n * Example: 2000 -> 00:00:02\n * @param {number} ms\n * @returns {string}\n */\nexport function toTimeString(ms) {\n  if (typeof ms === \"number\") {\n    return new Date(ms).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n  }\n}\n","let colorNames = {\n  aliceblue: \"#f0f8ff\",\n  antiquewhite: \"#faebd7\",\n  aqua: \"#00ffff\",\n  aquamarine: \"#7fffd4\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  bisque: \"#ffe4c4\",\n  black: \"#000000\",\n  blanchedalmond: \"#ffebcd\",\n  blue: \"#0000ff\",\n  blueviolet: \"#8a2be2\",\n  brown: \"#a52a2a\",\n  burlywood: \"#deb887\",\n  cadetblue: \"#5f9ea0\",\n  chartreuse: \"#7fff00\",\n  chocolate: \"#d2691e\",\n  coral: \"#ff7f50\",\n  cornflowerblue: \"#6495ed\",\n  cornsilk: \"#fff8dc\",\n  crimson: \"#dc143c\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgoldenrod: \"#b8860b\",\n  darkgray: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkseagreen: \"#8fbc8f\",\n  darkslateblue: \"#483d8b\",\n  darkslategray: \"#2f4f4f\",\n  darkturquoise: \"#00ced1\",\n  darkviolet: \"#9400d3\",\n  deeppink: \"#ff1493\",\n  deepskyblue: \"#00bfff\",\n  dimgray: \"#696969\",\n  dodgerblue: \"#1e90ff\",\n  firebrick: \"#b22222\",\n  floralwhite: \"#fffaf0\",\n  forestgreen: \"#228b22\",\n  fuchsia: \"#ff00ff\",\n  gainsboro: \"#dcdcdc\",\n  ghostwhite: \"#f8f8ff\",\n  gold: \"#ffd700\",\n  goldenrod: \"#daa520\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#adff2f\",\n  honeydew: \"#f0fff0\",\n  hotpink: \"#ff69b4\",\n  indianred: \"#cd5c5c\",\n  indigo: \"#4b0082\",\n  ivory: \"#fffff0\",\n  khaki: \"#f0e68c\",\n  lavender: \"#e6e6fa\",\n  lavenderblush: \"#fff0f5\",\n  lawngreen: \"#7cfc00\",\n  lemonchiffon: \"#fffacd\",\n  lightblue: \"#add8e6\",\n  lightcoral: \"#f08080\",\n  lightcyan: \"#e0ffff\",\n  lightgoldenrodyellow: \"#fafad2\",\n  lightgrey: \"#d3d3d3\",\n  lightgreen: \"#90ee90\",\n  lightpink: \"#ffb6c1\",\n  lightsalmon: \"#ffa07a\",\n  lightseagreen: \"#20b2aa\",\n  lightskyblue: \"#87cefa\",\n  lightslategray: \"#778899\",\n  lightsteelblue: \"#b0c4de\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  limegreen: \"#32cd32\",\n  linen: \"#faf0e6\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66cdaa\",\n  mediumblue: \"#0000cd\",\n  mediumorchid: \"#ba55d3\",\n  mediumpurple: \"#9370d8\",\n  mediumseagreen: \"#3cb371\",\n  mediumslateblue: \"#7b68ee\",\n  mediumspringgreen: \"#00fa9a\",\n  mediumturquoise: \"#48d1cc\",\n  mediumvioletred: \"#c71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#f5fffa\",\n  mistyrose: \"#ffe4e1\",\n  moccasin: \"#ffe4b5\",\n  navajowhite: \"#ffdead\",\n  navy: \"#000080\",\n  oldlace: \"#fdf5e6\",\n  olive: \"#808000\",\n  olivedrab: \"#6b8e23\",\n  orange: \"#ffa500\",\n  orangered: \"#ff4500\",\n  orchid: \"#da70d6\",\n  palegoldenrod: \"#eee8aa\",\n  palegreen: \"#98fb98\",\n  paleturquoise: \"#afeeee\",\n  palevioletred: \"#d87093\",\n  papayawhip: \"#ffefd5\",\n  peachpuff: \"#ffdab9\",\n  peru: \"#cd853f\",\n  pink: \"#ffc0cb\",\n  plum: \"#dda0dd\",\n  powderblue: \"#b0e0e6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#ff0000\",\n  rosybrown: \"#bc8f8f\",\n  royalblue: \"#4169e1\",\n  saddlebrown: \"#8b4513\",\n  salmon: \"#fa8072\",\n  sandybrown: \"#f4a460\",\n  seagreen: \"#2e8b57\",\n  seashell: \"#fff5ee\",\n  sienna: \"#a0522d\",\n  silver: \"#c0c0c0\",\n  skyblue: \"#87ceeb\",\n  slateblue: \"#6a5acd\",\n  slategray: \"#708090\",\n  snow: \"#fffafa\",\n  springgreen: \"#00ff7f\",\n  steelblue: \"#4682b4\",\n  tan: \"#d2b48c\",\n  teal: \"#008080\",\n  thistle: \"#d8bfd8\",\n  tomato: \"#ff6347\",\n  turquoise: \"#40e0d0\",\n  violet: \"#ee82ee\",\n  wheat: \"#f5deb3\",\n  white: \"#ffffff\",\n  whitesmoke: \"#f5f5f5\",\n  yellow: \"#ffff00\",\n  yellowgreen: \"#9acd32\",\n};\n\n/**\n * Convert HEX to RGBA\n * @param {string} hex 3 digits + # or 6 digits + #\n * @param {number?} opacity From 0 to 1\n */\nexport function hexToRGBA(hex, opacity) {\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  let a = 0.3;\n\n  if (opacity && typeof parseInt(opacity) === \"number\") {\n    a = opacity;\n  }\n\n  /**\n   * If HEX = 3\n   */\n  if (hex && hex.length === 4) {\n    r = \"0x\" + hex[1] + hex[1];\n    g = \"0x\" + hex[2] + hex[2];\n    b = \"0x\" + hex[3] + hex[3];\n\n    /**\n     * If HEX = 6\n     */\n  } else if (hex && hex.length === 7) {\n    r = \"0x\" + hex[1] + hex[2];\n    g = \"0x\" + hex[3] + hex[4];\n    b = \"0x\" + hex[5] + hex[6];\n  }\n\n  const result = `rgba(${+r}, ${+g}, ${+b}, ${a})`;\n\n  return result;\n}\n\n/**\n * Color to RGBA\n * @param {*} value\n */\nexport function colorToRGBA(value, alpha) {\n  if (typeof colorNames[value.toLowerCase()] !== undefined) {\n    const hexColor = colorNames[value.toLowerCase()];\n    return hexToRGBA(hexColor, alpha);\n  }\n\n  return value;\n}\n\nexport function convertToRGBA(value, alpha) {\n  if (value.charAt(0) === \"#\") {\n    return hexToRGBA(value, alpha);\n  } else {\n    return colorToRGBA(value, alpha);\n  }\n}\n","function checkISO(value) {\n  let regExpISO = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/;\n\n  return regExpISO.test(value);\n}\n\n/**\n * Helper function to convert ms -> HHMMSS\n * @param {number} ms\n * @returns {string}\n */\nexport function msToHMS(ms) {\n  // 1- Convert to seconds:\n  var seconds = ms / 1000;\n  // 2- Extract hours:\n  var hours = parseInt(seconds / 3600); // 3,600 seconds in 1 hour\n  seconds = seconds % 3600; // seconds remaining after extracting hours\n  // 3- Extract minutes:\n  var minutes = parseInt(seconds / 60); // 60 seconds in 1 minute\n  // 4- Keep only seconds not extracted to minutes:\n  seconds = Math.floor(seconds); // % 60;\n\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n\n/**\n * Helper function to pretty date\n */\nexport function prettyDate(time) {\n  if (typeof time !== \"string\" && !checkISO(time)) return;\n\n  let date = new Date((time || \"\").replace(/-/g, \"/\").replace(/[TZ]/g, \" \")),\n    diff = (new Date().getTime() - date.getTime()) / 1000,\n    day_diff = Math.floor(diff / 86400);\n\n  if (isNaN(day_diff) || day_diff < 0) return;\n\n  return (\n    (day_diff === 0 &&\n      ((diff < 60 && \"just now\") ||\n        (diff < 120 && \"1 minute ago\") ||\n        (diff < 3600 && Math.floor(diff / 60) + \" minutes ago\") ||\n        (diff < 7200 && \"1 hour ago\") ||\n        (diff < 86400 && Math.floor(diff / 3600) + \" hours ago\"))) ||\n    (day_diff === 1 && \"Yesterday\") ||\n    (day_diff < 7 && day_diff + \" days ago\") ||\n    (day_diff < 31 && Math.ceil(day_diff / 7) + \" weeks ago\") ||\n    day_diff + \" days ago\"\n  );\n}\n","import * as Checkers from \"./utilities\";\nimport * as Colors from \"./colors\";\nimport * as UDate from \"./date\";\nimport { guidGenerator } from \"./unique\";\nimport { debounce } from \"./debounce\";\nimport { styleToProp } from \"./styles\";\n\nexport default { Checkers, Colors, UDate, guidGenerator, debounce, styleToProp };\n","/**\n * Returns a function, that, as long as it continues to be invoked,\n * will not be triggered. The function will be called after it\n * stops being called for N milliseconds. If `immediate` is passed,\n * trigger the function on the leading edge, instead of the trailing.\n *\n * @param {function} func\n * @param {number} wait\n * @param {boolean} immediate\n */\nexport function debounce(func, wait, immediate) {\n  let timeout;\n\n  return function() {\n    const context = this,\n      args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n","/**\n * Parses a string of inline styles into a JavaScript object with casing for React\n *\n * TODO this is broken for such case: styleToProp('background-image: url(\\'https://example.com/image.png\\')')\n *\n * @see TemplateEngine via MIT Licensed https://github.com/NervJS/taro/blob/master/packages/taro-components-rn/src/utils/index.ts\n *\n * @param {string} styles\n * @returns {Object}\n */\nexport function styleToProp(styles) {\n  if (!styles) return null;\n  return styles\n    .split(\";\")\n    .filter(style => style.split(\":\")[0] && style.split(\":\")[1])\n    .map(style => [\n      style\n        .split(\":\")[0]\n        .trim()\n        .replace(/-./g, c => c.substr(1).toUpperCase()),\n      style.split(\":\")[1].trim(),\n    ])\n    .reduce(\n      (styleObj, style) => ({\n        ...styleObj,\n        [style[0]]: style[1],\n      }),\n      {},\n    );\n}\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { List } from \"semantic-ui-react\";\nimport { Card, Button } from \"antd\";\n\nimport Utils from \"../../utils\";\nimport styles from \"./Completions.module.scss\";\n\nconst Completion = observer(({ item, store }) => {\n  let removeHoney = () => (\n    <Button\n      type=\"primary\"\n      onClick={ev => {\n        ev.preventDefault();\n        item.removeHoneypot();\n      }}\n    >\n      Honeypot\n    </Button>\n  );\n\n  let setHoney = () => (\n    <Button\n      type=\"primary\"\n      ghost={true}\n      onClick={ev => {\n        ev.preventDefault();\n        item.setHoneypot();\n      }}\n    >\n      Honeypot\n    </Button>\n  );\n\n  return (\n    <List.Item\n      style={{ backgroundColor: item.selected ? \"#f8f8f9\" : \"white\", padding: \"1em\" }}\n      onClick={ev => {\n        !item.selected && store.completionStore.selectCompletion(item.id);\n      }}\n    >\n      <List.Content>\n        <List.Header as=\"a\">ID {item.pk || item.id}</List.Header>\n        <p></p>\n        <List.Description as=\"a\">\n          Created\n          <i>{item.createdAgo ? ` ${item.createdAgo} ago` : ` ${Utils.UDate.prettyDate(item.createdDate)}`}</i>\n          {item.createdBy ? ` by ${item.createdBy}` : null}\n        </List.Description>\n\n        {item.selected && (\n          <div className={styles.buttons}>\n            <Button\n              type=\"danger\"\n              onClick={ev => {\n                ev.preventDefault();\n                item.store.deleteCompletion(item);\n              }}\n            >\n              Delete\n            </Button>\n\n            {item.honeypot ? removeHoney() : setHoney()}\n          </div>\n        )}\n      </List.Content>\n    </List.Item>\n  );\n});\n\nclass Completions extends Component {\n  render() {\n    const { store } = this.props;\n\n    return (\n      <Card title=\"Completions\" bodyStyle={{ padding: 0 }}>\n        <List divided relaxed>\n          {store.completionStore.savedCompletions.map(c => (\n            <Completion key={c.id} item={c} store={store} />\n          ))}\n        </List>\n      </Card>\n    );\n  }\n}\n\nexport default observer(Completions);\n","import React, { Component } from \"react\";\n\nimport styles from \"./Hint.module.scss\";\n\n/**\n * Hint Component\n * @param {object} style\n * @param {ant} children\n */\nexport default class Hint extends Component {\n  render() {\n    let style;\n    let localClass = `${styles.main}`;\n\n    if (this.props.style) style = this.props.style;\n\n    if (this.props.className) {\n      localClass = `${styles.main} ${this.props.className}`;\n    }\n\n    return (\n      <sup data-copy={this.props.copy} className={localClass} style={style}>\n        {this.props.children}\n      </sup>\n    );\n  }\n}\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button } from \"antd\";\n\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Controls.module.scss\";\n\nexport default inject(\"store\")(\n  observer(({ store }) => {\n    return (\n      <div style={{ clear: \"both\" }}>\n        <div className=\"ui hidden divider\" />\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n          <div className={styles.container}>\n            {store.hasInterface(\"submit:skip\") && (\n              <Button type=\"ghost\" onClick={store.skipTask} className={styles.skip}>\n                Skip\n                {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint> [ Ctrl+Space ]</Hint>}\n              </Button>\n            )}\n            <Button type=\"primary\" icon=\"check\" onClick={store.sendTask} className={styles.submit}>\n              Submit\n              {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint> [ Ctrl+Enter ]</Hint>}\n            </Button>\n          </div>\n          <div>{store.task && <h4 className={styles.task}>Task ID: {store.task.id}</h4>}</div>\n        </div>\n      </div>\n    );\n  }),\n);\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Icon } from \"antd\";\n\nimport styles from \"./Panel.module.scss\";\nimport Hint from \"../Hint/Hint\";\n\n/**\n * Panel component with buttons:\n * Undo\n * Redo\n * Reset\n * Show Instructions\n * Settings\n */\nexport default observer(({ store }) => {\n  const { history } = store.completionStore.selected;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.block}>\n        <Button\n          type=\"ghost\"\n          icon=\"undo\"\n          onClick={ev => {\n            history && history.canUndo && history.undo();\n            ev.preventDefault();\n          }}\n        >\n          Undo\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Ctrl+z ]</Hint>}\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon=\"redo\"\n          onClick={ev => {\n            history && history.canRedo && history.redo();\n            ev.preventDefault();\n          }}\n        >\n          Redo\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon=\"rest\"\n          onClick={ev => {\n            history && history.reset();\n          }}\n        >\n          Reset\n        </Button>\n        {store.setPrelabeling && (\n          <Button\n            style={{ display: \"none\" }}\n            onClick={ev => {\n              store.resetPrelabeling();\n            }}\n          >\n            {\" \"}\n            Reset Prelabeling\n          </Button>\n        )}\n      </div>\n\n      <div className={styles.block}>\n        {store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.closeDescription();\n            }}\n          >\n            Hide Instructions\n          </Button>\n        )}\n        {!store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.openDescription();\n            }}\n          >\n            Show Instructions\n          </Button>\n        )}\n\n        <Button\n          type=\"dashed\"\n          icon=\"setting\"\n          onClick={ev => {\n            store.toggleSettings();\n            ev.preventDefault();\n            return false;\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Modal, Checkbox } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nexport default observer(({ store }) => {\n  return (\n    <Modal visible={store.showingSettings} title=\"Hotkeys\" footer=\"\" onCancel={store.toggleSettings}>\n      <Checkbox\n        value=\"Enable labeling hotkeys\"\n        defaultChecked={store.settings.enableHotkeys}\n        onChange={() => {\n          store.settings.toggleHotkeys();\n        }}\n      >\n        Enable labeling hotkeys\n      </Checkbox>\n      <br />\n      <Checkbox\n        value=\"Show tooltips\"\n        defaultChecked={store.settings.enableTooltips}\n        onChange={() => {\n          store.settings.toggleTooltips();\n        }}\n      >\n        Show tooltips\n      </Checkbox>\n    </Modal>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Form, Button, Header } from \"semantic-ui-react\";\n\nimport { observer } from \"mobx-react\";\n\nclass DebugComponent extends Component {\n  state = { res: null };\n\n  render() {\n    const self = this;\n    const { store } = this.props;\n    const completion = store.completionStore.selected;\n\n    return (\n      <div>\n        <br />\n        <Header>Debug</Header>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.toJSON()) });\n          }}\n        >\n          Serialize whole tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.serializeCompletion()) });\n          }}\n        >\n          Seriealize results tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            if (self.state.res) completion.deserializeCompletion(JSON.parse(self.state.res));\n          }}\n        >\n          Load Serialized Results\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            const c = store.completionStore.addInitialCompletion();\n            store.completionStore.selectCompletion(c.id);\n\n            if (self.state.res) c.deserializeCompletion(JSON.parse(self.state.res));\n            // this.setState.res;\n          }}\n        >\n          Load As New Completion\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: store.task.data });\n          }}\n        >\n          Task data\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            // this.setState.res;\n            const data = JSON.parse(self.state.res);\n            const task = {\n              id: data[\"id\"],\n              project: 2,\n              data: JSON.stringify(data),\n            };\n\n            store.resetState();\n            store.addTask(task);\n            store.addGeneratedCompletion(task);\n            store.markLoading(false);\n\n            if (store.completionStore.selected)\n              store.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n          }}\n        >\n          Simulate Loading Task\n        </Button>\n\n        <br />\n        <br />\n        <Form>\n          <Form.TextArea\n            value={this.state.res}\n            className=\"is-search\"\n            // label={item.label}\n            onChange={ev => {\n              this.setState({ res: ev.target.value });\n            }}\n          />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default observer(DebugComponent);\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { getType, getRoot } from \"mobx-state-tree\";\nimport { Icon } from \"antd\";\n\nconst Node = observer(({ node }) => {\n  const click = ev => {\n    ev.preventDefault();\n    getRoot(node).completionStore.selected.regionStore.unselectAll();\n    node.selectRegion();\n\n    return false;\n  };\n\n  const style = {\n    color: \"black\",\n    textDecorationLine: \"underline\",\n    textDecorationStyle: \"dotted\",\n  };\n\n  if (getType(node).name === \"TextRegionModel\") {\n    return (\n      <div>\n        <Icon type=\"font-colors\" />\n        Text &nbsp;\n        <span style={{ color: \"#5a5a5a\" }}>{node.text}</span>\n      </div>\n    );\n  }\n\n  if (getType(node).name === \"AudioRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"microphone icon\" />\n          Audio &nbsp;{node.start.toFixed(2)} - {node.end.toFixed(2)}\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"TextAreaRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"i cursor icon\" />\n          Input &nbsp;<span style={{ color: \"#5a5a5a\" }}>{node._value}</span>\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"RectRegionModel\") {\n    const w = node.width * node.scaleX;\n    const y = node.height * node.scaleY;\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"expand icon\" />\n          Rectangle &nbsp;{w.toFixed(2)} x {y.toFixed(2)}\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"PolygonRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"i object ungroup outline icon\" />\n          Polygon\n        </a>\n      </p>\n    );\n  }\n});\n\nconst NodeMinimal = ({ node }) => {\n  if (getType(node).name == \"TextRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"font icon\" />\n        Text\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"RectRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"expand icon\" />\n        Rectangle\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"AudioRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"microphone icon\" />\n        Audio\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"TextAreaRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"i cursor icon\" />\n        Input\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"PolygonRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"i object ungroup outline icon\" />\n        Polygon\n      </Fragment>\n    );\n  }\n};\n\nexport { Node, NodeMinimal };\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { isValidReference } from \"mobx-state-tree\";\n\nimport { Node, NodeMinimal } from \"./Node\";\n\nconst Relation = ({ store, rl }) => {\n  if (!isValidReference(() => rl.node1) || !isValidReference(() => rl.node2)) {\n    return null;\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"1em\" }}>\n      <div\n        className=\"ui segment\"\n        style={{ marginBottom: 0, width: \"100%\" }}\n        onMouseOver={() => {\n          rl.toggleHighlight();\n        }}\n        onMouseOut={() => {\n          rl.toggleHighlight();\n        }}\n      >\n        <div className=\"ui two column grid\">\n          <div className=\"column\">\n            <p>\n              <NodeMinimal node={rl.node1} />\n            </p>\n          </div>\n          <div className=\"column\">\n            <p>\n              <NodeMinimal node={rl.node2} />\n            </p>\n          </div>\n        </div>\n        <div className=\"ui vertical divider\">\n          <i className=\"arrow right icon\" />\n        </div>\n      </div>\n      <a\n        href=\"#\"\n        className=\"floating right\"\n        onClick={() => {\n          store.deleteRelation(rl);\n          return false;\n        }}\n        style={{ marginLeft: \"5px\" }}\n      >\n        <i className=\"ui icon delete\" />\n      </a>\n    </div>\n  );\n};\n\nexport default observer(({ item, store }) => {\n  const completion = store.completionStore.selected;\n  const { relations } = completion.relationStore;\n\n  return (\n    <div>\n      <h4>Relations ({relations.length})</h4>\n      {!relations.length && <p>No Relations added yet</p>}\n      {completion.relationStore.relations.map(rl => (\n        <Relation store={completion.relationStore} rl={rl} />\n      ))}\n    </div>\n  );\n});\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Typography } from \"antd\";\n\nimport { Node, NodeMinimal } from \"../Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entities.module.scss\";\n\nexport default observer(({ store, regionStore }) => {\n  const { regions } = regionStore;\n\n  let buttonRemove = () => {\n    return (\n      <Button\n        type=\"link\"\n        style={{ paddingLeft: 0 }}\n        onClick={ev => {\n          store.completionStore.selected.deleteAllRegions();\n          ev.preventDefault();\n        }}\n      >\n        Remove all\n        {regions.length > 0 && store.settings.enableHotkeys && store.settings.enableTooltips && (\n          <Hint>[ Ctrl+bksp ]</Hint>\n        )}\n      </Button>\n    );\n  };\n\n  return (\n    <div>\n      <h4>Entities ({regions.length})</h4>\n      {regions.length > 0 && buttonRemove()}\n      {!regions.length && <p>No Entitied added yet</p>}\n      <ul>\n        {regions.map(region => (\n          <li\n            key={region.id}\n            className={styles.item}\n            onMouseOver={() => {\n              region.toggleHightlight();\n            }}\n            onMouseOut={() => {\n              region.toggleHightlight();\n            }}\n          >\n            <Node node={region} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { getType } from \"mobx-state-tree\";\nimport { Input, Form } from \"semantic-ui-react\";\nimport { Icon, Button, Tag } from \"antd\";\n\nimport { Node, NodeMinimal } from \"../Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entity.module.scss\";\n\nconst templateElement = element => {\n  return (\n    <div key={element.id} className={styles.labels}>\n      Labels:\n      {element.getSelectedNames().map(title => {\n        let bgColor = element.getSelectedColor() ? element.getSelectedColor() : \"#000000\";\n\n        return (\n          <Tag key={element.id} color={bgColor} className={styles.tag}>\n            {title}\n          </Tag>\n        );\n      })}\n    </div>\n  );\n};\n\nconst RenderStates = ({ node }) => {\n  const _render = s => {\n    if (\n      getType(s).name === \"LabelsModel\" ||\n      getType(s).name === \"RectangleLabelsModel\" ||\n      getType(s).name === \"PolygonLabelsModel\"\n    ) {\n      return templateElement(s);\n    } else if (getType(s).name === \"RatingModel\") {\n      return <p>Rating: {s.getSelectedString()}</p>;\n    }\n\n    return null;\n  };\n\n  return <Fragment>{node.states.map(s => _render(s))}</Fragment>;\n};\n\nexport default observer(({ store, completion }) => {\n  const node = completion.highlightedNode;\n\n  return (\n    <Fragment>\n      <p>\n        <NodeMinimal node={node} /> (id: {node.id})\n      </p>\n\n      {node.normalization && (\n        <p>\n          Normalization: {node.normalization}\n          <Icon\n            name=\"delete\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              node.deleteNormalization();\n            }}\n          />\n        </p>\n      )}\n      {node.states && <RenderStates node={node} />}\n\n      <div className={styles.block}>\n        <Button\n          className={styles.button}\n          onClick={() => {\n            completion.startRelationMode(node);\n          }}\n        >\n          <Icon type=\"link\" />\n          Relation\n        </Button>\n\n        <Button\n          className={styles.button}\n          onClick={() => {\n            completion.setNormalizationMode(true);\n          }}\n        >\n          <Icon type=\"plus\" />\n          Normalization\n        </Button>\n\n        <Button\n          className={styles.button}\n          type=\"dashed\"\n          onClick={() => {\n            completion.highlightedNode.unselectRegion();\n          }}\n        >\n          <Icon type=\"fullscreen-exit\" />\n          Unselect\n        </Button>\n\n        <Button\n          type=\"danger\"\n          className={styles.button}\n          onClick={() => {\n            completion.highlightedNode.deleteRegion();\n          }}\n        >\n          <Icon type=\"delete\" />\n          Delete\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Bksp ]</Hint>}\n        </Button>\n      </div>\n\n      {completion.normalizationMode && (\n        <div>\n          <Form\n            style={{ marginTop: \"0.5em\" }}\n            onSubmit={ev => {\n              const { value } = ev.target;\n              node.setNormalization(node.normInput);\n              completion.setNormalizationMode(false);\n\n              ev.preventDefault();\n              return false;\n            }}\n          >\n            <Form.Input\n              onChange={ev => {\n                const { value } = ev.target;\n                node.setNormInput(value);\n              }}\n              placeholder=\"Add Normalization\"\n            />\n          </Form>\n        </div>\n      )}\n    </Fragment>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport Relations from \"../Relations\";\nimport Entities from \"../Entities/Entities\";\nimport Entity from \"../Entity/Entity\";\nimport styles from \"./SideColumn.module.scss\";\n\n/**\n * Component Side with:\n * Completions\n * Entities\n * Relations\n */\nexport default observer(({ store }) => {\n  const completion = store.completionStore.selected;\n  const node = completion.highlightedNode;\n\n  return (\n    <Card title=\"Entity\" className={styles.card}>\n      {node && <Entity store={store} completion={completion} />}\n\n      {!completion.highlightedNode && <p>Nothing selected</p>}\n\n      <Entities store={store} regionStore={completion.regionStore} />\n\n      <Relations store={store} item={completion} />\n    </Card>\n  );\n});\n","import { types, getType, getParent } from \"mobx-state-tree\";\nimport Registry from \"./Registry\";\n\nfunction unionArray(arr) {\n  return types.maybeNull(types.array(oneOf(arr)));\n}\n\nfunction oneOf(arr) {\n  return types.union({\n    dispatcher: sn => {\n      if (arr.find(val => sn.type === val)) {\n        return Registry.getModelByTag(sn.type);\n      } else {\n        throw Error(\"Not expecting tag: \" + sn.type);\n      }\n    },\n  });\n}\n\nfunction allModelsTypes() {\n  const args = [\n    {\n      dispatcher: sn => {\n        if (Registry.tags.find(val => sn.type === val)) {\n          return Registry.getModelByTag(sn.type);\n        } else {\n          throw Error(\"Not expecting tag: \" + sn.type);\n        }\n      },\n    },\n    Registry.modelsArr(),\n  ];\n\n  const results = [].concat.apply([], args);\n\n  return types.union.apply(null, results);\n}\n\nfunction isType(node, types) {\n  const nt = getType(node);\n  for (let t of types) if (nt === t) return true;\n\n  return false;\n}\n\nfunction getParentOfTypeString(node, str) {\n  // same as getParentOfType but checks models .name instead of type\n  let parent = getParent(node);\n\n  if (!Array.isArray(str)) str = [str];\n\n  while (parent) {\n    const name = getType(parent).name;\n\n    if (str.find(c => c === name)) return parent;\n\n    parent = getParent(parent);\n  }\n\n  return null;\n}\n\nexport default { unionArray, allModelsTypes, oneOf, isType, getParentOfTypeString };\n","import React from \"react\";\nimport { types, getEnv, flow, getParentOfType } from \"mobx-state-tree\";\nimport { observer, Provider } from \"mobx-react\";\n\nimport Tree from \"../../core/Tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\n\n/**\n * View element. It's analogous to div element in html and can be used to visual configure display of blocks\n * @example\n * <View style=\"display: flex;\">\n *  <View style=\"flex: 50%\">\n *   <Header value=\"Facts:\"></Header>\n *   <Text name=\"text\" value=\"$fact\"></Text>\n *  </View>\n *  <View style=\"flex: 50%; margin-left: 1em\">\n *   <Header value=\"Enter your question:\"></Header>\n *   <TextArea name=\"question\" ></TextArea>\n *  </View>\n * </View>\n * @name View\n * @param {block|inline} display\n * @param {hexColor} backgroundColor background color\n * @param {style} style css style string\n */\nconst TagAttrs = types.model({\n  display: types.optional(types.string, \"block\"),\n  backgroundcolor: types.optional(types.string, \"\"),\n  margin: types.optional(types.string, \"\"),\n});\n\nconst Model = types.model({\n  id: types.identifier,\n  type: \"view\",\n  style: types.maybeNull(types.string),\n  children: Types.unionArray([\n    \"view\",\n    \"header\",\n    \"labels\",\n    \"textarea\",\n    \"choices\",\n    \"rating\",\n    \"ranker\",\n    \"rectangle\",\n    \"polygon\",\n    \"rectanglelabels\",\n    \"polygonlabels\",\n    \"text\",\n    \"audio\",\n    \"image\",\n    \"hypertext\",\n    \"audioplus\",\n    \"list\",\n    \"dialog\",\n  ]),\n});\n\nconst ViewModel = types.compose(\n  \"ViewModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = observer(({ item }) => {\n  let style = {};\n\n  if (item.display === \"inline\") {\n    style = { display: \"inline-block\", marginRight: \"15px\" };\n  }\n\n  if (item.style) {\n    style = Tree.cssConverter(item.style);\n  }\n\n  return <div style={style}>{Tree.renderChildren(item)}</div>;\n});\n\nRegistry.addTag(\"view\", ViewModel, HtxView);\n\nexport { HtxView, ViewModel };\n","/**\n * Convert JavaScript string in dot notation into an object reference\n * @param {Object} obj\n * @param {*} is\n * @param {*} value\n */\nfunction _index(obj, is, value) {\n  if (typeof is === \"string\") return _index(obj, is.split(\".\"), value);\n  else if (is.length === 1 && value !== undefined) return (obj[is[0]] = value);\n  else if (is.length === 0) return obj;\n  else return _index(obj[is[0]], is.slice(1), value);\n}\n\n/**\n *\n * @param {*} variable\n * @param {*} obj\n */\nfunction variableNotation(variable, obj) {\n  if (variable.charAt(0) === \"$\") {\n    const n = variable.substring(1);\n    return _index(obj, n);\n  } else {\n    return variable;\n  }\n}\n\n/**\n * A small templating engine for processing HTML with given data.\n *\n * @see TemplateEngine via MIT Licensed https://github.com/krasimir/absurd/\n *\n * @param {string} html\n * @param {Object} options\n * @returns {*}\n */\nfunction runTemplate(html, options) {\n  if (!options) options = {};\n\n  var re = /[$](.+)/g,\n    reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,\n    code = \"with(obj) { var r=[];\\n\",\n    cursor = 0,\n    result,\n    match;\n\n  var add = function(line, js) {\n    js\n      ? (code += line.match(reExp) ? line + \"\\n\" : \"r.push(\" + line + \");\\n\")\n      : (code += line !== \"\" ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : \"\");\n    return add;\n  };\n\n  while ((match = re.exec(html))) {\n    add(html.slice(cursor, match.index))(match[1], true);\n    cursor = match.index + match[0].length;\n  }\n\n  if (!html) return \"\";\n\n  add(html.substr(cursor, html.length - cursor));\n  code = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, \" \");\n\n  try {\n    result = new Function(\"obj\", code).apply(options, [options]);\n  } catch (err) {\n    console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n  }\n\n  return result;\n}\n\nexport { variableNotation, runTemplate, _index };\n","import { types } from \"mobx-state-tree\";\n\nimport { runTemplate } from \"../../core/Template\";\n\nconst ProcessAttrsMixin = types.model().actions(self => ({\n  updateValue(store) {\n    self._value = runTemplate(self.value, store.task.dataObj) || \"\";\n  },\n}));\n\nexport default ProcessAttrsMixin;\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport { Table, Header } from \"semantic-ui-react\";\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Table tag, show object keys and values in a table\n * @example\n * <Table name=\"text-1\" value=\"$text\"></Table>\n * @name Table\n * @param {string} value\n */\nconst Model = types.model({\n  type: \"table\",\n  size: types.optional(types.string, \"h4\"),\n  value: types.maybeNull(types.string),\n  _value: types.optional(types.string, \"\"),\n});\n\nconst TableModel = types.compose(\n  \"TableModel\",\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxTable = inject(\"store\")(\n  observer(({ store, item }) => {\n    let value = item._value;\n    if (!value) {\n      if (store.task) value = store.task.dataObj;\n    }\n\n    return (\n      <div style={{ marginTop: \"1em\" }}>\n        <Table basic=\"very\" celled collapsing>\n          <Table.Body>\n            {Object.keys(value).map(k => {\n              let v = value[k];\n              if (typeof v === \"object\") v = JSON.stringify(v);\n\n              return (\n                <Table.Row>\n                  <Table.Cell>\n                    <Header as=\"h4\">\n                      <Header.Subheader>{k}</Header.Subheader>\n                    </Header>\n                  </Table.Cell>\n                  <Table.Cell>{v}</Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"table\", TableModel, HtxTable);\n\nexport { HtxTable, TableModel };\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { Typography } from \"antd\";\n\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Header tag, show header\n * @example\n * <Header name=\"text-1\" value=\"$text\"></Header>\n * @name Header\n * @param {string} size Size of header\n * @param {string} value Text of header\n * @param {boolean} underline Underline of header\n */\nconst Model = types.model({\n  type: \"header\",\n  size: types.optional(types.number, 4),\n  value: types.optional(types.string, \"\"),\n  underline: types.optional(types.boolean, false),\n});\n\nconst HeaderModel = types.compose(\n  \"HeaderModel\",\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxHeader = observer(({ item }) => {\n  return (\n    <Typography.Title underline={item.underline} level={item.size} style={{ margin: \"10px 0\" }}>\n      {item.value}\n    </Typography.Title>\n  );\n});\n\nRegistry.addTag(\"header\", HeaderModel, HtxHeader);\n\nexport { HtxHeader, HeaderModel };\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport { runTemplate } from \"../../core/Template\";\n\n/**\n * HyperText element. Render html inside\n * @example\n * <View>\n *  <HyperText value=\"<p>Hey</p>\"></HyperText>\n * <View>\n * @param {string} name\n * @param {string} value\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nfunction HyperTextActions(self) {\n  return {\n    fromStateJSON(obj) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  };\n}\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"HyperText\",\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => HyperTextActions(self));\n\nconst HyperTextModel = types.compose(\n  \"HyperTextModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxHyperTextView = inject(\"store\")(\n  observer(({ store, item }) => {\n    if (!store.task) return null;\n\n    return <div dangerouslySetInnerHTML={{ __html: runTemplate(item.value, store.task.dataObj) }} />;\n  }),\n);\n\nRegistry.addTag(\"hypertext\", HyperTextModel, HtxHyperTextView);\n\nexport { HtxHyperTextView, HyperTextModel };\n","import React from \"react\";\n\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Audio tag, play simple audio file\n * @example\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n * </View>\n * @example\n * <!-- Audio classification -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n *   <Choices name=\"ch\" toName=\"audio\">\n *     <Choice value=\"Positive\"></Choice>\n *     <Choice value=\"Negative\"></Choice>\n *   </Choices>\n * </View>\n * @example\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n *   <TextArea name=\"ta\" toName=\"audio\"></TextArea>\n * </View>\n * @name Audio\n * @param {string} name of element\n * @param {string} value of element\n * @param {string} hotkey hotkey used to play/pause audio\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"audio\",\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  }));\n\nconst AudioModel = types.compose(\n  \"AudioModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  // [NOTE] we can't let audio element load empty item._value\n  // because it's not updating it's parent automatically\n  // https://github.com/facebook/react/issues/9447\n  if (!item._value) return null;\n\n  return (\n    <div>\n      <audio controls>\n        <source src={item._value} type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n});\n\nconst HtxAudio = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audio\", AudioModel, HtxAudio);\n\nexport { AudioModel, HtxAudio };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions.min.js\";\nimport TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js\";\nimport CursorPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.cursor\";\n\nimport styles from \"./Waveform.module.scss\";\n\n/**\n * Use formatTimeCallback to style the notch labels as you wish, such\n * as with more detail as the number of pixels per second increases.\n *\n * Here we format as M:SS.frac, with M suppressed for times < 1 minute,\n * and frac having 0, 1, or 2 digits as the zoom increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override timeInterval, primaryLabelInterval and/or\n * secondaryLabelInterval so they all work together.\n *\n * @param: seconds\n * @param: pxPerSec\n */\nfunction formatTimeCallback(seconds, pxPerSec) {\n  seconds = Number(seconds);\n  var minutes = Math.floor(seconds / 60);\n  seconds = seconds % 60;\n\n  // fill up seconds with zeroes\n  var secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n\n  if (minutes > 0) {\n    if (seconds < 10) {\n      secondsStr = \"0\" + secondsStr;\n    }\n    return `${minutes}:${secondsStr}`;\n  }\n  return secondsStr;\n}\n\n/**\n * Use timeInterval to set the period between notches, in seconds,\n * adding notches as the number of pixels per second increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param: pxPerSec\n */\nfunction timeInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 0.01;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 0.025;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 0.1;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 0.25;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches that get labels in the primary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction primaryLabelInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 4;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 4;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches to get labels in the secondary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Secondary labels are drawn after primary labels, so if\n * you want to have labels every 10 seconds and another color labels\n * every 60 seconds, the 60 second labels should be the secondaries.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction secondaryLabelInterval(pxPerSec) {\n  // draw one every 10s as an example\n  return Math.floor(10 / timeInterval(pxPerSec));\n}\n\nexport default class Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      pos: 0,\n      colors: {\n        waveColor: \"#97A0AF\",\n        progressColor: \"#36B37E\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.$el = ReactDOM.findDOMNode(this);\n\n    this.$waveform = this.$el.querySelector(\"#wave\");\n\n    this.regions = RegionsPlugin.create({\n      dragSelection: {\n        slop: 5, // slop\n      },\n    });\n\n    this.wavesurfer = WaveSurfer.create({\n      container: this.$waveform,\n      backend: \"MediaElement\",\n      waveColor: this.state.colors.waveColor,\n      progressColor: this.state.colors.progressColor,\n      plugins: [\n        this.regions,\n        TimelinePlugin.create({\n          container: \"#timeline\", // the element in which to place the timeline, or a CSS selector to find it\n          formatTimeCallback: formatTimeCallback, // custom time format callback. (Function which receives number of seconds and returns formatted string)\n          timeInterval: timeInterval, // number of intervals that records consists of. Usually it is equal to the duration in minutes. (Integer or function which receives pxPerSec value and returns value)\n          primaryLabelInterval: primaryLabelInterval, // number of primary time labels. (Integer or function which receives pxPerSec value and reurns value)\n          secondaryLabelInterval: secondaryLabelInterval, // number of secondary time labels (Time labels between primary labels, integer or function which receives pxPerSec value and reurns value).\n          primaryColor: \"blue\", // the color of the modulo-ten notch lines (e.g. 10sec, 20sec). The default is '#000'.\n          secondaryColor: \"red\", // the color of the non-modulo-ten notch lines. The default is '#c0c0c0'.\n          primaryFontColor: \"blue\", // the color of the non-modulo-ten time labels (e.g. 10sec, 20sec). The default is '#000'.\n          secondaryFontColor: \"red\",\n        }),\n        CursorPlugin.create({\n          wrapper: this.$waveform,\n          showTime: true,\n          opacity: 1,\n        }),\n      ],\n    });\n\n    this.wavesurfer.load(this.props.src);\n\n    const self = this;\n\n    /**\n     * Mouse enter on region\n     */\n    this.wavesurfer.on(\"region-mouseenter\", reg => {\n      reg._region.onMouseOver();\n    });\n\n    /**\n     * Mouse leave on region\n     */\n    this.wavesurfer.on(\"region-mouseleave\", reg => {\n      reg._region.onMouseLeave();\n    });\n\n    /**\n     *\n     */\n    this.wavesurfer.on(\"region-created\", reg => {\n      const region = self.props.addRegion(reg);\n      reg._region = region;\n\n      reg.on(\"click\", () => region.onClick(self.wavesurfer));\n      reg.on(\"update-end\", () => region.onUpdateEnd(self.wavesurfer));\n\n      reg.on(\"dblclick\", e => {\n        window.setTimeout(function() {\n          reg.play();\n        }, 0);\n      });\n\n      reg.on(\"out\", () => {});\n    });\n\n    /**\n     * Handler of slider\n     */\n    const slider = document.querySelector(\"#slider\");\n\n    if (slider) {\n      slider.oninput = function() {\n        self.wavesurfer.zoom(Number(this.value));\n      };\n    }\n\n    /**\n     *\n     */\n    this.wavesurfer.on(\"ready\", () => {\n      self.props.onCreate(this.wavesurfer);\n    });\n\n    /**\n     * Pause trigger of audio\n     */\n    this.wavesurfer.on(\"pause\", self.props.handlePlay);\n\n    /**\n     * Play trigger of audio\n     */\n    this.wavesurfer.on(\"play\", self.props.handlePlay);\n\n    /**\n     *\n     */\n    this.props.onLoad(this.wavesurfer);\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"wave\" className={styles.wave} />\n        <div id=\"timeline\" />\n      </div>\n    );\n  }\n}\n","import { types } from \"mobx-state-tree\";\n\nconst RegionsMixin = types\n  .model({\n    selected: types.optional(types.boolean, false),\n    highlighted: types.optional(types.boolean, false),\n  })\n  .actions(self => ({\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n    },\n\n    unselectRegion() {\n      const completion = self.completion;\n      if (completion.relationMode) {\n        completion.stopRelationMode();\n      }\n\n      self.selected = false;\n      self.completion.setHighlightedNode(null);\n    },\n\n    onClickRegion() {\n      const completion = self.completion;\n\n      if (completion.relationMode) {\n        completion.addRelation(self);\n        completion.stopRelationMode();\n        completion.regionStore.unselectAll();\n      } else {\n        if (self.selected) {\n          self.unselectRegion();\n        } else {\n          completion.regionStore.unselectAll();\n          self.selectRegion();\n        }\n      }\n    },\n\n    deleteRegion() {\n      self.unselectRegion();\n\n      self.completion.relationStore.deleteNodeRelation(self);\n\n      self.completion.regionStore.deleteRegion(self);\n\n      self.completion.deleteRegion(self);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n    },\n\n    toggleHightlight() {\n      self.setHighlight(!self.highlighted);\n    },\n  }));\n\nexport default RegionsMixin;\n","import { types } from \"mobx-state-tree\";\n\nconst NormalizationMixin = types\n  .model({\n    normInput: types.maybeNull(types.string),\n    normalization: types.maybeNull(types.string),\n  })\n  .actions(self => ({\n    setNormalization(val) {\n      self.normalization = val;\n    },\n\n    deleteNormalization() {\n      self.setNormalization(\"\");\n    },\n\n    setNormInput(val) {\n      self.normInput = val;\n    },\n  }));\n\nexport default NormalizationMixin;\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { Tag } from \"antd\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Utils from \"../../utils\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\nimport Hint from \"../../components/Hint/Hint\";\n\n/**\n * Label tag, represents single label\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\"></Label>\n *     <Label alias=\"P\" value=\"Product\"></Label>\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\"></Text>\n * </View>\n * @name Label\n * @param {string} value A value of label\n * @param {boolean} selected If this label should be preselected\n * @param {string} alias Label alias\n * @param {string} hotkey Hotkey\n * @param {boolean} showalias Show alias inside label text\n * @param {string} aliasstyle Alias css style default=opacity: 0.6\n * @param {string} size Size of text in label\n * @param {string} background Background color of active label\n * @param {string} selectedColor Color of text in active label\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  showalias: types.optional(types.string, \"false\"),\n  aliasstyle: types.optional(types.string, \"opacity: 0.6\"),\n  size: types.optional(types.string, \"medium\"),\n  background: types.optional(types.string, \"#36B37E\"),\n  selectedcolor: types.optional(types.string, \"white\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"label\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .actions(self => ({\n    toggleSelected() {\n      const sel = self.selected;\n\n      const labels = Types.getParentOfTypeString(self, [\"LabelsModel\", \"RectangleLabelsModel\", \"PolygonLabelsModel\"]);\n      labels.shouldBeUnselected && labels.unselectAll();\n\n      if (labels.shouldBeUnselected && sel === true) {\n      } else {\n        self.selected = !self.selected;\n      }\n    },\n\n    markSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst LabelModel = types.compose(\n  \"LabelModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxLabelView = inject(\"store\")(\n  observer(({ item, store }) => {\n    const bg = {\n      backgroundColor: item.selected ? item.background : \"#e8e8e8\",\n      color: item.selected ? item.selectedcolor : \"#333333\",\n      cursor: \"pointer\",\n      margin: \"5px\",\n    };\n\n    return (\n      <Tag\n        onClick={ev => {\n          item.toggleSelected();\n          return false;\n        }}\n        style={bg}\n        size={item.size}\n      >\n        {item._value}\n        {item.showalias === \"true\" && item.alias && (\n          <span style={Utils.styleToProp(item.aliasstyle)}>&nbsp;{item.alias}</span>\n        )}\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n      </Tag>\n    );\n  }),\n);\n\nRegistry.addTag(\"label\", LabelModel, HtxLabelView);\n\nexport { HtxLabelView, LabelModel };\n","import { types } from \"mobx-state-tree\";\n\nconst SelectedModelMixin = types\n  .model()\n  .views(self => ({\n    get selectedLabels() {\n      return self.children.filter(c => c.selected === true);\n    },\n\n    get isSelected() {\n      return self.selectedLabels.length > 0;\n    },\n  }))\n  .actions(self => ({\n    findLabel(value) {\n      return self.children.find(c => c.alias === value || c.value === value);\n    },\n\n    unselectAll() {\n      self.children.map(c => c.markSelected(false));\n    },\n\n    getSelectedNames() {\n      return self.selectedLabels.map(c => (c.alias ? c.alias : c.value));\n    },\n\n    getSelectedString(joinstr) {\n      joinstr = joinstr || \" \";\n      return self.getSelectedNames().join(joinstr);\n    },\n  }));\n\nexport default SelectedModelMixin;\n","import { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { types } from \"mobx-state-tree\";\n\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\n\nimport { LabelModel } from \"./Label\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\n/**\n * Labels tag, create group of labels\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\"></Label>\n *     <Label alias=\"P\" value=\"Product\"></Label>\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\"></Text>\n * </View>\n * @name Labels\n * @param {string} name\n * @param {string} toName name of element that you want to label\n * @param {single|multiple=} [choice=single] one or multiple\n * @param {string=} headerprefix show header text inline with labels\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  choice: types.optional(types.enumeration([\"single\", \"multiple\"]), \"single\"),\n\n  headerprefix: types.maybeNull(types.string),\n\n  // TODO make enum\n  selectionstyle: types.maybeNull(types.optional(types.string, \"basic\", \"border\", \"bottom\")),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"labels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\";\n    },\n  }))\n  .actions(self => ({\n    getSelectedColor() {\n      // return first selected label color\n      const sel = self.children.find(c => c.selected === true);\n      return sel && sel.background;\n    },\n\n    toStateJSON() {\n      const names = self.getSelectedNames();\n\n      if (names && names.length) {\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: self.name,\n          type: self.type,\n          value: {\n            labels: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.labels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.labels.forEach(l => {\n        const label = self.findLabel(l);\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst LabelsModel = types.compose(\n  \"LabelsModel\",\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\n\nconst HtxLabels = observer(({ item }) => {\n  return (\n    <div\n      style={{\n        marginTop: \"1em\",\n        marginBottom: \"1em\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        flexFlow: \"wrap\",\n      }}\n    >\n      {item.headerprefix && <h4 style={{ display: \"inline\", marginRight: \"15px\" }}>{item.headerprefix}</h4>}\n      {Tree.renderChildren(item)}\n    </div>\n  );\n});\n\nRegistry.addTag(\"labels\", LabelsModel, HtxLabels);\n\nexport { HtxLabels, LabelsModel };\n","import React, { Component } from \"react\";\nimport { Rating } from \"semantic-ui-react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\n\n/**\n * Rating tag\n * @example\n * <View>\n *   <Text name=\"txt\" value=\"$text\"></Text>\n *   <Rating name=\"rating\" toName=\"txt\" maxRating=\"10\"></Rating>\n * </View>\n * @name Rating\n * @param {string} name of group\n * @param {string} toName name of element that you want to label\n * @param {integer=} [maxRating=5] maxmium rating value\n * @param {string=} [size=large] one of: mini tiny small large huge massive\n * @param {string=} [icon=star] one of: star heart\n * @param {string=} hotkey hokey\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  maxrating: types.optional(types.string, \"5\"),\n  icon: types.optional(types.string, \"star\"),\n  size: types.optional(types.string, \"large\"),\n\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rating\",\n    rating: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get isSelected() {\n      return self.rating > 0;\n    },\n  }))\n  .actions(self => ({\n    getSelectedString() {\n      return self.rating + \" star\";\n    },\n\n    getSelectedNames() {\n      return self.rating;\n    },\n\n    unselectAll() {\n      self.rating = 0;\n    },\n\n    handleRate(e, { rating, maxrating }) {\n      self.rating = rating;\n    },\n\n    increaseValue() {\n      if (self.rating >= self.maxrating) {\n        self.rating = 0;\n      } else {\n        if (self.rating > 0) {\n          self.rating = self.rating + 1;\n        } else {\n          self.rating = 1;\n        }\n      }\n    },\n\n    onHotKey() {\n      return self.increaseValue();\n    },\n\n    toStateJSON() {\n      if (self.rating) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            rating: self.rating,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      if (obj.id) self.pid = obj.id;\n\n      self.rating = obj.value.rating;\n    },\n  }));\n\nconst RatingModel = types.compose(\n  \"RatingModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxRating = inject(\"store\")(\n  observer(({ item, store }) => {\n    return (\n      <div>\n        <Rating\n          icon=\"star\"\n          size={item.size}\n          defaultRating={0}\n          rating={item.rating}\n          maxRating={item.maxrating}\n          onRate={item.handleRate}\n          clearable\n        />\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n          <sup style={{ fontSize: \"9px\" }}>[{item.hotkey}]</sup>\n        )}\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"rating\", RatingModel, HtxRating);\n\nexport { HtxRating, RatingModel };\n","import { types, getParentOfType, destroy, getRoot } from \"mobx-state-tree\";\n\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\n\nimport { AudioPlusModel } from \"./AudioPlus\";\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    start: types.number,\n    end: types.number,\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel))),\n    // regionbg: types.string,\n    // selectedregionbg: types.string\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, AudioPlusModel);\n    },\n\n    get regionbg() {\n      return self.parent.regionbg;\n    },\n\n    get selectedregionbg() {\n      return self.parent.selectedregionbg;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.pid,\n          // type: getType(s).name,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"region\",\n          // text: parent.text,\n          value: {\n            start: self.start,\n            end: self.end,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n\n    unselectRegion() {\n      self.selected = false;\n      self._ws_region.update({ color: self.regionbg });\n      self.completion.setHighlightedNode(null);\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self._ws_region.update({ color: self.selectedregionbg });\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n\n      if (val) {\n        // self._ws_region.update({ color: self.selectedregionbg });\n        self._ws_region.element.style.border = \"2px solid red\";\n      } else {\n        // self._ws_region.update({ color: self.regionbg });\n        self._ws_region.element.style.border = \"none\";\n      }\n    },\n\n    beforeDestroy() {\n      if (self._ws_region) self._ws_region.remove();\n    },\n\n    onClick(wavesurfer) {\n      if (!self.completion.relationMode) {\n        Object.values(wavesurfer.regions.list).forEach(r => {\n          r.update({ color: self.regionbg });\n        });\n\n        self._ws_region.update({ color: self.selectedregionbg });\n      }\n\n      self.onClickRegion();\n      // self.props.clickRegion(reg._range);\n    },\n\n    onMouseOver() {\n      if (self.completion.relationMode) {\n        self.setHighlight(true);\n        self._ws_region.element.style.cursor = \"crosshair\";\n      }\n    },\n\n    onMouseLeave() {\n      if (self.completion.relationMode) {\n        self.setHighlight(false);\n        self._ws_region.element.style.cursor = \"move\";\n      }\n    },\n\n    onUpdateEnd(wavesurfer) {\n      self.start = self._ws_region.start;\n      self.end = self._ws_region.end;\n\n      // console.log(self._ws_region.style());\n\n      // console.log(self.start);\n      // console.log(self.end);\n\n      // Object.values(wavesurfer.regions.list).forEach((r) => {\n      //     r.update({ color: self.regionbg });\n      // });\n\n      // self._ws_region.update({ color: self.selectedregionbg });\n    },\n  }));\n\nconst AudioRegionModel = types.compose(\n  \"AudioRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nexport { AudioRegionModel };\n","import React, { Fragment } from \"react\";\n\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Icon } from \"antd\";\n\nimport { cloneNode } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\n// import { AudioEditorMode } from './AudioEditor';\nimport Waveform from \"../../components/Waveform/Waveform\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\nimport { AudioRegionModel } from \"./AudioRegion\";\n\n/**\n * AudioPlus tag, play audio and label regions\n * @example\n * <View>\n *  <Labels name=\"lbl-1\" toName=\"audio-1\"><Label value=\"Hello\"></Label><Label value=\"World\"></Label></Labels>\n *  <Rating name=\"rate-1\" toName=\"audio-1\"></Rating>\n *  <AudioPlus name=\"audio-1\" value=\"$audio\"></AudioPlus>\n * </View>\n * @name AudioPlus\n * @param {string} name of group\n * @param {string} value\n * @param {boolean} hasZoom speficy if audio has zoom functionality\n * @param {string} regionBG region color\n * @param {string} selectedRegionBG selected region background\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  haszoom: types.optional(types.string, \"true\"),\n  regionbg: types.optional(types.string, \"rgba(0,0,0, 0.1)\"),\n  selectedregionbg: types.optional(types.string, \"rgba(255,0,0,0.5)\"),\n  _value: types.optional(types.string, \"\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"audio\",\n    playing: types.optional(types.boolean, false),\n    regions: types.array(AudioRegionModel),\n    rangeValue: types.optional(types.string, \"20\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states ? states.filter(s => s.isSelected) : null;\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      return self.regions.map(r => r.toStateJSON());\n    },\n\n    findRegion(start, end) {\n      return self.regions.find(r => r.start === start && r.end === end);\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.findRegion(obj.value.start, obj.value.end);\n      restoreNewsnapshot(fromModel);\n\n      self._ws.addRegion({\n        start: obj.value.start,\n        end: obj.value.end,\n      });\n    },\n\n    setRangeValue(val) {\n      self.rangeValue = val;\n    },\n\n    addRegion(ws_region) {\n      const find_r = self.findRegion(ws_region.start, ws_region.end);\n      if (self.findRegion(ws_region.start, ws_region.end)) {\n        find_r._ws_region = ws_region;\n        return find_r;\n      }\n\n      const states = self.activeStates();\n\n      const clonedStates = states ? states.map(s => cloneNode(s)) : null;\n\n      // const bgColor = states ? states[0].getSelectedColor() : self.selectedregionbg;\n\n      const r = AudioRegionModel.create({\n        id: guidGenerator(),\n        start: ws_region.start,\n        end: ws_region.end,\n        regionbg: self.regionbg,\n        selectedregionbg: self.selectedregionbg,\n        states: clonedStates,\n      });\n\n      r._ws_region = ws_region;\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      // r.selectRegion();\n      states && states.forEach(s => s.unselectAll());\n\n      return r;\n    },\n\n    /**\n     * Play and stop\n     */\n    handlePlay() {\n      self.playing = !self.playing;\n    },\n\n    onLoad(ws) {\n      self._ws = ws;\n\n      self.regions.forEach(obj => {\n        self._ws.addRegion({\n          start: obj.start,\n          end: obj.end,\n        });\n      });\n    },\n\n    wsCreated(ws) {\n      self._ws = ws;\n    },\n  }));\n\nconst AudioPlusModel = types.compose(\n  \"AudioPlusModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  return (\n    <div>\n      <Waveform\n        src={item._value}\n        selectRegion={item.selectRegion}\n        handlePlay={item.handlePlay}\n        onCreate={item.wsCreated}\n        addRegion={item.addRegion}\n        onLoad={item.onLoad}\n      />\n\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", marginTop: \"1em\" }}>\n        <Button\n          type=\"primary\"\n          onClick={ev => {\n            item._ws.playPause();\n          }}\n        >\n          {item.playing && (\n            <Fragment>\n              <Icon type=\"pause-circle\" /> Pause\n            </Fragment>\n          )}\n          {!item.playing && (\n            <Fragment>\n              <Icon type=\"play-circle\" /> Play\n            </Fragment>\n          )}\n        </Button>\n\n        {item.haszoom === \"true\" && (\n          <input\n            type=\"range\"\n            min=\"20\"\n            max=\"200\"\n            id=\"slider\"\n            value={item.rangeValue}\n            onChange={ev => {\n              item.setRangeValue(ev.target.value);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n});\n\nconst HtxAudioPlus = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audioplus\", AudioPlusModel, HtxAudioPlus);\n\nexport { AudioPlusModel, AudioRegionModel, HtxAudioPlus };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { isHtx, cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { RectRegionModel } from \"../object/RectRegion\";\n\n/**\n * Rectangle tag\n * Rectangle is used to add rectangle (BBox) to an image\n * @example\n * <View>\n *   <Rectangle name=\"rect-1\" toName=\"img-1\"></Rectangle>\n *   <Image name=\"img-1\" value=\"$img\"></Image>\n * </View>\n * @name Rectangle\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {float=} [opacity=0.6] opacity of rectangle\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {boolean=} [canRotate=true] show rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.maybeNull(types.string),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n\n  canrotate: types.optional(types.string, \"true\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"rectangle\",\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj) {\n      // const rect = self._createRect();\n      // rect.setPosition(obj.value.x, obj.value.y, obj.value.width, obj.value.height, obj.value.rotation);\n      // return rect;\n    },\n  }));\n\nconst RectangleModel = types.compose(\n  \"RectangleModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"rectangle\", RectangleModel, HtxView);\n\nexport { HtxView, RectangleModel };\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\n\nimport { types } from \"mobx-state-tree\";\n\nimport Types from \"../../core/Types\";\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { RectangleModel } from \"./Rectangle\";\n\n/**\n * RectangleLabels tag, create labeled rectangles\n * @example\n * <View>\n *   <RectangleLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\"></Label>\n *     <Label value=\"Animal\"></Label>\n *   </RectangleLabels>\n *   <Image name=\"image\" value=\"$image\"></Image>\n * </View>\n * @name RectangleLabels\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {float=} [opacity=0.6] opacity of rectangle\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {boolean=} [canRotate=true] show rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model(\"RectangleLabelsModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rectanglelabels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.rectanglelabels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.rectanglelabels.forEach(l => {\n        const label = self.findLabel(l);\n\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst Composition = types.compose(\n  LabelsModel,\n  RectangleModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\nconst RectangleLabelsModel = types.compose(\n  \"RectangleLabelsModel\",\n  Composition,\n);\n\nconst HtxRectangleLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"rectanglelabels\", RectangleLabelsModel, HtxRectangleLabels);\n\nexport { HtxRectangleLabels, RectangleLabelsModel };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RectangleLabelsModel } from \"../control/RectangleLabels\";\n\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"rectangleregion\",\n\n    x: types.number,\n    y: types.number,\n    width: types.number,\n    height: types.number,\n\n    scaleX: types.optional(types.number, 1),\n    scaleY: types.optional(types.number, 1),\n\n    rotation: types.optional(types.number, 0),\n\n    opacity: types.number,\n    strokewidth: types.number,\n\n    fillcolor: types.maybeNull(types.string),\n    strokecolor: types.string,\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel, RectangleLabelsModel))),\n\n    // fromName: types.maybeNull(types.string),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n\n    sw: types.maybeNull(types.number),\n    sh: types.maybeNull(types.number),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"px\"),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    unselectRegion() {\n      self.selected = false;\n      self.parent.setSelected(undefined);\n      self.completion.setHighlightedNode(null);\n    },\n\n    coordsInside(x, y) {\n      // check if x and y are inside the rectangle\n      const rx = self.x;\n      const ry = self.y;\n      const rw = self.width * (self.scaleX || 1);\n      const rh = self.height * (self.scaleY || 1);\n\n      if (x > rx && x < rx + rw && y > ry && y < ry + rh) return true;\n\n      return false;\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n    },\n\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.rotation = rotation;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      self.wp = wp;\n      self.hp = hp;\n\n      self.sw = sw;\n      self.sh = sh;\n\n      if (self.coordstype == \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.width = (sw * self.width) / 100;\n        self.height = (sh * self.height) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    toStateJSON() {\n      const parent = self.parent;\n      const from = parent.states()[0];\n\n      const buildTree = obj => {\n        const tree = {\n          id: self.id,\n          from_name: from.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"rectangle\",\n          value: {\n            x: (self.x * 100) / self.parent.stageWidth,\n            y: (self.y * 100) / self.parent.stageHeight,\n            width: (self.width * (self.scaleX || 1) * 100) / self.parent.stageWidth, //  * (self.scaleX || 1)\n            height: (self.height * (self.scaleY || 1) * 100) / self.parent.stageHeight,\n            rotation: self.rotation,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst RectRegionModel = types.compose(\n  \"RectRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxRectangleView = ({ store, item }) => {\n  const self = this;\n  const { name, wwidth, wheight, onChangedPosition } = item;\n\n  const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n  const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n  const x = item.x;\n  const y = item.y;\n  const w = item.width;\n  const h = item.height;\n\n  const props = {};\n\n  props[\"opacity\"] = item.opacity;\n\n  if (item.fillcolor) {\n    props[\"fill\"] = item.fillcolor;\n  }\n\n  props[\"stroke\"] = item.strokecolor;\n  props[\"strokeWidth\"] = item.strokewidth;\n  props[\"strokeScaleEnabled\"] = false;\n  props[\"shadowBlur\"] = 0;\n\n  if (item.highlighted) {\n    props[\"stroke\"] = \"#ff0000\";\n  }\n\n  return (\n    <Fragment>\n      <Rect\n        x={x}\n        y={y}\n        width={w}\n        height={h}\n        scaleX={item.scaleX}\n        scaleY={item.scaleY}\n        name={item.id}\n        onTransformEnd={e => {\n          const t = e.target;\n\n          const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n          const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        onDragEnd={e => {\n          const t = e.target;\n\n          const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n          const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        dragBoundFunc={function(pos) {\n          let { x, y } = pos;\n\n          if (x < 0) x = 0;\n          if (y < 0) y = 0;\n\n          return {\n            x: x,\n            y: y,\n          };\n        }}\n        onMouseOver={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent._stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable\n      />\n    </Fragment>\n  );\n};\n\nconst HtxRectangle = inject(\"store\")(observer(HtxRectangleView));\n\nRegistry.addTag(\"rectangleregion\", RectRegionModel, HtxRectangle);\n\nexport { RectRegionModel, HtxRectangle };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot, getParent } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer, Line, Circle } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst PolygonPoint = types\n  .model({\n    init_x: types.optional(types.number, 0),\n    init_y: types.optional(types.number, 0),\n\n    x: types.number,\n    y: types.number,\n\n    style: types.string,\n    size: types.string,\n    // isMouseOverStartPoint: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get parent() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      self.init_x = self.x;\n      self.init_y = self.y;\n    },\n\n    movePoint(x, y) {\n      self.x = self.init_x + x;\n      self.y = self.init_y + y;\n    },\n\n    _movePoint(x, y) {\n      self.init_x = x;\n      self.init_y = y;\n\n      self.x = x;\n      self.y = y;\n    },\n\n    handleMouseOverStartPoint(ev) {\n      const stage = self.parent.parent._stageRef;\n      stage.container().style.cursor = \"crosshair\";\n\n      if (self.parent.closed || self.parent.points.length < 3) return;\n\n      const t = ev.target;\n\n      t.setX(t.x() - t.width() / 2);\n      t.setY(t.y() - t.height() / 2);\n\n      const scaleMap = {\n        small: 3,\n        medium: 2,\n        large: 2,\n      };\n\n      const scale = scaleMap[self.size];\n\n      t.scale({ x: scale, y: scale });\n\n      self.parent.setMouseOverStartPoint(true);\n    },\n\n    handleMouseOutStartPoint(ev) {\n      const t = ev.target;\n\n      const stage = self.parent.parent._stageRef;\n      stage.container().style.cursor = \"default\";\n\n      t.setX(t.x() + t.width() / 2);\n      t.setY(t.y() + t.height() / 2);\n      t.scale({ x: 1, y: 1 });\n\n      self.parent.setMouseOverStartPoint(false);\n    },\n  }));\n\nconst PolygonPointView = observer(({ item, index }) => {\n  const sizes = {\n    small: 4,\n    medium: 8,\n    large: 12,\n  };\n\n  const stroke = {\n    small: 1,\n    medium: 2,\n    large: 3,\n  };\n\n  const w = sizes[item.size];\n\n  const startPointAttr =\n    index === 0\n      ? {\n          hitStrokeWidth: 12,\n          onMouseOver: item.handleMouseOverStartPoint,\n          onMouseOut: item.handleMouseOutStartPoint,\n        }\n      : null;\n\n  const isOver = item.parent.mouseOverStartPoint;\n\n  const dragOpts = {\n    onDragStart: e => {\n      //handleDragStartPoint\n    },\n\n    onDragMove: e => {\n      item._movePoint(e.target.attrs.x, e.target.attrs.y);\n\n      /* const points = this.state.points; */\n      /* const index = e.target.index - 1; */\n      /* console.log(event.target); */\n      /* const pos = [event.target.attrs.x, event.target.attrs.y]; */\n      /* console.log(\"move\", event); */\n      /* console.log(pos); */\n      /* this.setState({ */\n      /*     points: [...points.slice(0, index), pos, ...points.slice(index + 1)] */\n      /* }); */\n    },\n\n    onDragEnd: e => {\n      // handleDragEndPoint\n    },\n\n    onMouseOver: e => {\n      const stage = item.parent.parent._stageRef;\n      stage.container().style.cursor = \"crosshair\";\n    },\n\n    onMouseOut: e => {\n      const stage = item.parent.parent._stageRef;\n      stage.container().style.cursor = \"default\";\n    },\n  };\n\n  if (item.style == \"circle\") {\n    return (\n      <Circle\n        key={index}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        radius={w}\n        fill=\"white\"\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable\n      />\n    );\n  } else {\n    return (\n      <Rect\n        key={index}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        width={w}\n        height={w}\n        fill=\"white\"\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        dragOnTop={false}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable\n      />\n    );\n  }\n  // <Rect width={w}\n  //       height={w}\n  //       x={item.x - w/2}\n  //       y={item.y - w/2}\n  //       fill=\"black\"\n\n  //       onClick={(ev) => {\n  //           item.parent.closePoly();\n\n  //           ev.cancelBubble = true;\n  //           ev.evt.stopPropagation();\n  //       }}\n\n  //       dragBoundFunc={function(pos) {\n  //           let { x, y } = pos;\n  //           if (x < 0) x = 0;\n  //           if (y < 0) y = 0;\n\n  //           // /* const r = wwidth - this.getAttr('width'); */\n  //           // /* const b = wheight - this.getAttr('height'); */\n\n  //           item._movePoint(x, y);\n  //           // if (x > r) x = r;\n  //           // if (y > b) y = b;\n  //           // item.redrawParent();\n\n  //         return {\n  //             x: x,\n  //             y: y,\n  //         };\n\n  //       }}\n\n  //  draggable\n  // />\n});\n\nexport { PolygonPoint, PolygonPointView };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { isHtx, cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { PolygonRegionModel } from \"../object/PolygonRegion\";\n\n/**\n * Polygon tag\n * Polygon is used to add polygons to an image\n * @example\n * <View>\n *   <Polygon name=\"rect-1\" toName=\"img-1\" value=\"Add Rectangle\"></Polygon>\n *   <Image name=\"img-1\" value=\"$img\"></Image>\n * </View>\n * @name Polygon\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {number=} [opacity=0.6] opacity of polygon\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {small|medium|large=} [pointSize=medium] size of polygon handle points\n * @param {rectangle|circle=} [pointStyle=rectangle] style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.maybeNull(types.string),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n\n  pointsize: types.optional(types.string, \"medium\"),\n  pointstyle: types.optional(types.string, \"rectangle\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"polygon\",\n\n    // regions: types.array(RectRegionModel),\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states ? states.filter(c => c.isSelected === true) : null;\n    },\n  }))\n  .actions(self => ({}));\n\nconst PolygonModel = types.compose(\n  \"PolygonModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = inject(\"store\")(\n  observer(({ store, item }) => {\n    return null;\n  }),\n);\n\nRegistry.addTag(\"polygon\", PolygonModel, HtxView);\n\nexport { HtxView, PolygonModel };\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\n\nimport { types } from \"mobx-state-tree\";\n\nimport Types from \"../../core/Types\";\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { PolygonModel } from \"./Polygon\";\n\n/**\n * PolygonLabels tag, create labeled polygons\n * @example\n * <View>\n *   <Image name=\"image\" value=\"$image\"></Image>\n *   <PolygonLabels name=\"lables\" toName=\"image\">\n *     <Label value=\"Car\"></Label>\n *     <Label value=\"Sign\"></Label>\n *   </PolygonLabels>\n * </View>\n * @name PolygonLabels\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {number=} [opacity=0.6] opacity of polygon\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {small|medium|large=} [pointSize=medium] size of polygon handle points\n * @param {rectangle|circle=} [pointStyle=rectangle] style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model(\"PolygonLabelsModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"polygonlabels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.polygonlabels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.polygonlabels.forEach(l => {\n        const label = self.findLabel(l);\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst Composition = types.compose(\n  LabelsModel,\n  PolygonModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\nconst PolygonLabelsModel = types.compose(\n  \"PolygonLabelsModel\",\n  Composition,\n);\n\nconst HtxPolygonLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"polygonlabels\", PolygonLabelsModel, HtxPolygonLabels);\n\nexport { HtxPolygonLabels, PolygonLabelsModel };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot, getParent } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer, Group, Line } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport { PolygonPoint, PolygonPointView } from \"./PolygonPoint\";\n\nimport { PolygonLabelsModel } from \"../control/PolygonLabels\";\n\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"polygonregion\",\n\n    opacity: types.number,\n    fillcolor: types.maybeNull(types.string),\n\n    strokewidth: types.number,\n    strokecolor: types.string,\n\n    pointsize: types.string,\n    pointstyle: types.string,\n\n    closed: types.optional(types.boolean, false),\n\n    points: types.array(PolygonPoint, []),\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel, PolygonLabelsModel))),\n\n    mouseOverStartPoint: types.optional(types.boolean, false),\n\n    fromName: types.maybeNull(types.string),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get isCW() {},\n\n    linePoints() {\n      const p = self.points.map(p => [p[\"x\"], p[\"y\"]]);\n\n      const flatten = arr => {\n        return arr.reduce(function(flat, toFlatten) {\n          return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n        }, []);\n      };\n\n      return flatten(p);\n    },\n  }))\n  .actions(self => ({\n    setMouseOverStartPoint(val) {\n      self.mouseOverStartPoint = val;\n    },\n\n    findPolyOutline() {\n      const { points } = self;\n      const left = points.reduce((acc, loc) => (acc.x < loc.x ? acc : loc));\n      const right = points.reduce((acc, loc) => (acc.x > loc.x ? acc : loc));\n\n      const top = points.reduce((acc, loc) => (acc.y < loc.y ? acc : loc));\n      const bottom = points.reduce((acc, loc) => (acc.y > loc.y ? acc : loc));\n\n      return {\n        x: left.x,\n        y: top.y,\n        width: right.x - left.x,\n        height: bottom.y - top.y,\n      };\n    },\n\n    coordsInside(x, y) {\n      const inside = false;\n      const vs = self.points;\n\n      for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0],\n          yi = vs[i][1];\n        var xj = vs[j][0],\n          yj = vs[j][1];\n\n        var intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n        if (intersect) inside = !inside;\n      }\n\n      return inside;\n    },\n\n    addPoint(x, y) {\n      if (self.closed) return;\n\n      if (self.mouseOverStartPoint) {\n        self.closePoly();\n        return;\n      }\n      // if (self.canClose(x, y)) {\n      //     self.closePoly();\n      //     return;\n      // }\n\n      self._addPoint(x, y);\n    },\n\n    insertPoint(insertIdx, x, y) {\n      const p = { x: x, y: y, size: self.pointsize, style: self.pointstyle };\n      self.points.splice(insertIdx, 0, p);\n    },\n\n    _addPoint(x, y) {\n      self.points.push({ x: x, y: y, size: self.pointsize, style: self.pointstyle });\n    },\n\n    closePoly() {\n      self.closed = true;\n      self.selectRegion();\n    },\n\n    canClose(x, y) {\n      if (self.points.length < 2) return false;\n\n      const p1 = self.points[0];\n      const p2 = { x: x, y: y };\n\n      var r = 50;\n      var dist_points = (p1[\"x\"] - p2[\"x\"]) * (p1[\"x\"] - p2[\"x\"]) + (p1[\"y\"] - p2[\"y\"]) * (p2[\"y\"] - p2[\"y\"]);\n\n      if (dist_points < r) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    unselectRegion() {\n      self.selected = false;\n      self.parent.setSelected(undefined);\n      self.completion.setHighlightedNode(null);\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n    },\n\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.rotation = rotation;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp) {\n      self.wp = wp;\n      self.hp = hp;\n    },\n\n    toStateJSON() {\n      // console.log(self.parent.naturalWidth);\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = self.parent;\n\n      const perc_w = (stageWidth * 100) / naturalWidth;\n      const perc_h = (stageHeight * 100) / naturalHeight;\n\n      const perc_points = self.points.map(p => {\n        const orig_w = (p.x * 100) / perc_w;\n        const res_w = (orig_w * 100) / naturalWidth;\n\n        const orig_h = (p.y * 100) / perc_h;\n        const res_h = (orig_h * 100) / naturalHeight;\n\n        return [res_w, res_h];\n      });\n\n      // 1024 - 100\n      // 750 - x\n\n      // x = (750 * 100) / 1024\n      // x = 75\n\n      // 300 - 75\n      // y - 100\n\n      // y = (100 * 300) / 75\n      // y = 500\n\n      // 1024 - 100\n      // 500 - z\n\n      // z = (y * 100) / 1024\n\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.id,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"polygon\",\n          value: {\n            points: perc_points,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst PolygonRegionModel = types.compose(\n  \"PolygonRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nfunction getAnchorPoint({ flattenedPoints, a, b }) {\n  const [x1, y1, x2, y2] = flattenedPoints;\n  const y =\n    ((x2 - x1) * (x2 * y1 - x1 * y2) + (x2 - x1) * (y2 - y1) * a + (y2 - y1) * (y2 - y1) * b) /\n    ((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n  const x =\n    a -\n    ((y2 - y1) * (x2 * y1 - x1 * y2 + a * (y2 - y1) - b * (x2 - x1))) / ((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n  return [x, y];\n}\n\nfunction getFlattenedPoints(points) {\n  const p = points.map(p => [p[\"x\"], p[\"y\"]]);\n  return p.reduce(function(flattenedPoints, point) {\n    return flattenedPoints.concat(point);\n  }, []);\n}\n\nconst HtxPolygonView = ({ store, item }) => {\n  const self = this;\n  const { name, wwidth, wheight, onChangedPosition } = item;\n\n  let opacity = 0.5;\n\n  const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n  const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n  const x = item.x;\n  const y = item.y;\n  const w = item.width;\n  const h = item.height;\n\n  const props = {};\n\n  props[\"opacity\"] = item.opacity;\n\n  if (item.fillcolor) {\n    props[\"fill\"] = item.fillcolor;\n  }\n\n  props[\"stroke\"] = item.strokecolor;\n  props[\"strokeWidth\"] = item.strokewidth;\n\n  if (item.highlighted) {\n    props[\"stroke\"] = \"red\";\n  }\n\n  return (\n    <Fragment>\n      {item.mouseOverStartPoint}\n\n      <Line\n        points={item.linePoints()}\n        fill={item.fill}\n        opacity={item.opacity}\n        closed={item.closed}\n        redraw={item.update}\n        stroke={item.stroke}\n        strokeWidth={parseInt(item.strokewidth)}\n        onDragStart={e => {\n          item.completion.setDragMode(true);\n        }}\n        dragBoundFunc={function(pos) {\n          let { x, y } = pos;\n          /* if (x < 0) x = 0; */\n          /* if (y < 0) y = 0; */\n\n          const r = item.parent.stageWidth - this.getAttr(\"width\");\n          const b = item.parent.stageHeight - this.getAttr(\"height\");\n\n          /* const r = wwidth - this.getAttr('width'); */\n          /* const b = wheight - this.getAttr('height'); */\n\n          if (x > r) x = r;\n          if (y > b) y = b;\n\n          item.points.forEach(p => {\n            p.movePoint(x, y);\n          });\n\n          return {\n            x: 0,\n            y: 0,\n          };\n        }}\n        onDragEnd={e => {\n          item.completion.setDragMode(false);\n\n          if (!item.closed) item.closePoly();\n\n          item.parent.setActivePolygon(null);\n\n          item.points.forEach(p => {\n            p.afterCreate();\n          });\n        }}\n        onMouseOver={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent._stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          e.cancelBubble = true;\n\n          if (!item.closed) return;\n\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable\n      />\n\n      {!item.closed && item.points.map((p, index) => <PolygonPointView item={p} index={index} />)}\n      {item.closed && item.selected && item.points.map((p, index) => <PolygonPointView item={p} index={index} />)}\n    </Fragment>\n  );\n};\n\nconst HtxPolygon = inject(\"store\")(observer(HtxPolygonView));\n\nRegistry.addTag(\"polygonregion\", PolygonRegionModel, HtxPolygon);\n\nexport { PolygonRegionModel, HtxPolygon };\n","import React, { Component } from \"react\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getType, getParentOfType, destroy, getRoot } from \"mobx-state-tree\";\n\nimport { Stage, Layer, Rect, Text, Transformer } from \"react-konva\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, cloneNode, restoreNewsnapshot } from \"../../core/Helpers\";\nimport Tree from \"../../core/Tree\";\n\n// import { ImageEditorModel } from './ImageEditor';\nimport { RectRegionModel } from \"./RectRegion\";\nimport { PolygonRegionModel } from \"./PolygonRegion\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Image tag, show image on the page\n * @example\n * <View>\n *   <Image value=\"$url\"></Image>\n * </View>\n * @example\n * <View>\n *   <Image value=\"https://imgflip.com/s/meme/Leonardo-Dicaprio-Cheers.jpg\" width=\"100%\" maxWidth=\"750px\"></Image>\n * </View>\n * @name Image\n * @param {string} name name of image tag\n * @param {string} value value\n * @param {string=} [width=100%] image width\n * @param {string=} [maxWidth=750px] image maximum width\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  resize: types.maybeNull(types.string),\n  width: types.optional(types.string, \"100%\"),\n  maxwidth: types.optional(types.string, \"750px\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"image\",\n    _value: types.optional(types.string, \"\"),\n    stageWidth: types.optional(types.integer, 1),\n    stageHeight: types.optional(types.integer, 1),\n    naturalWidth: types.optional(types.integer, 1),\n    naturalHeight: types.optional(types.integer, 1),\n    selectedShape: types.safeReference(types.union(RectRegionModel, PolygonRegionModel)),\n    activePolygon: types.maybeNull(types.safeReference(PolygonRegionModel)),\n    shapes: types.array(types.union(RectRegionModel, PolygonRegionModel), []),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    controlButton() {\n      const names = self.completion.toNames.get(self.name);\n      return names[0];\n    },\n\n    controlButtonType() {\n      const name = self.controlButton();\n      return getType(name).name;\n    },\n\n    // get editor() {\n    //     try {\n    //         return getParentOfType(self, ImageEditorModel);\n    //     } catch (err) {\n    //         return null;\n    //     }\n    // },\n\n    // get isInsideEditor() {\n    //     return (self.editor !== null);\n    // }\n  }))\n  .actions(self => ({\n    setActivePolygon(poly) {\n      self.activePolygon = poly;\n    },\n\n    updateIE(ev) {\n      const { width, height, naturalWidth, naturalHeight } = ev.target;\n\n      if (self.hasStates) {\n        self.naturalWidth = naturalWidth;\n        self.naturalHeight = naturalHeight;\n        self.stageWidth = width;\n        self.stageHeight = height;\n\n        // const IE = getParentOfType(self, ImageEditorModel);\n        // IE.updateStageSize(width, height);\n        self.shapes.forEach(s => s.updateImageSize(width / naturalWidth, height / naturalHeight, width, height));\n      }\n    },\n\n    _setStageRef(ref) {\n      self._stageRef = ref;\n    },\n\n    _deleteSelectedShape() {\n      if (self.selectedShape) destroy(self.selectedShape);\n    },\n\n    setSelected(shape) {\n      self.selectedShape = shape;\n    },\n\n    _addShape(shape) {\n      self.shapes.push(shape);\n      self.completion.addRegion(shape);\n      self.setSelected(shape.id);\n      shape.selectRegion();\n    },\n\n    onImageClick(ev) {\n      // console.log(self.controlButton());\n      if (self.controlButtonType() === \"RectangleModel\") {\n        self._addRect(ev);\n      } else if (self.controlButtonType() === \"PolygonModel\") {\n        self._addPoly(ev);\n      } else if (self.controlButtonType() === \"PolygonLabelsModel\") {\n        if (self.activePolygon && !self.activePolygon.closed) {\n          self._addPoly(ev);\n        } else {\n          const states = self.completion.toNames.get(self.name);\n          const activeStates = states ? states.filter(c => c.isSelected == true) : null;\n          const clonedStates = activeStates ? activeStates.map(s => cloneNode(s)) : null;\n\n          if (clonedStates.length === 0) return;\n\n          self._addPoly(ev, clonedStates);\n\n          activeStates && activeStates.forEach(s => s.unselectAll());\n        }\n      } else if (self.controlButtonType() === \"RectangleLabelsModel\") {\n        const states = self.completion.toNames.get(self.name);\n        const activeStates = states ? states.filter(c => c.isSelected === true) : null;\n        const clonedStates = activeStates ? activeStates.map(s => cloneNode(s)) : null;\n\n        // don't allow to add RectangleLabel when there is no label selected\n        if (clonedStates.length === 0) return;\n\n        self._addRect(ev, clonedStates);\n\n        activeStates && activeStates.forEach(s => s.unselectAll());\n      }\n    },\n\n    _addRect(ev, states) {\n      // const _states = self.activeStates();\n      // const states = (_states) ? _states.map(s => cloneNode(s)) : null;\n      // const states = null;\n\n      // const image = self.completion.names.get(self.toname);\n\n      const iw = 200;\n      const ih = 200;\n\n      // console.log(states.toJSON());\n\n      // based on image width and height we can place rect somewhere\n      // in the center\n      const sw = 100;\n      const sh = 100;\n      // const name = guidGenerator();\n\n      let stroke = self.controlButton().rectstrokecolor;\n      // let stroke = self.editor.rectstrokecolor;\n      // const states = self.states;\n      // TODO you may need to filter this states, check Text.js\n      if (states && states.length) {\n        // console.log(states[0].toJSON());\n        // console.log(states);\n        stroke = states[0].getSelectedColor();\n      }\n\n      const wp = self.stageWidth / self.naturalWidth;\n      const hp = self.stageHeight / self.naturalHeight;\n\n      const wx = ev.evt.offsetX;\n      const wy = ev.evt.offsetY;\n\n      self.__addRect(Math.floor(wx - sw / 2), Math.floor(wy - sh / 2), sw, sh, stroke, states);\n    },\n\n    __addRect(x, y, sw, sh, stroke, states, coordstype) {\n      const c = self.controlButton();\n      const rect = RectRegionModel.create({\n        id: guidGenerator(),\n\n        x: x,\n        y: y,\n\n        width: sw,\n        height: sh,\n\n        opacity: parseFloat(c.opacity),\n        fillcolor: c.fillcolor,\n\n        strokewidth: parseInt(c.strokewidth),\n        strokecolor: stroke,\n\n        states: states,\n\n        coordstype: coordstype,\n      });\n\n      self._addShape(rect);\n    },\n\n    _addPoly(ev, states) {\n      let poly;\n      const w = 10;\n\n      if (self.activePolygon && self.activePolygon.closed) {\n        self.setActivePolygon(null);\n        return;\n      }\n\n      if (self.completion.dragMode === false) {\n        if (self.activePolygon) {\n          poly = self.activePolygon;\n        } else {\n          const c = self.controlButton();\n          poly = PolygonRegionModel.create({\n            id: guidGenerator(),\n            x: ev.evt.offsetX - w / 2,\n            y: ev.evt.offsetY - w / 2,\n            width: w,\n            height: w,\n\n            opacity: parseFloat(c.opacity),\n            fillcolor: c.fillcolor,\n\n            strokewidth: parseInt(c.strokewidth),\n            strokecolor: c.strokecolor,\n\n            pointsize: c.pointsize,\n            pointstyle: c.pointstyle,\n\n            states: states,\n          });\n\n          self.setActivePolygon(poly);\n\n          self.shapes.push(poly);\n          self.completion.addRegion(poly);\n\n          // self._addShape(poly);\n        }\n\n        poly.addPoint(ev.evt.offsetX - w / 2, ev.evt.offsetY - w / 2);\n\n        const stage = self._stageRef;\n        stage.container().style.cursor = \"default\";\n      }\n    },\n\n    toStateJSON() {\n      return self.shapes.map(r => r.toStateJSON());\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const params = [\"choices\", \"shape\", \"rectanglelabels\"];\n\n      params.forEach(item => {\n        if (!item in obj.value) {\n          throw new Error(\"Not valid param\");\n        }\n      });\n\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.rectanglelabels) {\n        const states = restoreNewsnapshot(fromModel);\n\n        states.fromStateJSON(obj);\n\n        self.__addRect(\n          obj.value.x,\n          obj.value.y,\n          obj.value.width,\n          obj.value.height,\n          states.getSelectedColor(),\n          [states],\n          \"perc\",\n        );\n      }\n\n      if (obj.value.shape) {\n        let modifySnap;\n        let shapeModel;\n\n        if (obj.from_name !== obj.to_name) {\n          modifySnap = restoreNewsnapshot(fromModel);\n          shapeModel = modifySnap.fromStateJSON(obj);\n          self.shapes.push(shapeModel);\n        }\n      }\n    },\n  }));\n\nconst ImageModel = types.compose(\n  \"ImageModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nclass TransformerComponent extends React.Component {\n  componentDidMount() {\n    this.checkNode();\n  }\n\n  componentDidUpdate() {\n    this.checkNode();\n  }\n\n  checkNode() {\n    // here we need to manually attach or detach Transformer node\n    const stage = this.transformer.getStage();\n    const { selectedShapeName } = this.props;\n\n    if (!selectedShapeName) {\n      this.transformer.detach();\n      this.transformer.getLayer().batchDraw();\n      return;\n    }\n\n    const selectedNode = stage.findOne(\".\" + selectedShapeName.id);\n    // do nothing if selected node is already attached\n    if (selectedNode === this.transformer.node()) {\n      return;\n    }\n\n    if (selectedNode) {\n      // attach to another node\n      this.transformer.attachTo(selectedNode);\n    } else {\n      // remove transformer\n      this.transformer.detach();\n    }\n    this.transformer.getLayer().batchDraw();\n  }\n\n  render() {\n    return (\n      <Transformer\n        resizeEnabled={true}\n        rotateEnabled={this.props.rotateEnabled}\n        anchorSize={8}\n        // borderEnabled={false}\n        // borderDash={[]}\n        // anchorCornerRadius={5}\n        // enabledAnchors={['top-left', 'top-right', 'bottom-left', 'bottom-right']}\n        ref={node => {\n          this.transformer = node;\n        }}\n      />\n    );\n  }\n}\n\nclass HtxImageView extends Component {\n  handleDblClick = ev => {\n    // const item = this.props.item;\n    // const poly = item.activePolygon;\n    // if (poly)\n    //     poly.closePoly();\n    // item.setActivePolygon(null);\n  };\n\n  handleOnClick = ev => {\n    const { item } = this.props;\n\n    // TODO this is a hack, for some reason stopPropagation is not\n    // working. And when you try to select a Rectangle the event\n    // propagates to Image as well. Which calls this function even\n    // if you click inside Rectangle. Current workaround is to\n    // check if our click lands inside the Rectangle/Polygon or\n    // not :-/\n    // const { offsetX, offsetY } = ev.evt;\n    // const shape = item.shapes.find(sh => sh.coordsInside(offsetX, offsetY));\n\n    // if (shape)\n    //     return;\n\n    return item.onImageClick(ev);\n  };\n\n  handleStageMouseDown = e => {\n    if (e.target === e.target.getStage()) {\n      return;\n    }\n\n    // clicked on transformer - do nothing\n    const clickedOnTransformer = e.target.getParent().className === \"Transformer\";\n    if (clickedOnTransformer) {\n      return;\n    }\n  };\n\n  render() {\n    // const width = 750;\n    const { item, store } = this.props;\n\n    // TODO fix me\n    if (!store.task) return null;\n\n    const divStyle = {};\n    const style = {\n      width: item.width,\n      maxWidth: item.maxwidth,\n    };\n\n    if (item.resize) {\n      style[\"transform\"] = \"scale(\" + item.resize + \", \" + item.resize + \")\";\n    }\n\n    if (item.hasStates) {\n      divStyle[\"position\"] = \"absolute\";\n      // const rotateEnabled = (item.editor.rectcanrotate == \"true\") ? true : false;\n      const rotateEnabled = item.controlButton().canrotate === \"true\" ? true : false;\n\n      return (\n        <div style={{ marginBottom: \"1em\", marginTop: \"1em\" }}>\n          <div style={divStyle}>\n            <img style={style} src={item._value} onLoad={item.updateIE} />\n          </div>\n          <Stage\n            ref={ref => {\n              item._setStageRef(ref);\n            }}\n            width={item.stageWidth}\n            height={item.stageHeight}\n            onDblClick={this.handleDblClick}\n            onClick={this.handleOnClick}\n            onMouseDown={this.handleStageMouseDown}\n          >\n            <Layer>\n              {item.shapes.map(s => {\n                return Tree.renderItem(s);\n              })}\n              <TransformerComponent rotateEnabled={rotateEnabled} selectedShapeName={this.props.item.selectedShape} />\n            </Layer>\n          </Stage>\n        </div>\n      );\n    } else {\n      divStyle[\"marginTop\"] = \"1em\";\n      return (\n        <div style={divStyle}>\n          <img style={style} src={item._value} onLoad={item.updateIE} />\n        </div>\n      );\n    }\n  }\n}\n\nconst HtxImage = inject(\"store\")(observer(HtxImageView));\n\nRegistry.addTag(\"image\", ImageModel, HtxImage);\n\nexport { ImageModel, HtxImage };\n","/**\n * Class for text data with 4 params:\n * start -> int: the index of the character where the range start.\n * end -> int: the index of the character where the range stop.\n * text -> string: the highlighted text.\n * data -> object: extra data (the props of the highlight component)\n */\nexport default class Range {\n  constructor(start, end, text, data = {}) {\n    this.start = start;\n    this.end = end;\n    this.text = text;\n    this.data = data;\n  }\n}\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nexport default class TextNode extends Component {\n  render() {\n    return (\n      <span\n        data-position={this.props.position}\n        overlap={this.props.overlap}\n        key={this.props.keyNode ? this.props.keyNode : null}\n        style={this.props.style}\n      >\n        {this.props.children}\n      </span>\n    );\n  }\n}\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Utils from \"../../utils\";\nimport TextNode from \"../TextNode/TextNode\";\n\nconst HtxTextNodeView = ({ store, range, id, highlightStyle, style, charIndex, children, overlap }) => {\n  const getStyle = range => (range ? highlightStyle : style);\n  const getRangeKey = () => `${id}-${range.start}-${charIndex}`;\n  const getNormalKey = () => `${id}-${charIndex}`;\n  const getKey = range => (range ? getRangeKey() : getNormalKey());\n\n  let wrapper = (\n    <span data-position={charIndex} key={getKey(range)} style={getStyle(range)}>\n      {children}\n    </span>\n  );\n\n  if (overlap && overlap.length) {\n    let bg;\n\n    if (range.states) {\n      range.states.map(i => {\n        bg = Utils.Colors.convertToRGBA(i.getSelectedColor(), 0.3);\n      });\n    }\n\n    store.completionStore.selected.regionStore.regions.map(i => {\n      if (i.selected) {\n        overlap.map(overlapItem => {\n          if (overlapItem === i.id) {\n            bg = \"#ff4d4f\";\n          }\n        });\n      }\n\n      if (i.highlighted && overlap.includes(i.id)) {\n        bg = \"#ff4d4f\";\n      }\n    });\n\n    wrapper = overlap.reduceRight((value, key) => {\n      return (\n        <TextNode\n          style={{ background: bg, padding: \"2px 0\" }}\n          position={charIndex}\n          overlap={key}\n          keyNode={getKey(range)}\n        >\n          {value}\n        </TextNode>\n      );\n    }, children);\n  }\n\n  return wrapper;\n};\n\nconst HtxTextNode = inject(\"store\")(observer(HtxTextNodeView));\nexport { HtxTextNode };\n","import React from \"react\";\nimport { HtxTextNode } from \"./Node\";\n\n/**\n * Node for URL\n * @param {*} props\n */\nconst UrlNode = props => {\n  const style = { wordWrap: \"break-word\" };\n\n  return (\n    <HtxTextNode\n      id={props.id}\n      highlightStyle={Object.assign({}, style, props.highlightStyle)}\n      charIndex={props.charIndex}\n      range={props.range}\n      overlap={props.overlap}\n      style={style}\n    >\n      <a data-position={props.charIndex + props.url.length} href={props.url} target=\"blank\">\n        {props.url}\n      </a>\n    </HtxTextNode>\n  );\n};\n\nexport default UrlNode;\n","import React from \"react\";\nimport { HtxTextNode } from \"./Node\";\n\n/**\n * Node for Emoji\n * @param {*} props\n */\nconst EmojiNode = props => {\n  return (\n    <HtxTextNode\n      id={props.id}\n      highlightStyle={props.highlightStyle}\n      charIndex={props.charIndex}\n      range={props.range}\n      overlap={props.overlap}\n    >\n      {`${props.text[props.charIndex]}${props.text[props.charIndex + 1]}`}\n    </HtxTextNode>\n  );\n};\n\nexport default EmojiNode;\n","import emojiRegex from \"emoji-regex\";\nimport React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport Utils from \"../../utils\";\nimport Range from \"./Range\";\nimport { HtxTextNode } from \"./Node\";\nimport UrlNode from \"./UrlNode\";\nimport EmojiNode from \"./EmojiNode\";\nimport styles from \"./TextHighlight.module.scss\";\n\nclass TextHighlight extends Component {\n  constructor() {\n    super();\n\n    this.dismissMouseUp = 0;\n  }\n\n  /**\n   * Return first ok element\n   */\n  getRange(charIndex) {\n    if (this.props.ranges && this.props.ranges.length) {\n      return this.props.ranges.find(range => charIndex >= range.start && charIndex <= range.end);\n    }\n  }\n\n  /**\n   * Function when the user mouse is over an highlighted text\n   */\n  onMouseOverHighlightedWord(range, visible) {\n    if (visible && this.props.onMouseOverHighlightedWord) {\n      this.props.onMouseOverHighlightedWord(range);\n    }\n  }\n\n  getLetterNode(charIndex, range) {\n    /**\n     * Current symbol\n     */\n    const char = this.props.text[charIndex];\n\n    let nl;\n\n    /**\n     * Line break\n     */\n    if (char && char.charCodeAt()) {\n      nl = char.charCodeAt(0) === 10;\n    }\n\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <HtxTextNode\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        charIndex={charIndex}\n        key={`${this.props.id}-${charIndex}`}\n        highlightStyle={this.props.highlightStyle}\n        // style={{padding: \"2px 0\", background: \"linear-gradient(180deg, #fdcd3b 60%, #ffed4b 60%, red 9%)\"}}\n      >\n        {nl ? <br /> : char}\n      </HtxTextNode>\n    );\n  }\n\n  getEmojiNode(charIndex, range) {\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <EmojiNode\n        text={this.props.text}\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        key={`${this.props.id}-emoji-${charIndex}`}\n        charIndex={charIndex}\n        highlightStyle={this.props.highlightStyle}\n      />\n    );\n  }\n\n  getUrlNode(charIndex, range, url) {\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <UrlNode\n        url={url}\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        key={`${this.props.id}-url-${charIndex}`}\n        charIndex={charIndex}\n        highlightStyle={this.props.highlightStyle}\n      />\n    );\n  }\n\n  mouseEvent() {\n    if (!this.props.enabled) {\n      return false;\n    }\n\n    let text = \"\";\n\n    if (window.getSelection) {\n      /**\n       * Get highlited text\n       * Tip: with helper elements (hints)\n       */\n      // text = window.getSelection().toString();\n\n      if (window.getSelection().type === \"None\") return;\n\n      /**\n       * Create clone range\n       */\n      let cloneCont = window\n        .getSelection()\n        .getRangeAt(0)\n        .cloneRange();\n\n      /**\n       * The Range.cloneContents() returns a DocumentFragment copying the objects of type Node included in the Range.\n       */\n      let selectionContents = cloneCont.cloneContents();\n      /**\n       * Create virtual div with text\n       */\n      let virtualDiv = document.createElement(\"div\");\n\n      virtualDiv.appendChild(selectionContents);\n\n      let elementsWithSup = virtualDiv.getElementsByTagName(\"sup\");\n\n      if (elementsWithSup.length > 0) {\n        for (let i = 0; i < elementsWithSup.length; i++) {\n          elementsWithSup[i].innerText = \"\";\n        }\n        text = virtualDiv.innerText;\n      } else {\n        text = virtualDiv.innerText;\n      }\n    } else if (document.selection && document.selection.type !== \"Control\") {\n      text = document.selection.createRange().text;\n    }\n\n    if (!text || !text.length) return false;\n\n    const range = window.getSelection().getRangeAt(0);\n\n    /**\n     * Check for hint\n     */\n    if (range.startContainer.parentNode.dataset.hint || range.endContainer.parentNode.dataset.hint) return;\n\n    /**\n     * Start position of selected item\n     */\n    const startContainerPosition = parseInt(range.startContainer.parentNode.dataset.position);\n    /**\n     * End position of selected item\n     */\n    const endContainerPosition = parseInt(range.endContainer.parentNode.dataset.position);\n\n    let startHL = startContainerPosition < endContainerPosition ? startContainerPosition : endContainerPosition;\n    let endHL = startContainerPosition < endContainerPosition ? endContainerPosition : startContainerPosition;\n\n    const rangeObj = new Range(startHL, endHL, text, {\n      ...this.props,\n      ranges: undefined,\n    });\n\n    this.props.onTextHighlighted(rangeObj);\n  }\n\n  /**\n   *\n   * @param {*} event\n   */\n  onMouseUp(event) {\n    this.mouseEvent.bind(this)();\n\n  }\n\n  onMouseDown(event) {\n    // console.log(event)\n  }\n\n  onMouseEnter(event) {\n    // console.log(event)\n  }\n\n  /**\n   * Double click on text\n   * @param {*} event\n   */\n  onDoubleClick(event) {\n    // WARN\n    // event.stopPropagation();\n    // this.doucleckicked = true;\n    // this.mouseEvent.bind(this)();\n  }\n\n  /**\n   * @param {object} letterGroup All marked sections of text\n   * @param {object} range Range of marked section\n   * @param {number} textCharIndex The last number of selection\n   * @param {function} onMouseOverHighlightedWord\n   */\n  rangeRenderer(letterGroup, range, textCharIndex, onMouseOverHighlightedWord) {\n    if (this.props.rangeRenderer) {\n      return this.props.rangeRenderer(letterGroup, range, textCharIndex, onMouseOverHighlightedWord);\n    }\n\n    return letterGroup;\n  }\n\n  getNode(i, range, text, url, isEmoji) {\n    if (url.length) {\n      return this.getUrlNode(i, range, url);\n    } else if (isEmoji) {\n      return this.getEmojiNode(i, range);\n    }\n\n    return this.getLetterNode(i, range);\n  }\n\n  getRanges() {\n    /**\n     * Text with nodes\n     */\n    const newText = [];\n\n    let lastRange;\n\n    /**\n     * For all the characters on the text\n     */\n    for (let textCharIndex = 0; textCharIndex < this.props.text.length; textCharIndex++) {\n      /**\n       * Get range text\n       */\n      const range = this.getRange(textCharIndex);\n\n      /**\n       * Check characters for URL\n       */\n      const url = Utils.Checkers.getUrl(textCharIndex, this.props.text);\n\n      /**\n       * Check characters for emoji\n       */\n      const isEmoji = emojiRegex().test(this.props.text[textCharIndex] + this.props.text[textCharIndex + 1]);\n\n      /**\n       * Get the current character node\n       */\n      const node = this.getNode(textCharIndex, range, this.props.text, url, isEmoji);\n\n      /**\n       * If the next node is an url one, we fast forward to the end of it\n       */\n      if (url.length) {\n        textCharIndex += url.length - 1;\n      } else if (isEmoji) {\n        /**\n         * Because an emoji is composed of 2 chars\n         */\n        textCharIndex++;\n      }\n\n      if (!range) {\n        newText.push(node);\n        continue;\n      }\n\n      /**\n       * If the char is in range\n       */\n      lastRange = range;\n\n      // console.log(this.props.text[lastRange.start], this.props.text[lastRange.end])\n\n      /**\n       * We put the first range node on the array\n       */\n      const letterGroup = [node];\n\n      /**\n       * For all the characters in the highlighted range\n       */\n      let rangeCharIndex = textCharIndex + 1;\n\n      // if (rangeCharIndex >= parseInt(range.start) && rangeCharIndex <= parseInt(range.end)) {\n      //   console.log(this.props.text[parseInt(range.end)])\n      // }\n      // console.log(textCharIndex, range.start, range.end)\n\n      for (; rangeCharIndex < parseInt(range.end) + 1; rangeCharIndex++) {\n        /**\n         * Emoji handler\n         */\n        const isEmoji = emojiRegex().test(`${this.props.text[rangeCharIndex]}${this.props.text[rangeCharIndex + 1]}`);\n\n        if (isEmoji) {\n          letterGroup.push(this.getEmojiNode(rangeCharIndex, range));\n          // Because an emoji is composed of 2 chars\n          rangeCharIndex++;\n        } else {\n          letterGroup.push(this.getLetterNode(rangeCharIndex, range));\n        }\n\n        textCharIndex = rangeCharIndex;\n      }\n\n      newText.push(this.rangeRenderer(letterGroup, range, textCharIndex, this.onMouseOverHighlightedWord.bind(this)));\n    }\n\n    if (lastRange) {\n      // Callback function\n      this.onMouseOverHighlightedWord(lastRange, true);\n    }\n\n    return newText;\n  }\n\n  render() {\n    const newText = this.getRanges();\n\n    return (\n      <div\n        className={styles.block}\n        style={this.props.style}\n        onMouseUp={this.onMouseUp.bind(this)}\n        onMouseDown={this.onMouseDown.bind(this)}\n        onMouseEnter={this.onMouseEnter.bind(this)}\n        onDoubleClick={this.onDoubleClick.bind(this)}\n      >\n        {newText}\n      </div>\n    );\n  }\n}\n\nexport default observer(TextHighlight);\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { TextModel } from \"./Text\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport Hint from \"../../components/Hint/Hint\";\nimport Utils from \"../../utils\";\n\nimport styles from \"./TextRegion/TextRegion.module.scss\";\n\nconst Model = types\n  .model(\"TextRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"textrange\",\n    start: types.integer,\n    end: types.integer,\n    text: types.string,\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel))),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    highlightStates() {},\n\n    /**\n     *\n     */\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.pid,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"region\",\n          // text: parent.text,\n          value: {\n            start: self.start,\n            end: self.end,\n            text: self.text,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst TextRegionModel = types.compose(\n  \"TextRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\n/**\n * Region state hint\n * @param {*} props\n */\nconst RegionState = props => {\n  const localState = props.state;\n\n  /**\n   * Get name of label\n   */\n  const selectedString = localState.getSelectedString();\n  const selectedColor = Utils.Colors.convertToRGBA(localState.getSelectedColor(), 0.3);\n  let style = {\n    background: selectedColor,\n  };\n\n  if (props.style) style = { ...style, outline: props.style.outline };\n\n  return (\n    <Hint className={styles.state} style={style}>\n      <span data-hint={true}>&nbsp;[{selectedString}]</span>\n    </Hint>\n  );\n};\n\nconst HtxTextRegionView = ({ store, item, letterGroup, range, textCharIndex, onMouseOverHighlightedWord }) => {\n  /**\n   * Get color of label\n   */\n  let labelColor = \"rgba(0, 0, 255, 0.1)\";\n\n  if (range.states) {\n    labelColor = range.states.map(s => {\n      return s.getSelectedColor();\n    });\n  }\n\n  /**\n   * TODO\n   * Update function to all formats\n   */\n  if (labelColor.length !== 0) {\n    labelColor = Utils.Colors.convertToRGBA(labelColor[0], 0.3);\n  }\n\n  let markStyle = {\n    padding: \"2px 0px\",\n    position: \"relative\",\n    borderRadius: \"2px\",\n    cursor: store.completionStore.selected.relationMode ? \"crosshair\" : \"pointer\",\n  };\n\n  let regionStates = [];\n\n  if ((range.states && range.states.length) > 0) {\n    range.states.map(state => {\n      regionStates.push(\n        <RegionState\n          key={range.id}\n          state={state}\n          bg={labelColor}\n          hover={store.completionStore.selected.relationMode ? true : false}\n          selected={range.selected}\n          style={range.highlighted ? { outline: \"2px solid red\" } : null}\n        />,\n      );\n    });\n  }\n\n  /**\n   * Without label\n   */\n  if (!regionStates.length) {\n    markStyle = {\n      ...markStyle,\n      background: \"rgba(0, 0, 255, 0.1)\",\n    };\n  }\n\n  return (\n    <span\n      style={markStyle}\n      onClick={range.onClickRegion}\n      onMouseOver={() => {\n        if (store.completionStore.selected.relationMode) {\n          range.setHighlight(true);\n        }\n      }}\n      onMouseOut={() => {\n        if (store.completionStore.selected.relationMode) {\n          range.setHighlight(false);\n        }\n      }}\n    >\n      {letterGroup}\n      {regionStates}\n    </span>\n  );\n};\n\nconst HtxTextRegion = inject(\"store\")(observer(HtxTextRegionView));\n\nRegistry.addTag(\"textrange\", TextRegionModel, HtxTextRegion);\n\nexport { TextRegionModel, HtxTextRegion };\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getType, getRoot } from \"mobx-state-tree\";\n\nimport { cloneNode } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport TextHighlight from \"../../components/TextHighlight/TextHighlight\";\nimport { runTemplate } from \"../../core/Template\";\nimport { TextRegionModel, HtxTextRegion } from \"./TextRegion\";\n\n/**\n * Text tag, show text box\n * @example\n * <Text name=\"text-1\" value=\"$text\"></Text>\n * @name Text\n * @param {string} name of group\n * @param {string} value\n * @param {boolean} selelectwithoutlabel\n */\nconst TagAttrs = types.model(\"TextModel\", {\n  name: types.maybeNull(types.string),\n  // text: types.maybeNull(types.optional(types.string, \"Please set \\\"value\\\" attribute of Text\")),\n  value: types.maybeNull(types.string),\n  selelectwithoutlabel: types.optional(types.string, \"false\"),\n\n  hidden: types.optional(types.enumeration([\"true\", \"false\"]), \"false\"),\n  /**\n   * If we allow selecting parts of words of we select whole word only\n   */\n  adjustselection: types.optional(types.string, \"true\"),\n  selectionenabled: types.optional(types.string, \"true\"),\n});\n\nconst Model = types\n  .model(\"TextModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"text\",\n    regions: types.array(TextRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states\n        ? states.filter(s => s.isSelected && (getType(s).name === \"LabelsModel\" || getType(s).name === \"RatingModel\"))\n        : null;\n    },\n  }))\n  .actions(self => ({\n    remove() {\n      // if (self.generated) {\n      //     const m = Registry.getModelByTag('textarea');\n      //     const ta = getParentOfType(self, m);\n      //     ta.deleteText(self);\n      // }\n    },\n\n    findRegion(start, end) {\n      const immutableRange = self.regions.find(r => r.start === start && r.end === end);\n      return immutableRange;\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj);\n    },\n\n    _addRegion(params) {\n      const r = TextRegionModel.create(params);\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(range) {\n      const states = self.activeStates();\n      const clonedStates = states\n        ? states.map(s => {\n            return cloneNode(s);\n          })\n        : null;\n\n      /**\n       * Selelect without label\n       * Default: false\n       */\n      if (self.selelectwithoutlabel === \"false\" && !clonedStates.length) return null;\n\n      const r = self._addRegion({\n        start: range.start,\n        end: range.end,\n        text: range.text,\n        states: clonedStates, // tl.cloneActiveStates()\n      });\n\n      states &&\n        states.forEach(s => {\n          return s.unselectAll();\n        });\n\n      return r;\n    },\n\n    /**\n     * Return JSON\n     */\n    toStateJSON() {\n      const objectsToReturn = self.regions.map(r => r.toStateJSON());\n      return objectsToReturn;\n    },\n\n    /**\n     *\n     * @param {*} obj\n     * @param {*} fromModel\n     */\n    fromStateJSON(obj, fromModel) {\n      let r;\n\n      const tree = {\n        pid: obj.id,\n        start: obj.value.start,\n        end: obj.value.end,\n        text: obj.value.text,\n        normalization: obj.normalization,\n      };\n\n      if (fromModel.type === \"choices\") {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n        return;\n      }\n\n      if (obj.from_name === obj.to_name) {\n        r = self._addRegion(tree);\n      } else {\n        const region = self.findRegion(obj.value.start, obj.value.end);\n        const m = restoreNewsnapshot(fromModel);\n\n        // update state\n        m.fromStateJSON(obj);\n\n        if (!region) {\n          tree.states = [m];\n          r = self._addRegion(tree);\n        } else {\n          region.states.push(m);\n        }\n      }\n\n      return r;\n    },\n  }));\n\nconst TextModel = types.compose(\n  \"TextModel\",\n  TagAttrs,\n  Model,\n);\n\nclass HtxTextView extends Component {\n  renderRegion(letterGroup, range, textCharIndex, onMouseOverHighlightedWord) {\n    return (\n      <HtxTextRegion\n        key={range.id}\n        store={this.props.store}\n        item={this.props.item}\n        letterGroup={letterGroup}\n        range={range}\n        selected={range.selected}\n        textCharIndex={textCharIndex}\n        onMouseOverHighlightedWord={onMouseOverHighlightedWord}\n      />\n    );\n  }\n\n  render() {\n    const self = this;\n\n    const { store, item } = this.props;\n      const style = {};\n      if (item.hidden == \"true\")\n          style[\"display\"] = \"none\";\n\n      return (\n              <div style={style}>\n      <TextHighlight\n        id={item.id}\n        key={item.id}\n        text={item._value}\n        enabled={item.selectionenabled === \"true\" ? true : false}\n        ranges={item.regions}\n        adjustSelection={item.adjustselection}\n        rangeRenderer={self.renderRegion.bind(this)}\n        onTextHighlighted={range => {\n          item.addRegion(range);\n        }}\n              />\n              </div>\n    );\n  }\n}\n\nconst HtxText = inject(\"store\")(observer(HtxTextView));\n\nRegistry.addTag(\"text\", TextModel, HtxText);\n\nexport { TextModel, HtxText };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Tag } from \"antd\";\n\nimport styles from \"./Dialog.module.scss\";\n\nexport default class DialogView extends React.Component {\n  render() {\n    let selectedStyle = `${styles.block}`;\n    let test;\n\n    if (this.props.selected) {\n      selectedStyle = `${selectedStyle} ${styles.block_selected}`;\n      test = <Tag color=\"magenta\">Select Message</Tag>;\n    }\n\n    return (\n      <div className={selectedStyle}>\n        <div className={styles.tag}>{test}</div>\n        <span className={styles.name}>{this.props.name}:&nbsp;</span>\n        <p className={styles.text}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nDialogView.propTypes = {\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  selected: PropTypes.bool,\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../../utils/unique\";\nimport Registry from \"../../core/Registry\";\nimport DialogView from \"../../components/Dialog/Dialog\";\nimport { runTemplate } from \"../../core/Template\";\n\n/**\n * Dialog Tag. Render dialog\n * @example\n * <View>\n *  <Dialog name=\"dialog\" value=\"$dialog\"></Dialog>\n * <View>\n * @param {string} name\n * @param {object} value\n *\n * Example of data:\n * dialog: [\n    {\n      name: \"Alice\",\n      text: \"Hey, Bob!\",\n    },\n    {\n      name: \"Bob\",\n      text: \"How a u, Alice?\",\n    },\n    {\n      name: \"Alice\",\n      text: \"Things are great\",\n      selected: true,\n    },\n  ],\n */\nconst Replica = types.model({\n  name: types.string,\n  text: types.string,\n  selected: types.optional(types.boolean, false),\n});\n\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"Dialog\",\n    data: types.array(Replica),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }));\n\nconst DialogModel = types.compose(\n  \"DialogModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxDialogView = observer(({ store, item }) => {\n  let result = [];\n\n  // console.log(runTemplate(item.value, store.task.dataObj));\n\n  // return <div dangerouslySetInnerHTML={{ __html: runTemplate(item.value, store.task.dataObj) }} />;\n\n  if (!store.task.dataObj.dialog) {\n    return \"NOT DIALOG DATA\";\n  }\n\n  store.task.dataObj.dialog.forEach((item, ind) => {\n    result.push(<DialogView key={ind} name={item.name} text={item.text} selected={item.selected} />);\n  });\n\n  return <div style={{ display: \"flex\", flexFlow: \"column\" }}>{result}</div>;\n});\n\nconst HtxDialog = inject(\"store\")(observer(HtxDialogView));\n\nRegistry.addTag(\"dialog\", DialogModel, HtxDialog);\n\nexport { DialogModel, HtxDialog };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType } from \"mobx-state-tree\";\nimport { Checkbox, Form } from \"semantic-ui-react\";\n\nimport { ChoicesModel } from \"./Choices\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\n\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\nimport Hint from \"../../components/Hint/Hint\";\n\n/**\n * Choice tag, represents single choice\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single\">\n *     <Choice alias=\"M\" value=\"Male\"></Choice>\n *     <Choice alias=\"F\" value=\"Female\"></Choice>\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\"></Text>\n * </View>\n * @name Choice\n * @param {string} value label value\n * @param {boolean=} selected If this label should be preselected\n * @param {string=} alias label alias\n * @param {string=} hotkey hokey\n */\nconst TagAttrs = types.model({\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  style: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"choice\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get isCheckbox() {\n      const choice = getParentOfType(self, ChoicesModel).choice;\n      return choice === \"multiple\" || choice === \"single\";\n    },\n\n    get name() {\n      return getParentOfType(self, ChoicesModel).name;\n    },\n  }))\n  .actions(self => ({\n    toggleSelected() {\n      const choice = getParentOfType(self, ChoicesModel);\n\n      choice.shouldBeUnselected && choice.unselectAll();\n\n      self.markSelected(!self.selected);\n    },\n\n    markSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst ChoiceModel = types.compose(\n  \"ChoiceModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxChoice = inject(\"store\")(\n  observer(({ item, store }) => {\n    let style = {};\n\n    if (item.style) style = Tree.cssConverter(item.style);\n\n    if (item.isCheckbox) {\n      const cStyle = Object.assign({ marginRight: \"1em\", display: \"flex\", alignItems: \"center\" }, style);\n\n      return (\n        <div style={cStyle}>\n          <Checkbox\n            name={item._value}\n            label={item._value}\n            onChange={ev => {\n              item.toggleSelected();\n            }}\n            checked={item.selected}\n          />\n          {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n        </div>\n      );\n    } else {\n      const label = (\n        <label>\n          {item._value}\n          {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n        </label>\n      );\n\n      return (\n        <div style={style}>\n          <Form.Radio\n            label={label}\n            value={item._value}\n            style={{ display: \"inline-block\" }}\n            checked={item.selected}\n            onChange={ev => {\n              item.toggleSelected();\n            }}\n          />\n        </div>\n      );\n    }\n    // return (\n    //   <Choice\n    //     name={item._value}\n    //     onChange={ev => {\n    //       item.toggleSelected();\n    //     }}\n    //     hint={store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && `${item.hotkey}`}\n    //     value={item._value}\n    //     checked={item.selected}\n    //   >\n    //     {item._value}\n    //   </Choice>\n    // );\n  }),\n);\n\nRegistry.addTag(\"choice\", ChoiceModel, HtxChoice);\n\nexport { HtxChoice, ChoiceModel };\n","import React, { Component } from \"react\";\n\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\n\nimport { ChoiceModel } from \"./Choice\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { Form } from \"semantic-ui-react\";\n\n/**\n * Choices tag, create group of choices, radio or checkboxes\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single-radio\">\n *     <Choice alias=\"M\" value=\"Male\"></Choice>\n *     <Choice alias=\"F\" value=\"Female\"></Choice>\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\"></Text>\n * </View>\n * @name Choices\n * @param {string} name of group\n * @param {string} toName name of element that you want to label\n * @param {single|single-radio|multiple=} [choice=single] one or more\n * @param {boolean} showInline\n */\nconst TagAttrs = types.model({\n  name: types.string,\n  toname: types.maybeNull(types.string),\n  showinline: types.optional(types.string, \"false\"),\n  choice: types.optional(types.enumeration([\"single\", \"single-radio\", \"multiple\"]), \"single\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"choices\",\n    children: Types.unionArray([\"choice\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\" || self.choice === \"single-radio\";\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      const names = self.getSelectedNames();\n\n      if (names && names.length) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            choices: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.choices) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.choices.forEach(l => {\n        const choice = self.findLabel(l);\n        if (!choice) throw new Error(\"No label \" + l);\n\n        choice.markSelected(true);\n      });\n    },\n  }));\n\nconst ChoicesModel = types.compose(\n  \"ChoicesModel\",\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\n\nconst HtxChoices = observer(({ item }) => {\n  return (\n    <div style={{ marginTop: \"1em\" }}>\n      <Form>\n        {item.showinline === \"true\" ? (\n          <Form.Group inline>{Tree.renderChildren(item)}</Form.Group>\n        ) : (\n          <Form.Group grouped>{Tree.renderChildren(item)}</Form.Group>\n        )}\n      </Form>\n    </div>\n  );\n});\n\nRegistry.addTag(\"choices\", ChoicesModel, HtxChoices);\n\nexport { HtxChoices, ChoicesModel, TagAttrs };\n","import React, { createRef, Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Message, Icon, Popup, Button, Dropdown, Input } from \"semantic-ui-react\";\n\nimport Types from \"../../core/Types\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport { TextAreaModel } from \"../control/TextArea\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model(\"TextAreaRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"textarearegion\",\n\n    _value: types.string,\n    // states: types.array(types.union(LabelsModel, ChoicesModel)),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextAreaModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }));\n\nconst TextAreaRegionModel = types.compose(\n  \"TextAreaRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxTextAreaRegionView = ({ store, item }) => {\n  let markStyle = {\n    cursor: store.completionStore.selected.relationMode ? \"crosshair\" : \"pointer\",\n  };\n\n  if (item.selected) {\n    markStyle = {\n      ...markStyle,\n      border: \"1px solid red\",\n    };\n  } else if (item.highlighted) {\n    markStyle = {\n      ...markStyle,\n      border: \"2px solid red\",\n    };\n  }\n\n  return (\n    <Message\n      className=\"warning\"\n      style={markStyle}\n      onClick={item.onClickRegion}\n      onMouseOver={() => {\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(true);\n        }\n      }}\n      onMouseOut={() => {\n        /* range.setHighlight(false); */\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(false);\n        }\n      }}\n    >\n      <p>{item._value}</p>\n    </Message>\n  );\n};\n\nconst HtxTextAreaRegion = inject(\"store\")(observer(HtxTextAreaRegionView));\n\nRegistry.addTag(\"textarearegion\", TextAreaRegionModel, HtxTextAreaRegion);\n\nexport { TextAreaRegionModel, HtxTextAreaRegion };\n","import React, { Component } from \"react\";\n\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, destroy, getEnv, flow, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Form, Message } from \"semantic-ui-react\";\n\nimport { renderChildren } from \"../../core/Tree\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\nimport { HtxTextAreaRegion, TextAreaRegionModel } from \"../object/TextAreaRegion\";\n\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * TextArea tag, show textarea for user input\n * @example\n * <View>\n *   <TextArea name=\"ta\"></TextArea>\n * </View>\n * @name TextArea\n * @param {string} name\n * @param {string} toName name of element that you want to label\n * @param {string} value\n * @param {string=} label label text\n * @param {string=} placeholder placeholder text\n * @param {string=} maxSubmissions maximum number of submissions\n */\nconst TagAttrs = types.model({\n  allowSubmit: types.optional(types.string, \"true\"),\n  label: types.optional(types.string, \"\"),\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  placeholder: types.maybeNull(types.string),\n  maxsubmissions: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"textarea\",\n    regions: types.array(TextAreaRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get submissionsNum() {\n      return self.regions.length;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get showSubmit() {\n      if (self.maxsubmissions) {\n        const num = parseInt(self.maxsubmissions);\n        return self.submissionsNum < num;\n      } else {\n        return true;\n      }\n    },\n  }))\n  .actions(self => ({\n    setValue(value) {\n      self._value = value;\n    },\n\n    addText(text, pid) {\n      const r = TextAreaRegionModel.create({\n        pid: pid,\n        _value: text,\n      });\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    beforeSend() {\n      if (self._value && self._value.length) {\n        self.addText(self._value);\n      }\n    },\n\n    deleteText(text) {\n      destroy(text);\n    },\n\n    toStateJSON() {\n      const toname = self.toname || self.name;\n\n      return [\n        self.regions.map(r => {\n          return {\n            id: r.pid,\n            from_name: self.name,\n            to_name: toname,\n            type: self.type,\n            value: {\n              text: r._value,\n            },\n          };\n        }),\n      ];\n    },\n\n    fromStateJSON(obj, fromModel) {\n      return self.addText(obj.value.text, obj.id);\n    },\n  }));\n\nconst TextAreaModel = types.compose(\n  \"TextAreaModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxTextArea = observer(({ item }) => {\n  return (\n    <div>\n      {item.regions.length > 0 && (\n        <div style={{ marginTop: \"1em\", marginBottom: \"1em\" }}>\n          {item.regions.map(t => (\n            <HtxTextAreaRegion item={t} />\n          ))}\n        </div>\n      )}\n\n      {item.showSubmit && (\n        <Form\n          onSubmit={ev => {\n            if (item.allowSubmit === \"true\") {\n              item.addText(item._value);\n              item.setValue(\"\");\n            }\n\n            ev.preventDefault();\n            return false;\n          }}\n        >\n          <Form.Input\n            value={item._value}\n            className=\"is-search\"\n            label={item.label}\n            placeholder={item.placeholder}\n            onChange={ev => {\n              const { value } = ev.target;\n              item.setValue(value);\n            }}\n          />\n        </Form>\n      )}\n    </div>\n  );\n});\n\nRegistry.addTag(\"textarea\", TextAreaModel, HtxTextArea);\n\nexport { TextAreaModel, HtxTextArea };\n","import React from \"react\";\n\nimport Registry from \"../../core/Registry\";\nimport { types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { List } from \"semantic-ui-react\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { variableNotation } from \"../../core/Template\";\n\nconst ListItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * List element, used for ranking results. Great choice for recomendation systems.\n * @example\n * <View>\n *  <HyperText value=\"$markup\"></HyperText>\n *  <List name=\"ranker\" value=\"$replies\" elementValue=\"$text\" elementTag=\"Text\" ranked=\"true\" sortedHighlightColor=\"#fcfff5\"></List>\n * </View>\n * @name List\n * @param {string} elementValue lookup key for child object\n * @param {Text|Image|Audio} elementTag element used to render children\n * @param {string} value list value\n * @param {string} name of group\n * @param {string=} sortedHighlightColor color\n * @param {string=} axis axis used for drag-n-drop\n * @param {string=} lockAxis lock axis\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  // ranked: types.optional(types.string, \"true\"),\n  // sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"list\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(ListItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    addRegion(vals, idx) {\n      const reg = ListItemModel.create({\n        value: self.elementvalue,\n        idx: idx,\n        _value: variableNotation(self.elementvalue, vals[idx]),\n      });\n\n      self.regions.push(reg);\n    },\n\n    updateValue(store) {\n      const val = variableNotation(self.value, store.task.dataObj);\n\n      // in case we're in expert mode it will call updateValue\n      // on each new task loaded, therefore we need to remove\n      // previously loaded regions here\n      self.regions = [];\n      val.forEach((v, idx) => self.addRegion(val, idx));\n\n      val.forEach((v, idx) => {\n        v[\"_orig_idx\"] = idx;\n      });\n\n      self._value = val;\n      self.setUpdate();\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex === newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      const map = {};\n\n      self._value.forEach((v, idx) => {\n        map[self.regions[idx].idx] = 1 / (1 + idx);\n      });\n\n      const ranked = Object.keys(map)\n        .sort((a, b) => a - b)\n        .map(function(v) {\n          return map[v];\n        });\n\n      const selected = [];\n      for (let i = 0; i < Object.keys(map).length; i++) {\n        selected[self.regions[i].idx] = self.regions[i].selected ? 1 : 0;\n      }\n\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          weights: ranked,\n          selected: selected,\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const ranked = [];\n      const regions = [];\n      const item_weight = {};\n\n      obj.value.weights.forEach((v, idx) => {\n        if (item_weight[v]) {\n          item_weight[v].push(idx);\n        } else {\n          item_weight[v] = [idx];\n        }\n      });\n\n      Object.keys(item_weight)\n        .sort((a, b) => b - a)\n        .forEach(v => {\n          const idxes = item_weight[v];\n          idxes.forEach(idx => {\n            regions.push(self.regions[idx]);\n            ranked.push(self._value[idx]);\n          });\n        });\n\n      regions.forEach((r, idx) => r.setIdx(idx));\n\n      self._value = ranked;\n      self.regions = regions;\n\n      // self.regions = ranked;\n      self.setUpdate();\n    },\n  }));\n\nconst ListModel = types.compose(\n  \"ListModel\",\n  TagAttrs,\n  Model,\n);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} alt=\"image\" />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxListView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxList = inject(\"store\")(observer(HtxListView));\n\nRegistry.addTag(\"list\", ListModel, HtxList);\n\nexport { ListModel, HtxList };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Registry from \"../../core/Registry\";\nimport { types, getParentOfType, destroy, getRoot, getParent } from \"mobx-state-tree\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { List } from \"semantic-ui-react\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { runTemplate, variableNotation } from \"../../core/Template\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\nconst RankerItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * Ranker tag, used to ranking models\n * @example\n * <View>\n *   <Ranker name=\"ranker\" value=\"$items\"></Ranker>\n * </View>\n * @name Ranker\n * @param {string} name of group\n * @param {y|x=} [axis=y] axis direction\n * @param {string} sortedHighlightColor sorted color\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  // elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  ranked: types.optional(types.string, \"true\"),\n  sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"ranker\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(RankerItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    _addRegion(val, idx) {\n      const reg = RankerItemModel.create({\n        value: val,\n        idx: idx,\n        _value: val,\n      });\n\n      self.regions.push(reg);\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex == newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          // weights: ranked,\n          items: self.regions.map(r => r.value),\n          selected: self.regions.map(r => r.selected),\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      obj.value.items.forEach((v, idx) => {\n        self._addRegion(v, idx);\n      });\n\n      self.setUpdate();\n    },\n  }));\n\nconst RankerModel = types.compose(\n  \"RankerModel\",\n  TagAttrs,\n  Model,\n);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxRankerView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxRanker = inject(\"store\")(observer(HtxRankerView));\n\nRegistry.addTag(\"ranker\", RankerModel, HtxRanker);\n\nexport { RankerModel, HtxRanker };\n","/**\n * Libraries\n */\nimport React, { Component } from \"react\";\nimport parse5 from \"parse5\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getSnapshot } from \"mobx-state-tree\";\nimport { Segment } from \"semantic-ui-react\";\nimport { Result, Spin, notification } from \"antd\";\n\n/**\n * Core\n */\nimport Registry from \"../../core/Registry\";\nimport Requests from \"../../core/Requests\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Tree from \"../../core/Tree\";\n\n/**\n * Components\n */\nimport Completions from \"../Completions/Completions\";\nimport Controls from \"../Controls/Controls\";\nimport Panel from \"../Panel/Panel\";\nimport Settings from \"../Settings/Settings\";\nimport Debug from \"../Debug\";\nimport SideColumn from \"../SideColumn/SideColumn\";\n\n/**\n * Visual\n */\nimport { ViewModel } from \"../../interfaces/visual/View\";\nimport { TableModel } from \"../../interfaces/visual/Table\";\nimport { HeaderModel } from \"../../interfaces/visual/Header\";\nimport { HyperTextModel } from \"../../interfaces/visual/HyperText\";\n\n/**\n * Object\n */\nimport { AudioModel } from \"../../interfaces/object/Audio\";\nimport { AudioPlusModel } from \"../../interfaces/object/AudioPlus\";\nimport { ImageModel } from \"../../interfaces/object/Image\";\nimport { TextModel } from \"../../interfaces/object/Text\";\nimport { DialogModel } from \"../../interfaces/object/Dialog\";\n\n/**\n * Control\n */\nimport { RectangleModel } from \"../../interfaces/control/Rectangle\";\nimport { PolygonModel } from \"../../interfaces/control/Polygon\";\nimport { RectangleLabelsModel } from \"../../interfaces/control/RectangleLabels\";\nimport { PolygonLabelsModel } from \"../../interfaces/control/PolygonLabels\";\nimport { ChoicesModel } from \"../../interfaces/control/Choices\";\nimport { TextAreaModel } from \"../../interfaces/control/TextArea\";\nimport { RatingModel } from \"../../interfaces/control/Rating\";\nimport { ListModel } from \"../../interfaces/control/List\";\nimport { RankerModel } from \"../../interfaces/control/Ranker\";\n\n/**\n * Styles\n */\nimport styles from \"./App.module.scss\";\n\n/**\n * App\n */\nconst App = inject(\"store\")(\n  observer(\n    class App extends Component {\n      renderSuccess() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"Done!\" />;\n      }\n\n      renderNoCompletion() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"No more completions\" />;\n      }\n\n      renderNothingToLabel() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"No more data available for labeling\" />;\n      }\n\n      renderLoader() {\n        return <Result icon={<Spin size=\"large\" />} />;\n      }\n\n      render() {\n        const self = this;\n        const { store } = this.props;\n\n        if (store.isLoading) return this.renderLoader();\n\n        if (store.noTask) return this.renderNothingToLabel();\n\n        if (store.labeledSuccess) return this.renderSuccess();\n\n        if (!store.completionStore.currentCompletion) return this.renderNoCompletion();\n\n        const { root } = store.completionStore.currentCompletion;\n\n        return (\n          <div className={styles.editor}>\n            <Settings store={store} />\n            <Provider store={store}>\n              <div>\n                {store.hasInterface(\"panel\") && <Panel store={store} />}\n\n                {store.showingDescription && (\n                  <Segment>\n                    <div dangerouslySetInnerHTML={{ __html: store.description }} />\n                  </Segment>\n                )}\n\n                <div className={\"common-container\"}>\n                  <Segment style={{ maxWidth: \"1200px\", minWidth: \"70%\" }}>\n                    {Tree.renderItem(root)}\n                    {store.hasInterface(\"submit\") && <Controls />}\n                  </Segment>\n\n                  <div className={styles.menu}>\n                    {store.hasInterface(\"completions\") && <Completions store={store} />}\n\n                    {store.hasInterface(\"side-column\") && <SideColumn store={store} />}\n                  </div>\n                </div>\n              </div>\n            </Provider>\n          </div>\n        );\n      }\n    },\n  ),\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport Utilities from \"../utils\";\n\nconst TaskStore = types\n  .model(\"Task\", {\n    id: types.identifierNumber,\n    data: types.maybeNull(types.string),\n    project: types.number,\n  })\n  .views(self => ({\n    get app() {\n      return getParent(self);\n    },\n\n    /**\n     * Return JSON with task data\n     * @returns {object}\n     */\n    get dataObj() {\n      if (Utilities.Checkers.isStringJSON(self.data)) {\n        return JSON.parse(self.data);\n      } else {\n        return null;\n      }\n    },\n  }));\n\nexport default TaskStore;\n","import { types, resolvePath, getEnv, onSnapshot, getSnapshot, applySnapshot } from \"mobx-state-tree\";\nimport { IObservableArray } from \"mobx\";\n\nconst TimeTraveller = types\n  .model(\"TimeTraveller\", {\n    history: types.array(types.frozen()),\n    undoIdx: -1,\n    targetPath: \"\",\n\n    createdIdx: 1,\n\n    isFrozen: types.optional(types.boolean, false),\n    frozenIdx: -1,\n  })\n  .views(self => ({\n    get canUndo() {\n      // [TODO] since we initialize state a bit incorrectly we end up with 2 items in history\n      // before even any action takes place. To protect those items we keep them in history forever\n      return self.undoIdx > 1;\n    },\n    get canRedo() {\n      return self.undoIdx < self.history.length - 1;\n    },\n  }))\n  .actions(self => {\n    let targetStore;\n    let snapshotDisposer;\n    let skipNextUndoState = false;\n\n    return {\n      freeze() {\n        self.isFrozen = true;\n        skipNextUndoState = true;\n        self.frozenIdx = self.undoIdx;\n      },\n\n      addUndoState(ss) {\n        if (skipNextUndoState) {\n          // skip recording if this state was caused by undo / redo\n          skipNextUndoState = false;\n          return;\n        }\n        self.history.splice(self.undoIdx + 1);\n        self.history.push(ss);\n        self.undoIdx = self.history.length - 1;\n      },\n      afterCreate() {\n        targetStore = self.targetPath ? resolvePath(self, self.targetPath) : getEnv(self).targetStore;\n\n        if (!targetStore)\n          throw new Error(\n            \"Failed to find target store for TimeTraveller. Please provide `targetPath`  property, or a `targetStore` in the environment\",\n          );\n        // TODO: check if targetStore doesn't contain self\n        // if (contains(targetStore, self)) throw new Error(\"TimeTraveller shouldn't be recording itself. Please specify a sibling as taret, not some parent\")\n        // start listening to changes\n        snapshotDisposer = onSnapshot(targetStore, snapshot => this.addUndoState(snapshot));\n        // record an initial state if no known\n        if (self.history.length === 0) {\n          this.addUndoState(getSnapshot(targetStore));\n        }\n\n        self.createdIdx = self.undoIdx;\n      },\n      beforeDestroy() {\n        snapshotDisposer();\n      },\n      undo() {\n        if (self.isFrozen && self.frozenIdx <= self.undoIdx) return;\n\n        self.undoIdx--;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      redo() {\n        self.undoIdx++;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      set(idx) {\n        self.undoIdx = idx;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      reset() {\n        self.undoIdx = self.createdIdx;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n    };\n  });\n\nexport default TimeTraveller;\n","import keymaster from \"keymaster\";\n\nlet _hotkeys_map = {};\n\n/**\n * Add key\n * @param {*} key\n * @param {*} func\n */\nfunction addKey(key, func) {\n  if (_hotkeys_map[key]) return;\n\n  _hotkeys_map[key] = true;\n  keymaster(key, \"main\", func);\n}\n\n/**\n * Unbund all hotkeys\n */\nfunction unbindAll() {\n  for (let key of Object.keys(_hotkeys_map)) keymaster.unbind(key);\n\n  _hotkeys_map = {};\n}\n\n/**\n * Set scope of hotkeys\n * @param {*} scope\n */\nfunction setScope(scope) {\n  keymaster.setScope(scope);\n}\n\n/**\n * Create combination\n */\nfunction makeComb() {\n  let prefix = null;\n  let st = \"1234567890qwertasdfgzxcvbyuiophjklnm\";\n  let combs = st.split(\"\");\n\n  for (var i = 0; i <= combs.length; i++) {\n    let comb;\n    if (prefix) comb = prefix + \"+\" + combs[i];\n    else comb = combs[i];\n\n    if (!_hotkeys_map.hasOwnProperty(comb)) return comb;\n  }\n\n  return null;\n}\n\nexport default { addKey, unbindAll, makeComb, setScope };\n","import { types, getParent, getEnv, flow, destroy, getMembers } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\nimport Types from \"../core/Types\";\n\nimport { TextRegionModel } from \"../interfaces/object/TextRegion\";\nimport { RectRegionModel } from \"../interfaces/object/RectRegion\";\nimport { AudioRegionModel } from \"../interfaces/object/AudioRegion\";\nimport { TextAreaRegionModel } from \"../interfaces/object/TextAreaRegion\";\nimport { PolygonRegionModel } from \"../interfaces/object/PolygonRegion\";\n\nconst Relation = types\n  .model(\"Relation\", {\n    node1: types.reference(\n      types.union(TextRegionModel, RectRegionModel, AudioRegionModel, TextAreaRegionModel, PolygonRegionModel),\n    ),\n    node2: types.reference(\n      types.union(TextRegionModel, RectRegionModel, AudioRegionModel, TextAreaRegionModel, PolygonRegionModel),\n    ),\n  })\n  .actions(self => ({\n    toggleHighlight() {\n      if (self.node1 == self.node2) {\n        self.node1.toggleHightlight();\n      } else {\n        self.node1.toggleHightlight();\n        self.node2.toggleHightlight();\n      }\n    },\n  }));\n\nexport default types\n  .model(\"RelationStore\", {\n    relations: types.array(Relation),\n  })\n  .actions(self => ({\n    findRelations(node1, node2) {\n      if (!node2) {\n        return self.relations.filter(rl => {\n          return rl.node1.id == node1.id || rl.node2.id == node1.id;\n        });\n      }\n\n      return self.relations.filter(rl => {\n        return rl.node1.id == node1.id && rl.node2.id == node2.id;\n      });\n    },\n\n    nodesRelated(node1, node2) {\n      return self.findRelations(node1, node2).length > 0;\n    },\n\n    addRelation(node1, node2) {\n      if (self.nodesRelated(node1, node2)) return;\n\n      const rl = Relation.create({\n        node1: node1,\n        node2: node2,\n      });\n\n      // self.relations.unshift(rl);\n      self.relations.push(rl);\n\n      return rl;\n    },\n\n    deleteRelation(rl) {\n      destroy(rl);\n    },\n\n    deleteNodeRelation(node) {\n      // lookup $node and delete it's relation\n      const rl = self.findRelations(node);\n      rl.length && rl.forEach(self.deleteRelation);\n    },\n\n    serializeCompletion() {\n      return self.relations.map(r => {\n        return {\n          from_id: r.node1.pid,\n          to_id: r.node2.pid,\n          type: \"relation\",\n        };\n      });\n    },\n\n    deserializeRelation(node1, node2) {\n      self.addRelation(node1, node2);\n    },\n  }));\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport { TextRegionModel } from \"../interfaces/object/TextRegion\";\nimport { RectRegionModel } from \"../interfaces/object/RectRegion\";\nimport { PolygonRegionModel } from \"../interfaces/object/PolygonRegion\";\nimport { AudioRegionModel } from \"../interfaces/object/AudioRegion\";\nimport { TextAreaRegionModel } from \"../interfaces/object/TextAreaRegion\";\n\nexport default types\n  .model(\"RegionStore\", {\n    regions: types.array(\n      types.safeReference(\n        types.union(TextRegionModel, RectRegionModel, PolygonRegionModel, AudioRegionModel, TextAreaRegionModel),\n      ),\n    ),\n  })\n  .actions(self => ({\n    addRegion(region) {\n      self.regions.push(region);\n    },\n\n    findRegion(pid) {\n      return self.regions.find(r => r.pid === pid);\n    },\n\n    /**\n     * Delete region\n     * @param {obj} region\n     */\n    deleteRegion(region) {\n      const arr = self.regions;\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === region) {\n          arr.splice(i, 1);\n        }\n      }\n    },\n\n    unselectAll() {\n      self.regions.forEach(r => r.unselectRegion());\n      getParent(self).setHighlightedNode(null);\n    },\n\n    unhighlightAll() {\n      self.regions.forEach(r => r.setHighlight(false));\n    },\n  }));\n","import { types, getParent, getEnv, flow, destroy, detach, getMembers } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\nimport Types from \"../core/Types\";\n\nimport Registry from \"../core/Registry\";\nimport Tree from \"../core/Tree\";\nimport TimeTraveller from \"../core/TimeTraveller\";\nimport Hotkey from \"../core/Hotkey\";\n\nimport RelationStore from \"./RelationStore\";\nimport RegionStore from \"./RegionStore\";\nimport { RectangleModel } from \"../interfaces/control/Rectangle\";\n\nimport * as HtxObjectModel from \"../interfaces/object\";\n\nconst Completion = types\n  .model(\"Completion\", {\n    id: types.identifier,\n    pk: types.optional(types.integer, 1),\n    selected: types.optional(types.boolean, false),\n\n    createdDate: types.optional(types.string, new Date().toISOString()),\n    createdAgo: types.maybeNull(types.string),\n    createdBy: types.optional(types.string, \"Admin\"),\n\n    honeypot: types.optional(types.boolean, false),\n\n    root: Types.allModelsTypes(),\n    names: types.map(types.reference(Types.allModelsTypes())),\n    toNames: types.map(types.array(types.reference(Types.allModelsTypes()))),\n\n    history: types.optional(TimeTraveller, { targetPath: \"../root\" }),\n\n    dragMode: types.optional(types.boolean, false),\n\n    relationMode: types.optional(types.boolean, false),\n    relationStore: types.optional(RelationStore, {\n      relations: [],\n    }),\n\n    normalizationMode: types.optional(types.boolean, false),\n    // normalizationStore: types.optional(NormalizationStore, {\n    //     normalizations: []\n    // }),\n\n    regionStore: types.optional(RegionStore, {\n      regions: [],\n    }),\n\n    highlightedNode: types.maybeNull(\n      types.union(\n        types.safeReference(HtxObjectModel.TextRegionModel),\n        types.safeReference(HtxObjectModel.RectRegionModel),\n        types.safeReference(HtxObjectModel.AudioRegionModel),\n        types.safeReference(HtxObjectModel.TextAreaRegionModel),\n        types.safeReference(HtxObjectModel.PolygonRegionModel),\n        types.safeReference(RectangleModel),\n      ),\n    ),\n  })\n  .views(self => ({\n    get store() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    reinitHistory() {\n      self.history = { targetPath: \"../root\" };\n    },\n    // send update to server\n    _updateServerState(state) {\n      let appStore = getParent(self, 3);\n      let url = \"/api/tasks/\" + appStore.task.id + \"/completions/\" + self.pk + \"/\";\n\n      getEnv(self).patch(url, JSON.stringify(state));\n    },\n\n    setHoneypot() {\n      self.honeypot = true;\n      self._updateServerState({ honeypot: self.honeypot });\n    },\n\n    setDragMode(val) {\n      self.dragMode = val;\n    },\n\n    setNormalizationMode(val) {\n      self.normalizationMode = val;\n    },\n\n    setHighlightedNode(node) {\n      self.highlightedNode = node;\n    },\n\n    startRelationMode(node1) {\n      self._relationObj = node1;\n      self.relationMode = true;\n    },\n\n    stopRelationMode() {\n      self._relationObj = null;\n      self.relationMode = false;\n\n      self.regionStore.unhighlightAll();\n    },\n\n    deleteAllRegions() {\n      self.regionStore.regions.forEach(r => r.deleteRegion());\n    },\n\n    addRegion(reg) {\n      self.regionStore.unselectAll();\n      self.regionStore.addRegion(reg);\n\n      if (self.relationMode) {\n        self.addRelation(reg);\n        self.stopRelationMode();\n      }\n    },\n\n    /**\n     * Add relation\n     * @param {*} reg\n     */\n    addRelation(reg) {\n      self.relationStore.addRelation(self._relationObj, reg);\n    },\n\n    /**\n     * Remove honeypot\n     */\n    removeHoneypot() {\n      self.honeypot = false;\n      self._updateServerState({ honeypot: self.honeypot });\n    },\n\n    traverseTree(cb) {\n      let visitNode;\n      visitNode = function(node) {\n        cb(node);\n\n        if (node.children) {\n          node.children.forEach(chld => visitNode(chld));\n        }\n      };\n\n      visitNode(self.root);\n    },\n\n    /**\n     *\n     */\n    beforeSend() {\n      self.traverseTree(node => {\n        if (node && node.beforeSend) {\n          node.beforeSend();\n        }\n      });\n\n      self.stopRelationMode();\n      self.regionStore.unselectAll();\n    },\n\n    /**\n     * Delete region\n     * @param {*} region\n     */\n    deleteRegion(region) {\n      destroy(region);\n    },\n\n    afterCreate() {\n      self.traverseTree(node => {\n        // create mapping from name to Model (by ref)\n        if (node && node.name && node.id) self.names.set(node.name, node.id);\n\n        if (node && node.toname && node.id) {\n          const val = self.toNames.get(node.toname);\n          if (val) {\n            val.push(node.id);\n          } else {\n            self.toNames.set(node.toname, [node.id]);\n          }\n        }\n      });\n\n      Hotkey.unbindAll();\n\n      // [TODO] we need to traverse this two times, fix\n      self.traverseTree(node => {\n        if (node && node.onHotKey && node.hotkey) Hotkey.addKey(node.hotkey, node.onHotKey);\n      });\n\n      self.traverseTree(node => {\n        if (node && node.onHotKey && !node.hotkey) {\n          const comb = Hotkey.makeComb();\n\n          if (!comb) return;\n\n          node.hotkey = comb;\n          Hotkey.addKey(node.hotkey, node.onHotKey);\n        }\n      });\n\n      Hotkey.setScope(\"main\");\n    },\n\n    serializeCompletion() {\n      const arr = [];\n\n      self.traverseTree(node => {\n        if (node.toStateJSON) {\n          const val = node.toStateJSON();\n\n          if (val) arr.push(val);\n        }\n      });\n\n      const relations = self.relationStore.serializeCompletion();\n      arr.push(relations);\n\n      const flatten = arr => {\n        return arr.reduce(function(flat, toFlatten) {\n          return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n        }, []);\n      };\n\n      return flatten(arr);\n    },\n\n    /**\n     * Deserialize completion of models\n     */\n    deserializeCompletion(json) {\n      json.forEach(obj => {\n        if (obj[\"type\"] !== \"relation\") {\n          const names = obj.to_name.split(\",\");\n          names.forEach(name => {\n            const toModel = self.names.get(name);\n            if (!toModel) throw new Error(\"No model found for \" + obj.to_name);\n\n            const fromModel = self.names.get(obj.from_name);\n            if (!fromModel) throw new Error(\"No model found for \" + obj.from_name);\n\n            toModel.fromStateJSON(obj, fromModel);\n          });\n        } else {\n          self.relationStore.deserializeRelation(\n            self.regionStore.findRegion(obj.from_id),\n            self.regionStore.findRegion(obj.to_id),\n          );\n        }\n      });\n    },\n  }));\n\nexport default types\n  .model(\"CompletionStore\", {\n    completions: types.array(Completion),\n    selected: types.maybeNull(types.reference(Completion)),\n  })\n  .views(self => ({\n    /**\n     * Get current completion\n     */\n    get currentCompletion() {\n      return self.selected && self.completions.find(c => c.id === self.selected.id);\n    },\n\n    /**\n     * Get parent\n     */\n    get store() {\n      return getParent(self);\n    },\n\n    /**\n     * Get only those that were saved\n     */\n    get savedCompletions() {\n      return self.completions.filter(c => !c.was_generated);\n    },\n  }))\n  .actions(self => {\n    function selectCompletion(id) {\n      self.completions.map(c => (c.selected = false));\n      const c = self.completions.find(c => c.id === id);\n\n      // [FIXME]\n      // if (self.selected && self.selected.id !== c.id)\n      //     c.history.reset();\n\n      c.selected = true;\n      self.selected = c;\n    }\n\n    /**\n     * Adding new completion\n     * @param {object} node\n     * @param {string} type\n     */\n    function addCompletion(node, type) {\n      const c = Completion.create(node);\n\n      if (self.store.task && type == \"initial\")\n        c.traverseTree(node => node.updateValue && node.updateValue(self.store));\n\n      self.completions.push(c);\n\n      return c;\n    }\n\n    const _deleteCompletion = flow(function* _deleteCompletion(pk) {\n      try {\n        const json = yield getEnv(self).remove(\"/api/tasks/\" + self.store.task.id + \"/completions/\" + pk + \"/\");\n      } catch (err) {\n        console.error(\"Failed to skip task \", err);\n      }\n    });\n\n    function destroyCompletion(completion) {\n      destroy(completion);\n\n      self.selected = null;\n      if (self.completions.length > 0) self.selectCompletion(self.completions[0].id);\n    }\n\n    function deleteCompletion(completion) {\n      _deleteCompletion(completion.pk);\n      destroyCompletion(completion);\n    }\n\n    function addSavedCompletion(c) {\n      const completionModel = Tree.treeToModel(self.store.config);\n      const modelClass = Registry.getModelByTag(completionModel.type);\n\n      let root = modelClass.create(completionModel);\n\n      const node = {\n        pk: c.id,\n        id: guidGenerator(),\n        createdAgo: c.created_ago,\n        createdBy: c.created_username,\n        honeypot: c.honeypot,\n        root: root,\n      };\n\n      const comp = self.addCompletion(node, \"list\");\n      return comp;\n    }\n\n    function addInitialCompletion() {\n      const completionModel = Tree.treeToModel(self.store.config);\n      const modelClass = Registry.getModelByTag(completionModel.type);\n\n      let root = modelClass.create(completionModel);\n\n      const node = {\n        id: guidGenerator(),\n        root: root,\n      };\n\n      if (self.store.expert) {\n        const { expert } = self.store;\n        node[\"createdBy\"] = expert.firstName + \" \" + expert.lastName;\n      } else {\n        node[\"createdBy\"] = \"Admin\";\n      }\n\n      return self.addCompletion(node, \"initial\");\n    }\n\n    return {\n      selectCompletion,\n      addCompletion,\n      deleteCompletion,\n      destroyCompletion,\n      addInitialCompletion,\n      addSavedCompletion,\n    };\n  });\n","import { types, getEnv, flow, getSnapshot } from \"mobx-state-tree\";\n\nimport Task from \"./TaskStore\";\nimport CompletionStore from \"./CompletionStore\";\nimport Hotkey from \"../core/Hotkey\";\n\nconst UserStore = types.model(\"UserStore\", {\n  pk: types.integer,\n  firstName: types.string,\n  lastName: types.string,\n});\n\nconst SettingsModel = types\n  .model(\"SettingsModel\", {\n    enableHotkeys: types.optional(types.boolean, true),\n    enablePanelHotkeys: types.optional(types.boolean, true),\n    enableTooltips: types.optional(types.boolean, true),\n  })\n  .actions(self => ({\n    toggleHotkeys() {\n      self.enableHotkeys = !self.enableHotkeys;\n      if (self.enableHotkeys) {\n        Hotkey.setScope(\"main\");\n      } else {\n        Hotkey.setScope(\"none\");\n      }\n    },\n\n    togglePanelHotkeys() {\n      self.enablePanelHotkeys = !self.enablePanelHotkeys;\n    },\n\n    toggleTooltips() {\n      self.enableTooltips = !self.enableTooltips;\n    },\n  }));\n\nexport default types\n  .model(\"AppStore\", {\n    config: types.string,\n\n    task: types.maybeNull(Task),\n    taskID: types.maybeNull(types.number),\n\n    interfaces: types.array(types.string),\n\n    completionStore: types.optional(CompletionStore, {\n      completions: [],\n    }),\n\n    projectID: types.integer,\n\n    expert: UserStore,\n\n    debug: types.optional(types.boolean, true),\n\n    settings: types.optional(SettingsModel, {}),\n\n    showingSettings: types.optional(types.boolean, false),\n    showingDescription: types.optional(types.boolean, false),\n    description: types.maybeNull(types.string),\n\n    isLoading: types.optional(types.boolean, false),\n    noTask: types.optional(types.boolean, false),\n    labeledSuccess: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get fetch() {\n      return getEnv(self).fetch;\n    },\n    get alert() {\n      return getEnv(self).alert;\n    },\n    get post() {\n      return getEnv(self).post;\n    },\n  }))\n  .actions(self => {\n    function setDescription(text) {\n      self.description = text;\n    }\n\n    function toggleSettings() {\n      self.showingSettings = !self.showingSettings;\n    }\n\n    const openDescription = flow(function* openDescription() {\n      let url = \"/api/projects/\" + self.projectID + \"/expert_instruction\";\n      const res = yield self.fetch(url);\n\n      if (res.status === 200) {\n        res.text().then(function(text) {\n          self.setDescription(text);\n        });\n      } else {\n        self.setDescription(\"No instructions for this task\");\n      }\n\n      self.showingDescription = true;\n    });\n\n    function closeDescription() {\n      self.showingDescription = false;\n    }\n\n    function markLoading(loading) {\n      self.isLoading = loading;\n    }\n\n    function hasInterface(name) {\n      return self.interfaces.find(i => name === i);\n    }\n\n    const afterCreate = function() {\n      if (!self.task) self.loadTask();\n\n      Hotkey.addKey(\"ctrl+enter\", self.sendTask);\n\n      if (self.hasInterface(\"submit:skip\")) Hotkey.addKey(\"ctrl+space\", self.skipTask);\n\n      Hotkey.addKey(\"ctrl+backspace\", function() {\n        const { selected } = self.completionStore;\n        selected.deleteAllRegions();\n      });\n\n      Hotkey.addKey(\"ctrl+z\", function() {\n        const { history } = self.completionStore.selected;\n        history && history.canUndo && history.undo();\n      });\n\n      Hotkey.addKey(\"escape\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.relationMode) {\n          c.stopRelationMode();\n        }\n      });\n\n      Hotkey.addKey(\"backspace\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.highlightedNode) {\n          c.highlightedNode.deleteRegion();\n        }\n      });\n    };\n\n    function loadTask() {\n      return self.taskID\n        ? _loadTask(\"/api/tasks/\" + self.taskID + \"/\")\n        : _loadTask(\"/api/projects/\" + self.projectID + \"/next\");\n    }\n\n    function addTask(json) {\n      self.task = Task.create(json);\n    }\n\n    function resetState() {\n      self.completionStore = CompletionStore.create({ completions: [] });\n      const c = self.completionStore.addInitialCompletion();\n\n      self.completionStore.selectCompletion(c.id);\n    }\n\n    function addGeneratedCompletion(data) {\n      if (\"completion_result\" in data && !self.hasInterface(\"predictions:hide\")) {\n        const c = self.completionStore.selected;\n        c.deserializeCompletion(data[\"completion_result\"]);\n        c.reinitHistory();\n      }\n    }\n\n    const _loadTask = flow(function* _loadTask(url) {\n      try {\n        const res = yield self.fetch(url);\n\n        if (res instanceof Response && res.status === 404) {\n          self.markLoading(false);\n          self.noTask = true;\n          return;\n        }\n\n        res.json().then(function(r) {\n          r.data = JSON.stringify(r.data);\n\n          self.addTask(r);\n          self.markLoading(false);\n\n          if (self.hasInterface(\"completions\") && r.completions) {\n            self.completionStore.destroyCompletion(self.completionStore.selected);\n\n            for (var i = 0; i < r.completions.length; i++) {\n              const c = r.completions[i];\n\n              if (c.was_cancelled === true) continue;\n\n              const comp = self.completionStore.addSavedCompletion(c);\n              comp.traverseTree(node => node.updateValue && node.updateValue(self));\n              self.completionStore.selectCompletion(comp.id);\n\n              comp.deserializeCompletion(JSON.parse(c.result));\n              comp.reinitHistory();\n            }\n          } else {\n            if (self.completionStore.selected)\n              self.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n\n            self.addGeneratedCompletion(r);\n          }\n        });\n      } catch (err) {\n        console.error(\"Failed to load next task \", err);\n      }\n    });\n\n    const skipTask = flow(function* skipTask() {\n      self.markLoading(true);\n\n      try {\n        const json = yield self.post(\n          \"/api/tasks/\" + self.task.id + \"/cancel/\",\n          JSON.stringify({ data: JSON.stringify({ error: \"cancelled\" }) }),\n        );\n\n        self.resetState();\n        return loadTask();\n      } catch (err) {\n        console.error(\"Failed to skip task \", err);\n      }\n    });\n\n    const sendTask = flow(function* sendTask() {\n      const c = self.completionStore.selected;\n\n      c.beforeSend();\n\n      const res = c.serializeCompletion();\n\n      if (self.hasInterface(\"submit:check-empty\") && res.length === 0) {\n        alert(\"You need to label at least something!\");\n        return;\n      }\n\n      self.markLoading(true);\n\n      try {\n        const state = getSnapshot(c);\n\n        const body = JSON.stringify({\n          state: JSON.stringify(state),\n          result: JSON.stringify(res),\n        });\n\n        yield self.post(\"/api/tasks/\" + self.task.id + \"/completions/\", body);\n\n        if (hasInterface(\"submit:load\")) {\n          self.resetState();\n          return loadTask();\n        } else {\n          self.markLoading(false);\n          self.labeledSuccess = true;\n        }\n\n        delete state.history;\n      } catch (err) {\n        console.error(\"Failed to send task \", err);\n      }\n    });\n\n    function initializeStore({ completions }) {\n      // console.log(args);\n      // const { completions } = args;\n\n      // console.log(self.task);\n\n      const generatedCompletions = [];\n      const { completionStore } = self;\n\n      if (completions && completions.length) {\n        for (var i = 0; i < completions.length; i++) {\n          const c = completions[i];\n\n          if (c.was_cancelled === true) continue;\n\n          if (c.was_generated) generatedCompletions.push(c);\n        }\n      }\n\n      //         else {\n      // const comp = completionStore.addSavedCompletion(c);\n      // completionStore.selectCompletion(comp.id);\n\n      // comp.deserializeCompletion(JSON.parse(c.result));\n      // comp.reinitHistory();\n\n      // const comp = JSON.parse(c.state);\n\n      // comp.pk = c.id;\n      // comp.createdAgo = c.created_ago;\n      // comp.honeypot = c.honeypot;\n\n      // completionStore.addCompletion(comp, 'list');\n      //     }\n      // }\n\n      //     if (completionStore.completions.length)\n      //         completionStore.selectCompletion(completionStore.completions[0].id);\n      // }\n\n      if (completionStore.completions.length === 0) {\n        const c = self.completionStore.addInitialCompletion();\n        self.completionStore.selectCompletion(c.id);\n\n        if (generatedCompletions.length > 0) {\n          let data = generatedCompletions[0].result;\n\n          if (typeof generatedCompletions[0].result === \"string\") {\n            data = JSON.parse(generatedCompletions[0].result);\n          }\n\n          c.deserializeCompletion(data);\n\n          c.reinitHistory();\n        }\n      }\n    }\n\n    return {\n      afterCreate,\n      loadTask,\n      addTask,\n      hasInterface,\n      skipTask,\n      sendTask,\n      markLoading,\n      resetState,\n      openDescription,\n      closeDescription,\n      setDescription,\n      toggleSettings,\n      initializeStore,\n      addGeneratedCompletion,\n    };\n  });\n","function getData() {\n  // TODO remove, this is here because MST either takes string or a\n  // fully features typed tree\n  if (window.taskData) window.taskData.data = JSON.stringify(window.taskData.data);\n\n  const data = {\n    projectID: window.projectID,\n    isLoading: false,\n    config: window.editorAppConfig,\n    // task: window.taskData,\n    taskID: window.taskID,\n    expert: window.expertData,\n    debug: window.debugEditor,\n    interfaces: window.editorInterfaces ? window.editorInterfaces : [\"basic\", \"completions\"],\n  };\n\n  // this is here to make project_render_editor to work because it\n  // expects static config\n  if (window.preRender) {\n    data[\"task\"] = window.taskData;\n  }\n\n  // /tasks/$id/explore\n  if (window.explore) {\n    data[\"interfaces\"] = window.editorInterfaces ? window.editorInterfaces : [\"basic\", \"completions\"];\n  } else {\n    data[\"interfaces\"] = window.editorInterfaces\n      ? window.editorInterfaces\n      : [\"basic\", \"submit\", \"submit:skip\", \"submit:submit\"];\n  }\n\n  return data;\n}\n\nfunction rootElement() {\n  const el = document.createElement(\"div\");\n  var root = document.getElementById(\"root\");\n  root.innerHTML = \"\";\n  root.appendChild(el);\n\n  return el;\n}\n\nfunction getState() {\n  const c = window.taskData && window.taskData.completions ? window.taskData.completions : null;\n\n  return {\n    completions: c,\n  };\n}\n\nexport default { getData, getState, rootElement };\n","/**\n * Object with configs for test\n * TODO: sorting other configs\n */\nconst configEnv = {\n  default: {\n    config: `<View><Text name=\"txt-1\" value=\"$text\"></Text></View>`,\n    data: {\n      text: `mobx-state-tree is a state container that combines the simplicity and ease of mutable data with the traceability of immutable data and the reactiveness and performance of observable data.\n      Simply put, mobx-state-tree tries to combine the best features of both immutability (transactionality, traceability and composition) and mutability (discoverability, co-location and encapsulation) based approaches to state management; everything to provide the best developer experience possible. Unlike MobX itself, mobx-state-tree is very opinionated about how data should be structured and updated. This makes it possible to solve many common problems out of the box.\n      Central in MST (mobx-state-tree) is the concept of a living tree. The tree consists of mutable, but strictly protected objects enriched with runtime type information. In other words, each tree has a shape (type information) and state (data). From this living tree, immutable, structurally shared, snapshots are automatically generated.`,\n    },\n    task: {\n      id: 402324,\n      completions: [],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n  },\n  gptc: {\n    config: `<View>\n        <Text name=\"mytext\" value=\"$text\"></Text>\n        <Choices name=\"mytext_class\" toName=\"mytext\" choice=\"single\">\n          <Choice value=\"important\" alias=\"Important document\"></Choice>\n          <Choice value=\"other\" alias=\"Other\"></Choice>\n        </Choices>\n      </View>`,\n    data: {\n      text: `mobx-state-tree is a state container that combines the simplicity and ease of mutable data with the traceability of immutable data and the reactiveness and performance of observable data.\n      Simply put, mobx-state-tree tries to combine the best features of both immutability (transactionality, traceability and composition) and mutability (discoverability, co-location and encapsulation) based approaches to state management; everything to provide the best developer experience possible. Unlike MobX itself, mobx-state-tree is very opinionated about how data should be structured and updated. This makes it possible to solve many common problems out of the box.\n      Central in MST (mobx-state-tree) is the concept of a living tree. The tree consists of mutable, but strictly protected objects enriched with runtime type information. In other words, each tree has a shape (type information) and state (data). From this living tree, immutable, structurally shared, snapshots are automatically generated.`,\n    },\n    task: {\n      id: 402324,\n      completions: [],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n  },\n  ner: {\n    config: `<View>\n      <Text name=\"text\" value=\"$text\" selelectwithoutlabel=\"false\"></Text>\n      <Labels name=\"ner\" toName=\"text\">\n        <Label value=\"Person\"></Label>\n        <Label value=\"Organization\" background=\"#FFAB00\"></Label>\n        <Label value=\"Fact\"></Label>\n        <Label value=\"Money\"></Label>\n        <Label value=\"Date\"></Label>\n        <Label value=\"Time\"></Label>\n        <Label value=\"Ordinal\"></Label>\n        <Label value=\"Percent\"></Label>\n        <Label value=\"Product\"></Label>\n        <Label value=\"Language\"></Label>\n        <Label value=\"Location\"></Label>\n      </Labels>\n    </View>`,\n    data: {\n      text: `mobx-state-tree is a state container that combines the simplicity and ease. Apple's and 😋App Store are still broken http://t.co/gIrx8G4pcC http://t.co/fwTXH2aSvC`,\n    },\n    task: {\n      id: 402324,\n      completions: [\n        {\n          id: 137601,\n          model_version: \"2019-04-10 10:52:20.591839\",\n          result: [\n            {\n              id: \"799492be\",\n              from_name: \"ner\",\n              to_name: \"text\",\n              source: \"$text\",\n              type: \"labels\",\n              value: {\n                start: 0,\n                end: 3,\n                text: \"mobx\",\n                labels: [\"Organization\"],\n              },\n            },\n            {\n              id: \"799492sbe\",\n              from_name: \"ner\",\n              to_name: \"text\",\n              source: \"$text\",\n              type: \"labels\",\n              value: {\n                start: 2,\n                end: 5,\n                text: \"bx-s\",\n                labels: [\"Person\"],\n              },\n            },\n          ],\n          score: 1.0,\n          created_at: \"2019-04-10T10:53:28.822843Z\",\n          updated_at: \"2019-04-10T10:53:28.822851Z\",\n          task: 71937,\n          was_generated: true,\n        },\n      ],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n  },\n  bbox: {\n    config: `<View>\n        <RectangleLabels name=\"tag\" toName=\"image\">\n          <Label value=\"Cat\"></Label>\n          <Label value=\"Dog\" background=\"blue\"></Label>\n        </RectangleLabels>\n        <Image name=\"image\" value=\"$image_url\"></Image>\n      </View>\n    `,\n    task: {\n      id: 402324,\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n      completions: [],\n    },\n    data: {\n      image_url: \"https://go.heartex.net/static/samples/kittens.jpg\",\n    },\n  },\n  image: {\n    config: `<View> <Image name=\"image\" value=\"$image_url\"/> <Choices name=\"cats_or_dogs\" toName=\"image\">   <Choice value=\"Cat\"></Choice>   <Choice value=\"Dog\"></Choice> </Choices></View>`,\n    data: {\n      image_url: \"http://s3.amazonaws.com/heartex-private/cats_n_dogs/training_set/dogs/dog.887.jpg\",\n    },\n    task: {\n      id: 402324,\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      exposed: true,\n      project: 139,\n      completions: [\n        {\n          completed_by: null,\n          created_ago: \"2 months\",\n          created_at: \"2019-05-14T05:02:41.289000Z\",\n          created_username: \"\",\n          honeypot: true,\n          id: 1430,\n          result: '[{\"type\":\"choices\",\"value\":{\"choices\":[\"Dog\"]},\"to_name\":\"image\",\"from_name\":\"cats_or_dogs\"}]',\n          state: \"{}\",\n          task: 163260,\n          updated_at: \"2019-05-14T05:02:41.289000Z\",\n          was_cancelled: false,\n          was_generated: true,\n        },\n      ],\n    },\n  },\n  cda: {\n    config: `<View>\n    <HyperText name=\"dialog\" value=\"$dialogs\"></HyperText>\n    <Header value=\"Rate last answer:\"></Header>\n    <Choices name=\"chc-1\" choice=\"single-radio\" toName=\"dialog\">\n      <Choice value=\"Bad answer\"></Choice>\n      <Choice value=\"Neutral answer\"></Choice>\n      <Choice value=\"Good answer\"></Choice>\n    </Choices>\n    <Header value=\"Your answer:\"></Header>\n    <TextArea name=\"answer\"></TextArea>\n  </View>`,\n    task: {},\n    data: {},\n  },\n  audio: {\n    config: `<View>\n        <Header value=\"Select label:\"></Header>\n        <Labels name=\"label\" toName=\"audio\">\n          <Label value=\"Politics\" background=\"red\"></Label>\n          <Label value=\"Business\" background=\"blue\"></Label>\n          <Label value=\"Education\"></Label>\n        </Labels>\n        <Header value=\"Select audio region:\"></Header>\n        <AudioPlus name=\"audio\" value=\"$url\"></AudioPlus>\n      </View>`,\n\n    task: {\n      id: 402324,\n      completions: [\n        {\n          completed_by: 55,\n          created_ago: \"16 hours, 57 minutes\",\n          created_at: \"2019-07-19T17:48:15.465239Z\",\n          created_username: \"\",\n          honeypot: false,\n          id: 8440,\n          result: `[{\"id\":\"XPxpLMifV7\",\"from_name\":\"label\",\"to_name\":\"audio\",\"source\":\"$url\",\"type\":\"labels\",\"value\":{\"start\":0.7047114876227649,\"end\":2.369030107327593,\"labels\":[\"Politics\"]}},{\"id\":\"6ycG2nV3mp\",\"from_name\":\"label\",\"to_name\":\"audio\",\"source\":\"$url\",\"type\":\"labels\",\"value\":{\"start\":2.6014349596287176,\"end\":5.982550714074112,\"labels\":[\"Business\"]}}]`,\n          task: 761928,\n          updated_at: \"2019-07-19T17:48:15.465264Z\",\n          was_cancelled: false,\n        },\n      ],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n\n    data: {\n      url: \"https://s3-us-west-1.amazonaws.com/heartex-public/cello.mp3\",\n    },\n  },\n};\n\nexport default configEnv;\n","import configEnv from \"./config-development\";\n\n/**\n * Wrapper to generate development config\n * @param {string} config\n */\nfunction templateData(config) {\n  let task = configEnv[config].task;\n\n  window.T = task;\n\n  task = {\n    ...task,\n    data: JSON.stringify(configEnv[config].data),\n  };\n\n  return {\n    projectID: 1,\n    isLoading: false, // loading of editor\n    config: configEnv[config].config,\n    task: task,\n    taskID: 1,\n    expert: {\n      pk: 1,\n      lastName: \"Jones\",\n      firstName: \"Oliver\",\n    },\n    debug: window.location.search.indexOf(\"debug=true\") !== -1,\n    interfaces: window.editorInterfaces\n      ? window.editorInterfaces\n      : [\"basic\", \"completions\", \"submit\", \"panel\", \"side-column\"],\n  };\n}\n\n/**\n * Function to generate data\n * @member default - Default with text\n * @member gptc - General-purpose text classifier\n * @member ner - Named-entity recognition\n * @member gpic - General-purpose image classifier\n * @member gptg - General-purpose text tagging\n * @member cda - Chatbot Dialogs Analysis\n * @member bbox - Annotate And Categorize Objects In An Image Using A Bounding Box\n * @member audio - Audio Region Labeling\n *\n */\nfunction getData() {\n  return templateData(\"audio\");\n}\n\n/**\n * Get completions for task\n */\nfunction getState() {\n  const resultCompletions = getData().task.completions ? getData().task.completions : null;\n  return {\n    completions: resultCompletions,\n  };\n}\n\n/**\n * Function to return Root element\n */\nfunction rootElement() {\n  const el = document.createElement(\"div\");\n\n  el.style.marginTop = \"10px\";\n  el.style.marginBottom = \"10px\";\n  el.style.marginLeft = \"10px\";\n  el.style.marginRight = \"10px\";\n\n  document.body.appendChild(el);\n\n  return el;\n}\n\nexport default { getState, getData, rootElement };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./assets/styles/global.scss\";\n\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport AppStore from \"./stores/AppStore\";\nimport Requests from \"./core/Requests\";\n\nimport Prod from \"./env/prod\";\nimport Dev from \"./env/dev\";\n\n/**\n * Meaning we are starting from /tasks/$id/explore or /expert\n */\nconst Env = window.projectID ? Prod : Dev;\n\nconst app = AppStore.create(Env.getData(), {\n  fetch: Requests.fetcher,\n  patch: Requests.patch,\n  post: Requests.poster,\n  remove: Requests.remover,\n  alert: m => console.log(m), // Noop for demo: window.alert(m)\n});\n\napp.initializeStore(Env.getState());\n\nwindow.Htx = app;\n\nReactDOM.render(\n  <Provider store={app}>\n    <App />\n  </Provider>,\n  Env.rootElement(),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Entity_block__5kuFL\",\"button\":\"Entity_button__xA6_b\",\"labels\":\"Entity_labels__BXRvI\",\"tag\":\"Entity_tag__1FbqC\"};"],"sourceRoot":""}